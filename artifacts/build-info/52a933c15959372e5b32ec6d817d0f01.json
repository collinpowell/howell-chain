{"id":"52a933c15959372e5b32ec6d817d0f01","_format":"hh-sol-build-info-1","solcVersion":"0.8.17","solcLongVersion":"0.8.17+commit.8df45f5f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"contracts/SHRFStaking.sol":{"content":"//SPDX-License-Identifier: Unlicense\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\ncontract Staking is ReentrancyGuard, Ownable {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n    IERC20 public stakingToken;\r\n\r\n    struct record {\r\n        uint256 stakeTime;\r\n        uint256 stakeAmt;\r\n        uint256 lastUpdateTime;\r\n        uint256 accumulatedInterestToUpdateTime;\r\n        uint256 amtWithdrawn;\r\n    }\r\n    mapping(address => record) public addressMap;\r\n    mapping(uint256 => address) public addressStore;\r\n    uint256 public stakingAddresses = uint256(0);\r\n    uint256 public apr = uint256(5);\r\n    uint256 public totalWithdrawals = uint256(0);\r\n    uint256 private divisor= uint256(3_153_000_000_000);\r\n    event Staked(address indexed account);\r\n    event Unstaked(address indexed account);\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n    constructor(address _stakingToken) {\r\n        stakingToken = IERC20(_stakingToken);\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    /**\r\n     * Function totalStakedAmount\r\n     * The function takes in 0 variables. It can be called by functions both inside and outside of this contract. It does the following :\r\n     * creates an internal variable total with initial value 0\r\n     * repeat stakingAddresses times with loop variable i :  (creates an internal variable thisRecord with initial value addressMap with element addressStore with element Loop Variable i; and then updates total as (total) + (thisRecord with element stakeAmt))\r\n     * returns total as output\r\n     */\r\n    function totalStakedAmount() public view returns (uint256) {\r\n        uint256 total = uint256(0);\r\n        for (uint256 i = 0; i < stakingAddresses; i++) {\r\n            record memory thisRecord = addressMap[addressStore[i]];\r\n            total = (total + thisRecord.stakeAmt);\r\n        }\r\n        return total;\r\n    }\r\n\r\n    /**\r\n     * Function totalAccumulatedInterest\r\n     * The function takes in 0 variables. It can be called by functions both inside and outside of this contract. It does the following :\r\n     * creates an internal variable total with initial value 0\r\n     * repeat stakingAddresses times with loop variable i :  (updates total as (total) + (presentEarning with variable _address as addressStore with element Loop Variable i))\r\n     * returns total as output\r\n     */\r\n    function totalAccumulatedInterest() public view returns (uint256) {\r\n        uint256 total = uint256(0);\r\n        for (uint256 i = 0; i < stakingAddresses; i++) {\r\n            total = (total +\r\n                presentEarning(\r\n                    addressStore[i]\r\n                ));\r\n        }\r\n        return total;\r\n    }\r\n\r\n    /**\r\n     * Function presentEarning\r\n     * The function takes in 1 variable, (an address) _address. It can be called by functions both inside and outside of this contract. It does the following :\r\n     * creates an internal variable thisRecord with initial value addressMap with element _address\r\n     * returns (thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864)) as output\r\n     */\r\n    function presentEarning(\r\n        address _address\r\n    ) public view returns (uint256) {\r\n        record memory thisRecord = addressMap[_address];\r\n        return (thisRecord.accumulatedInterestToUpdateTime +\r\n            ((thisRecord.stakeAmt *\r\n                (block.timestamp - thisRecord.lastUpdateTime) *\r\n                apr) / divisor));\r\n    }\r\n\r\n    /**\r\n     * Function stake\r\n     * Daily Interest Rate : Variable apr\r\n     * Address Map : addressMap\r\n     * ERC20 Transfer : 0x33D512a749f6feFaDB832c91c0F23Bc27bE2E3d4, _stakeAmt\r\n     * The function takes in 1 variable, (zero or a positive integer) _stakeAmt. It can be called by functions both inside and outside of this contract. It does the following :\r\n     * checks that _stakeAmt is strictly greater than 0\r\n     * creates an internal variable thisRecord with initial value addressMap with element the address that called this function\r\n     * if (thisRecord with element stakeAmt) is equals to 0 then (updates addressMap (Element the address that called this function) as Struct comprising current time, _stakeAmt, current time, 0, 0; then updates addressStore (Element stakingAddresses) as the address that called this function; and then updates stakingAddresses as (stakingAddresses) + (1)) otherwise (updates addressMap (Element the address that called this function) as Struct comprising current time, ((thisRecord with element stakeAmt) + (_stakeAmt)), current time, ((thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864))), (thisRecord with element amtWithdrawn))\r\n     * calls ERC20's transferFrom function  with variable sender as the address that called this function, variable recipient as the address of this contract, variable amount as _stakeAmt\r\n     * emits event Staked with inputs the address that called this function\r\n     */\r\n    function stake(uint256 _stakeAmt) external nonReentrant {\r\n        require(\r\n            (_stakeAmt > uint256(0)),\r\n            \"Staked amount needs to be greater than 0\"\r\n        );\r\n        record memory thisRecord = addressMap[_msgSender()];\r\n        if ((thisRecord.stakeAmt == uint256(0))) {\r\n            addressMap[_msgSender()] = record(\r\n                block.timestamp,\r\n                _stakeAmt,\r\n                block.timestamp,\r\n                uint256(0),\r\n                uint256(0)\r\n            );\r\n            addressStore[stakingAddresses] = _msgSender();\r\n            stakingAddresses = (stakingAddresses +\r\n                uint256(1));\r\n        } else {\r\n            addressMap[_msgSender()] = record(\r\n                block.timestamp,\r\n                (thisRecord.stakeAmt + _stakeAmt),\r\n                block.timestamp,\r\n                (thisRecord.accumulatedInterestToUpdateTime +\r\n                    ((thisRecord.stakeAmt *\r\n                        (block.timestamp - thisRecord.lastUpdateTime) *\r\n                        apr) / divisor)),\r\n                thisRecord.amtWithdrawn\r\n            );\r\n        }\r\n        stakingToken.safeTransferFrom(_msgSender(), address(this), _stakeAmt);\r\n        emit Staked(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * Function unstake\r\n     * The function takes in 1 variable, (zero or a positive integer) _unstakeAmt. It can be called by functions both inside and outside of this contract. It does the following :\r\n     * creates an internal variable thisRecord with initial value addressMap with element the address that called this function\r\n     * checks that _unstakeAmt is less than or equals to (thisRecord with element stakeAmt)\r\n     * creates an internal variable newAccum with initial value (thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864))\r\n     * creates an internal variable interestToRemove with initial value ((newAccum) * (_unstakeAmt)) / (thisRecord with element stakeAmt)\r\n     * checks that (amount of native currency owned by the address of this contract) is greater than or equals to interestToRemove\r\n     * transfers interestToRemove of the native currency to the address that called this function\r\n     * checks that (ERC20's balanceOf function  with variable recipient as the address of this contract) is greater than or equals to _unstakeAmt\r\n     * calls ERC20's transfer function  with variable recipient as the address that called this function, variable amount as _unstakeAmt\r\n     * updates totalWithdrawals as (totalWithdrawals) + (interestToRemove)\r\n     * if _unstakeAmt is equals to (thisRecord with element stakeAmt) then (repeat stakingAddresses times with loop variable i :  (if (addressStore with element Loop Variable i) is equals to (the address that called this function) then (updates addressStore (Element Loop Variable i) as addressStore with element (stakingAddresses) - (1); then updates stakingAddresses as (stakingAddresses) - (1); and then terminates the for-next loop)))\r\n     * updates addressMap (Element the address that called this function) as Struct comprising (thisRecord with element stakeTime), ((thisRecord with element stakeAmt) - (_unstakeAmt)), (thisRecord with element lastUpdateTime), ((newAccum) - (interestToRemove)), ((thisRecord with element amtWithdrawn) + (interestToRemove))\r\n     * emits event Unstaked with inputs the address that called this function\r\n     */\r\n    function unstake(uint256 _unstakeAmt) external nonReentrant {\r\n        record memory thisRecord = addressMap[_msgSender()];\r\n        require(\r\n            (_unstakeAmt <= thisRecord.stakeAmt),\r\n            \"Withdrawing more than staked amount\"\r\n        );\r\n        uint256 newAccum = (thisRecord.accumulatedInterestToUpdateTime +\r\n            ((thisRecord.stakeAmt *\r\n                (block.timestamp - thisRecord.lastUpdateTime) *\r\n                apr) / divisor));\r\n        uint256 interestToRemove = ((newAccum * _unstakeAmt) /\r\n            thisRecord.stakeAmt);\r\n        require(\r\n            (address(this).balance >= interestToRemove),\r\n            \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\"\r\n        );\r\n        payable(_msgSender()).transfer(interestToRemove);\r\n        require(\r\n            (stakingToken.balanceOf(address(this)) >= _unstakeAmt),\r\n            \"Insufficient amount of the token in this contract to transfer out. Please contact the contract owner to top up the token.\"\r\n        );\r\n        stakingToken.transfer(_msgSender(), _unstakeAmt);\r\n        totalWithdrawals = (totalWithdrawals + interestToRemove);\r\n        if ((_unstakeAmt == thisRecord.stakeAmt)) {\r\n            for (uint256 i = 0; i < stakingAddresses; i++) {\r\n                if ((addressStore[i] == _msgSender())) {\r\n                    addressStore[i] = addressStore[\r\n                        (stakingAddresses - uint256(1))\r\n                    ];\r\n                    stakingAddresses = (stakingAddresses -\r\n                        uint256(1));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        addressMap[_msgSender()] = record(\r\n            thisRecord.stakeTime,\r\n            (thisRecord.stakeAmt - _unstakeAmt),\r\n            thisRecord.lastUpdateTime,\r\n            (newAccum - interestToRemove),\r\n            (thisRecord.amtWithdrawn + interestToRemove)\r\n        );\r\n        emit Unstaked(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * Function withdrawReward\r\n     * The function takes in 1 variable, (zero or a positive integer) _withdrawalAmt. It can only be called by functions outside of this contract. It does the following :\r\n     * creates an internal variable totalInterestEarnedTillNow with initial value presentEarning with variable _address as the address that called this function\r\n     * checks that _withdrawalAmt is less than or equals to totalInterestEarnedTillNow\r\n     * creates an internal variable thisRecord with initial value addressMap with element the address that called this function\r\n     * updates addressMap (Element the address that called this function) as Struct comprising (thisRecord with element stakeTime), (thisRecord with element stakeAmt), current time, ((totalInterestEarnedTillNow) - (_withdrawalAmt)), ((thisRecord with element amtWithdrawn) + (_withdrawalAmt))\r\n     * checks that (amount of native currency owned by the address of this contract) is greater than or equals to _withdrawalAmt\r\n     * transfers _withdrawalAmt of the native currency to the address that called this function\r\n     * updates totalWithdrawals as (totalWithdrawals) + (_withdrawalAmt)\r\n     */\r\n    function withdrawReward(uint256 _withdrawalAmt)\r\n        external\r\n        nonReentrant\r\n    {\r\n        uint256 totalInterestEarnedTillNow = presentEarning(\r\n                _msgSender()\r\n            );\r\n        require(\r\n            (_withdrawalAmt <= totalInterestEarnedTillNow),\r\n            \"Withdrawn amount must be less than withdrawable amount\"\r\n        );\r\n        record memory thisRecord = addressMap[_msgSender()];\r\n        addressMap[_msgSender()] = record(\r\n            thisRecord.stakeTime,\r\n            thisRecord.stakeAmt,\r\n            block.timestamp,\r\n            (totalInterestEarnedTillNow - _withdrawalAmt),\r\n            (thisRecord.amtWithdrawn + _withdrawalAmt)\r\n        );\r\n        require(\r\n            (address(this).balance >= _withdrawalAmt),\r\n            \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\"\r\n        );\r\n        payable(_msgSender()).transfer(_withdrawalAmt);\r\n        totalWithdrawals = (totalWithdrawals + _withdrawalAmt);\r\n    }\r\n\r\n    /**\r\n     * Function updateRecordsWithLatestInterestRates\r\n     * The function takes in 0 variables. It can only be called by other functions in this contract. It does the following :\r\n     * repeat stakingAddresses times with loop variable i :  (creates an internal variable thisRecord with initial value addressMap with element addressStore with element Loop Variable i; and then updates addressMap (Element addressStore with element Loop Variable i) as Struct comprising (thisRecord with element stakeTime), (thisRecord with element stakeAmt), current time, ((thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864))), (thisRecord with element amtWithdrawn))\r\n     */\r\n    function updateRecordsWithLatestInterestRates() internal {\r\n        for (uint256 i = 0; i < stakingAddresses; i++) {\r\n            record memory thisRecord = addressMap[addressStore[i]];\r\n            addressMap[addressStore[i]] = record(\r\n                thisRecord.stakeTime,\r\n                thisRecord.stakeAmt,\r\n                block.timestamp,\r\n                (thisRecord.accumulatedInterestToUpdateTime +\r\n                    ((thisRecord.stakeAmt *\r\n                        (block.timestamp - thisRecord.lastUpdateTime) *\r\n                        apr) /divisor)),\r\n                thisRecord.amtWithdrawn\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    /**\r\n     * Function modifyapr\r\n     * Notes for _apr : 10000 is one percent\r\n     * The function takes in 1 variable, (zero or a positive integer) _apr. It can be called by functions both inside and outside of this contract. It does the following :\r\n     * checks that the function is called by the owner of the contract\r\n     * calls updateRecordsWithLatestInterestRates\r\n     * updates apr as _apr\r\n     */\r\n    function modifyapr(uint256 _apr)\r\n        public\r\n        onlyOwner\r\n    {\r\n        updateRecordsWithLatestInterestRates();\r\n        apr = _apr;\r\n    }\r\n\r\n    /**\r\n     * Function withdrawNativeCurrency\r\n     * The function takes in 1 variable, (zero or a positive integer) _amt. It can be called by functions both inside and outside of this contract. It does the following :\r\n     * checks that the function is called by the owner of the contract\r\n     * checks that (amount of native currency owned by the address of this contract) is greater than or equals to _amt\r\n     * transfers _amt of the native currency to the address that called this function\r\n     */\r\n    function withdrawNativeCurrency(uint256 _amt) public onlyOwner {\r\n        require(\r\n            (address(this).balance >= _amt),\r\n            \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\"\r\n        );\r\n        payable(_msgSender()).transfer(_amt);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1021],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":1022,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1021,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,1021],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1885:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1914:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1895:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1895:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1895:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1875:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1875:9:0"},"nodeType":"ModifierInvocation","src":"1875:9:0"}],"name":"renounceOwnership","nameLocation":"1840:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1857:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1885:0:0"},"scope":112,"src":"1831:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2151:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2169:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2181:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2161:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2161:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2263:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2244:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2244:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2244:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1938:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2141:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2141:9:0"},"nodeType":"ModifierInvocation","src":"2141:9:0"}],"name":"transferOwnership","nameLocation":"2090:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2108:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2151:0:0"},"scope":112,"src":"2081:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2496:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2506:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2525:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2541:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2550:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2541:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2594:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2573:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2568:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2285:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2461:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2496:0:0"},"scope":112,"src":"2433:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1968:0","usedErrors":[]}],"src":"102:2521:0"},"id":0},"@openzeppelin/contracts/security/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","exportedSymbols":{"Context":[1021],"Pausable":[220]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:1"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":115,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":1022,"src":"130:30:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":117,"name":"Context","nameLocations":["632:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1021,"src":"632:7:1"},"id":118,"nodeType":"InheritanceSpecifier","src":"632:7:1"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"162:439:1","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":220,"linearizedBaseContracts":[220,1021],"name":"Pausable","nameLocation":"620:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":119,"nodeType":"StructuredDocumentation","src":"646:73:1","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":123,"name":"Paused","nameLocation":"730:6:1","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"745:7:1","nodeType":"VariableDeclaration","scope":123,"src":"737:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"737:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"736:17:1"},"src":"724:30:1"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"760:70:1","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":128,"name":"Unpaused","nameLocation":"841:8:1","nodeType":"EventDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"858:7:1","nodeType":"VariableDeclaration","scope":128,"src":"850:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"850:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"849:17:1"},"src":"835:32:1"},{"constant":false,"id":130,"mutability":"mutable","name":"_paused","nameLocation":"886:7:1","nodeType":"VariableDeclaration","scope":220,"src":"873:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":129,"name":"bool","nodeType":"ElementaryTypeName","src":"873:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":138,"nodeType":"Block","src":"986:32:1","statements":[{"expression":{"id":136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":134,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"996:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1006:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"996:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":137,"nodeType":"ExpressionStatement","src":"996:15:1"}]},"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"900:67:1","text":" @dev Initializes the contract in unpaused state."},"id":139,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":132,"nodeType":"ParameterList","parameters":[],"src":"983:2:1"},"returnParameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"986:0:1"},"scope":220,"src":"972:46:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":146,"nodeType":"Block","src":"1229:47:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":142,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"1239:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1239:19:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"ExpressionStatement","src":"1239:19:1"},{"id":145,"nodeType":"PlaceholderStatement","src":"1268:1:1"}]},"documentation":{"id":140,"nodeType":"StructuredDocumentation","src":"1024:175:1","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":147,"name":"whenNotPaused","nameLocation":"1213:13:1","nodeType":"ModifierDefinition","parameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"1226:2:1"},"src":"1204:72:1","virtual":false,"visibility":"internal"},{"body":{"id":154,"nodeType":"Block","src":"1476:44:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":150,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1486:14:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1486:16:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":152,"nodeType":"ExpressionStatement","src":"1486:16:1"},{"id":153,"nodeType":"PlaceholderStatement","src":"1512:1:1"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"1282:167:1","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":155,"name":"whenPaused","nameLocation":"1463:10:1","nodeType":"ModifierDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[],"src":"1473:2:1"},"src":"1454:66:1","virtual":false,"visibility":"internal"},{"body":{"id":163,"nodeType":"Block","src":"1668:31:1","statements":[{"expression":{"id":161,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1685:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":160,"id":162,"nodeType":"Return","src":"1678:14:1"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1526:84:1","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":164,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1624:6:1","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"1630:2:1"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":164,"src":"1662:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":158,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:1"},"scope":220,"src":"1615:84:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":175,"nodeType":"Block","src":"1818:55:1","statements":[{"expression":{"arguments":[{"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1836:9:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":169,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"1837:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1837:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a20706175736564","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1847:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""},"value":"Pausable: paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a","typeString":"literal_string \"Pausable: paused\""}],"id":168,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1828:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1828:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":174,"nodeType":"ExpressionStatement","src":"1828:38:1"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"1705:57:1","text":" @dev Throws if the contract is paused."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1776:17:1","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[],"src":"1793:2:1"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"1818:0:1"},"scope":220,"src":"1767:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":186,"nodeType":"Block","src":"1993:58:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":181,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":164,"src":"2011:6:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2011:8:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5061757361626c653a206e6f7420706175736564","id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2021:22:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""},"value":"Pausable: not paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a","typeString":"literal_string \"Pausable: not paused\""}],"id":180,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2003:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2003:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":185,"nodeType":"ExpressionStatement","src":"2003:41:1"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"1879:61:1","text":" @dev Throws if the contract is not paused."},"id":187,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"1954:14:1","nodeType":"FunctionDefinition","parameters":{"id":178,"nodeType":"ParameterList","parameters":[],"src":"1968:2:1"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"1993:0:1"},"scope":220,"src":"1945:106:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":202,"nodeType":"Block","src":"2235:66:1","statements":[{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":193,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2245:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2255:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2245:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":196,"nodeType":"ExpressionStatement","src":"2245:14:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":198,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2281:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":197,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2274:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":201,"nodeType":"EmitStatement","src":"2269:25:1"}]},"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"2057:124:1","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":203,"implemented":true,"kind":"function","modifiers":[{"id":191,"kind":"modifierInvocation","modifierName":{"id":190,"name":"whenNotPaused","nameLocations":["2221:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"2221:13:1"},"nodeType":"ModifierInvocation","src":"2221:13:1"}],"name":"_pause","nameLocation":"2195:6:1","nodeType":"FunctionDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[],"src":"2201:2:1"},"returnParameters":{"id":192,"nodeType":"ParameterList","parameters":[],"src":"2235:0:1"},"scope":220,"src":"2186:115:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":218,"nodeType":"Block","src":"2481:69:1","statements":[{"expression":{"id":211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":209,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"2491:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2501:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2491:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"ExpressionStatement","src":"2491:15:1"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":214,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"2530:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2530:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":213,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"2521:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2521:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":217,"nodeType":"EmitStatement","src":"2516:27:1"}]},"documentation":{"id":204,"nodeType":"StructuredDocumentation","src":"2307:121:1","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":219,"implemented":true,"kind":"function","modifiers":[{"id":207,"kind":"modifierInvocation","modifierName":{"id":206,"name":"whenPaused","nameLocations":["2470:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":155,"src":"2470:10:1"},"nodeType":"ModifierInvocation","src":"2470:10:1"}],"name":"_unpause","nameLocation":"2442:8:1","nodeType":"FunctionDefinition","parameters":{"id":205,"nodeType":"ParameterList","parameters":[],"src":"2450:2:1"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"2481:0:1"},"scope":220,"src":"2433:117:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":221,"src":"602:1950:1","usedErrors":[]}],"src":"105:2448:1"},"id":1},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[274]},"id":275,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"137:750:2","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":274,"linearizedBaseContracts":[274],"name":"ReentrancyGuard","nameLocation":"906:15:2","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":226,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:2","nodeType":"VariableDeclaration","scope":274,"src":"1676:41:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":229,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:2","nodeType":"VariableDeclaration","scope":274,"src":"1723:37:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:2","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":231,"mutability":"mutable","name":"_status","nameLocation":"1783:7:2","nodeType":"VariableDeclaration","scope":274,"src":"1767:23:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":238,"nodeType":"Block","src":"1811:39:2","statements":[{"expression":{"id":236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":234,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"1821:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":235,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"1831:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":237,"nodeType":"ExpressionStatement","src":"1821:22:2"}]},"id":239,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[],"src":"1808:2:2"},"returnParameters":{"id":233,"nodeType":"ParameterList","parameters":[],"src":"1811:0:2"},"scope":274,"src":"1797:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"2251:79:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":242,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"2261:19:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":244,"nodeType":"ExpressionStatement","src":"2261:21:2"},{"id":245,"nodeType":"PlaceholderStatement","src":"2292:1:2"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":246,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"2303:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"ExpressionStatement","src":"2303:20:2"}]},"documentation":{"id":240,"nodeType":"StructuredDocumentation","src":"1856:366:2","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":250,"name":"nonReentrant","nameLocation":"2236:12:2","nodeType":"ModifierDefinition","parameters":{"id":241,"nodeType":"ParameterList","parameters":[],"src":"2248:2:2"},"src":"2227:103:2","virtual":false,"visibility":"internal"},{"body":{"id":264,"nodeType":"Block","src":"2375:248:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2468:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":255,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2479:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":259,"nodeType":"ExpressionStatement","src":"2460:63:2"},{"expression":{"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":260,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2598:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":261,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"2608:8:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":263,"nodeType":"ExpressionStatement","src":"2598:18:2"}]},"id":265,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:2","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"2364:2:2"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[],"src":"2375:0:2"},"scope":274,"src":"2336:287:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":272,"nodeType":"Block","src":"2667:171:2","statements":[{"expression":{"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":268,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"2809:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":269,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2819:12:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":271,"nodeType":"ExpressionStatement","src":"2809:22:2"}]},"id":273,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:2","nodeType":"FunctionDefinition","parameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"2656:2:2"},"returnParameters":{"id":267,"nodeType":"ParameterList","parameters":[],"src":"2667:0:2"},"scope":274,"src":"2629:209:2","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":275,"src":"888:1952:2","usedErrors":[]}],"src":"112:2729:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[352]},"id":353,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":276,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"131:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":352,"linearizedBaseContracts":[352],"name":"IERC20","nameLocation":"212:6:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"225:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":286,"name":"Transfer","nameLocation":"394:8:3","nodeType":"EventDefinition","parameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:3","nodeType":"VariableDeclaration","scope":286,"src":"403:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":282,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:3","nodeType":"VariableDeclaration","scope":286,"src":"425:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":281,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":284,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:3","nodeType":"VariableDeclaration","scope":286,"src":"445:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:3"},"src":"388:72:3"},{"anonymous":false,"documentation":{"id":287,"nodeType":"StructuredDocumentation","src":"466:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":295,"name":"Approval","nameLocation":"625:8:3","nodeType":"EventDefinition","parameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":289,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:3","nodeType":"VariableDeclaration","scope":295,"src":"634:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":291,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:3","nodeType":"VariableDeclaration","scope":295,"src":"657:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":290,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":293,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:3","nodeType":"VariableDeclaration","scope":295,"src":"682:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":292,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:3"},"src":"619:78:3"},{"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"703:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":301,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:3","nodeType":"FunctionDefinition","parameters":{"id":297,"nodeType":"ParameterList","parameters":[],"src":"794:2:3"},"returnParameters":{"id":300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":301,"src":"820:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:3"},"scope":352,"src":"774:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"835:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":309,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:3","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"account","nameLocation":"939:7:3","nodeType":"VariableDeclaration","scope":309,"src":"931:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:3"},"returnParameters":{"id":308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":309,"src":"971:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":306,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:3"},"scope":352,"src":"912:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"986:202:3","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":319,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:3","nodeType":"FunctionDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"mutability":"mutable","name":"to","nameLocation":"1219:2:3","nodeType":"VariableDeclaration","scope":319,"src":"1211:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":311,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":314,"mutability":"mutable","name":"amount","nameLocation":"1231:6:3","nodeType":"VariableDeclaration","scope":319,"src":"1223:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":313,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:3"},"returnParameters":{"id":318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":319,"src":"1257:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":316,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:3"},"scope":352,"src":"1193:70:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":320,"nodeType":"StructuredDocumentation","src":"1269:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":329,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:3","nodeType":"FunctionDefinition","parameters":{"id":325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"owner","nameLocation":"1565:5:3","nodeType":"VariableDeclaration","scope":329,"src":"1557:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":321,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":324,"mutability":"mutable","name":"spender","nameLocation":"1580:7:3","nodeType":"VariableDeclaration","scope":329,"src":"1572:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":323,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:3"},"returnParameters":{"id":328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":329,"src":"1612:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:3"},"scope":352,"src":"1538:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":330,"nodeType":"StructuredDocumentation","src":"1627:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":339,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:3","nodeType":"FunctionDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":332,"mutability":"mutable","name":"spender","nameLocation":"2299:7:3","nodeType":"VariableDeclaration","scope":339,"src":"2291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"mutability":"mutable","name":"amount","nameLocation":"2316:6:3","nodeType":"VariableDeclaration","scope":339,"src":"2308:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":333,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:3"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":339,"src":"2342:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":336,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:3"},"scope":352,"src":"2274:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"2354:287:3","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":351,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:3","nodeType":"FunctionDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"from","nameLocation":"2685:4:3","nodeType":"VariableDeclaration","scope":351,"src":"2677:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"to","nameLocation":"2707:2:3","nodeType":"VariableDeclaration","scope":351,"src":"2699:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":351,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:3"},"returnParameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":351,"src":"2758:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":348,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:3"},"scope":352,"src":"2646:118:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":353,"src":"202:2564:3","usedErrors":[]}],"src":"106:2661:3"},"id":3},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":354,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"139:480:4","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IERC20Permit","nameLocation":"630:12:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"649:792:4","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":373,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:4","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"owner","nameLocation":"1479:5:4","nodeType":"VariableDeclaration","scope":373,"src":"1471:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":360,"mutability":"mutable","name":"spender","nameLocation":"1502:7:4","nodeType":"VariableDeclaration","scope":373,"src":"1494:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":359,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"value","nameLocation":"1527:5:4","nodeType":"VariableDeclaration","scope":373,"src":"1519:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:4","nodeType":"VariableDeclaration","scope":373,"src":"1542:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"v","nameLocation":"1574:1:4","nodeType":"VariableDeclaration","scope":373,"src":"1568:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":365,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"r","nameLocation":"1593:1:4","nodeType":"VariableDeclaration","scope":373,"src":"1585:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"s","nameLocation":"1612:1:4","nodeType":"VariableDeclaration","scope":373,"src":"1604:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:4"},"returnParameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"1628:0:4"},"scope":388,"src":"1446:183:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"1635:294:4","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":381,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:4","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"owner","nameLocation":"1958:5:4","nodeType":"VariableDeclaration","scope":381,"src":"1950:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:4"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":381,"src":"1988:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:4"},"scope":388,"src":"1934:63:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"2003:128:4","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:4","nodeType":"FunctionDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[],"src":"2214:2:4"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2240:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:4"},"scope":388,"src":"2189:60:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":389,"src":"620:1631:4","usedErrors":[]}],"src":"114:2138:4"},"id":4},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"Address":[999],"IERC20":[352],"IERC20Permit":[388],"SafeERC20":[669]},"id":670,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":670,"sourceUnit":353,"src":"140:23:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"../extensions/draft-IERC20Permit.sol","id":392,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":670,"sourceUnit":389,"src":"164:46:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../../utils/Address.sol","id":393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":670,"sourceUnit":1000,"src":"211:36:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":394,"nodeType":"StructuredDocumentation","src":"249:457:5","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":669,"linearizedBaseContracts":[669],"name":"SafeERC20","nameLocation":"715:9:5","nodeType":"ContractDefinition","nodes":[{"global":false,"id":397,"libraryName":{"id":395,"name":"Address","nameLocations":["737:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":999,"src":"737:7:5"},"nodeType":"UsingForDirective","src":"731:26:5","typeName":{"id":396,"name":"address","nodeType":"ElementaryTypeName","src":"749:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":419,"nodeType":"Block","src":"865:103:5","statements":[{"expression":{"arguments":[{"id":408,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"895:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":411,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"925:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"931:8:5","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":319,"src":"925:14:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"940:8:5","memberName":"selector","nodeType":"MemberAccess","src":"925:23:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":414,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"950:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":415,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"954:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":409,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"902:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"906:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"902:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"902:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":407,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"875:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$352_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"875:86:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":418,"nodeType":"ExpressionStatement","src":"875:86:5"}]},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"772:12:5","nodeType":"FunctionDefinition","parameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"token","nameLocation":"801:5:5","nodeType":"VariableDeclaration","scope":420,"src":"794:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":399,"nodeType":"UserDefinedTypeName","pathNode":{"id":398,"name":"IERC20","nameLocations":["794:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"794:6:5"},"referencedDeclaration":352,"src":"794:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"to","nameLocation":"824:2:5","nodeType":"VariableDeclaration","scope":420,"src":"816:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"value","nameLocation":"844:5:5","nodeType":"VariableDeclaration","scope":420,"src":"836:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"836:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"784:71:5"},"returnParameters":{"id":406,"nodeType":"ParameterList","parameters":[],"src":"865:0:5"},"scope":669,"src":"763:205:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":445,"nodeType":"Block","src":"1102:113:5","statements":[{"expression":{"arguments":[{"id":433,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1132:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":436,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1162:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:12:5","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":351,"src":"1162:18:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:8:5","memberName":"selector","nodeType":"MemberAccess","src":"1162:27:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":439,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"1191:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":440,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1197:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1201:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":434,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1139:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1143:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1139:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1139:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":432,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1112:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$352_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1112:96:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"1112:96:5"}]},"id":446,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"983:16:5","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"token","nameLocation":"1016:5:5","nodeType":"VariableDeclaration","scope":446,"src":"1009:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":422,"nodeType":"UserDefinedTypeName","pathNode":{"id":421,"name":"IERC20","nameLocations":["1009:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"1009:6:5"},"referencedDeclaration":352,"src":"1009:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":425,"mutability":"mutable","name":"from","nameLocation":"1039:4:5","nodeType":"VariableDeclaration","scope":446,"src":"1031:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"1031:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":427,"mutability":"mutable","name":"to","nameLocation":"1061:2:5","nodeType":"VariableDeclaration","scope":446,"src":"1053:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":426,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"value","nameLocation":"1081:5:5","nodeType":"VariableDeclaration","scope":446,"src":"1073:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"999:93:5"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1102:0:5"},"scope":669,"src":"974:241:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":489,"nodeType":"Block","src":"1581:497:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"1830:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1839:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1830:10:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1829:12:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":466,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1870:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$669","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$669","typeString":"library SafeERC20"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1862:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":464,"name":"address","nodeType":"ElementaryTypeName","src":"1862:7:5","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1862:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":468,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"1877:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":462,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"1846:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1852:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":329,"src":"1846:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1846:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1846:44:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1845:46:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1829:62:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1905:56:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":457,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1808:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1808:163:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"1808:163:5"},{"expression":{"arguments":[{"id":478,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"2001:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":481,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":450,"src":"2031:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2037:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":339,"src":"2031:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2045:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2031:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":484,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":452,"src":"2055:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"2064:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":479,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2008:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2012:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2008:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:62:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":477,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"1981:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$352_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1981:90:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"1981:90:5"}]},"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"1221:249:5","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":490,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nameLocation":"1484:11:5","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"token","nameLocation":"1512:5:5","nodeType":"VariableDeclaration","scope":490,"src":"1505:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":449,"nodeType":"UserDefinedTypeName","pathNode":{"id":448,"name":"IERC20","nameLocations":["1505:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"1505:6:5"},"referencedDeclaration":352,"src":"1505:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":452,"mutability":"mutable","name":"spender","nameLocation":"1535:7:5","nodeType":"VariableDeclaration","scope":490,"src":"1527:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":451,"name":"address","nodeType":"ElementaryTypeName","src":"1527:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":454,"mutability":"mutable","name":"value","nameLocation":"1560:5:5","nodeType":"VariableDeclaration","scope":490,"src":"1552:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"1552:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:76:5"},"returnParameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"1581:0:5"},"scope":669,"src":"1475:603:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":525,"nodeType":"Block","src":"2200:194:5","statements":[{"assignments":[501],"declarations":[{"constant":false,"id":501,"mutability":"mutable","name":"newAllowance","nameLocation":"2218:12:5","nodeType":"VariableDeclaration","scope":525,"src":"2210:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":500,"name":"uint256","nodeType":"ElementaryTypeName","src":"2210:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":512,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":506,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2257:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$669","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$669","typeString":"library SafeERC20"}],"id":505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2249:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"2249:7:5","typeDescriptions":{}}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2249:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":508,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2264:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":502,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2233:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2239:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":329,"src":"2233:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2233:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":497,"src":"2275:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2233:47:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2210:70:5"},{"expression":{"arguments":[{"id":514,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2310:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":517,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"2340:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":339,"src":"2340:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2354:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2340:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":520,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"2364:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":521,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"2373:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":515,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2317:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2321:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2317:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2317:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":513,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2290:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$352_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2290:97:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":524,"nodeType":"ExpressionStatement","src":"2290:97:5"}]},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2093:21:5","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"token","nameLocation":"2131:5:5","nodeType":"VariableDeclaration","scope":526,"src":"2124:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":492,"nodeType":"UserDefinedTypeName","pathNode":{"id":491,"name":"IERC20","nameLocations":["2124:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"2124:6:5"},"referencedDeclaration":352,"src":"2124:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"spender","nameLocation":"2154:7:5","nodeType":"VariableDeclaration","scope":526,"src":"2146:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"2146:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"value","nameLocation":"2179:5:5","nodeType":"VariableDeclaration","scope":526,"src":"2171:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2114:76:5"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"2200:0:5"},"scope":669,"src":"2084:310:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"2516:370:5","statements":[{"id":572,"nodeType":"UncheckedBlock","src":"2526:354:5","statements":[{"assignments":[537],"declarations":[{"constant":false,"id":537,"mutability":"mutable","name":"oldAllowance","nameLocation":"2558:12:5","nodeType":"VariableDeclaration","scope":572,"src":"2550:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2550:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":546,"initialValue":{"arguments":[{"arguments":[{"id":542,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2597:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$669","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$669","typeString":"library SafeERC20"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2589:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"2589:7:5","typeDescriptions":{}}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2589:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2604:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":538,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2573:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:9:5","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":329,"src":"2573:15:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:39:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2550:62:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":548,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2634:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2650:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2634:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2657:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"id":547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2626:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2626:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":553,"nodeType":"ExpressionStatement","src":"2626:75:5"},{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"newAllowance","nameLocation":"2723:12:5","nodeType":"VariableDeclaration","scope":572,"src":"2715:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2715:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":559,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":556,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2738:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":557,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"2753:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2738:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2715:43:5"},{"expression":{"arguments":[{"id":561,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2792:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":564,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2822:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2828:7:5","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":339,"src":"2822:13:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2836:8:5","memberName":"selector","nodeType":"MemberAccess","src":"2822:22:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":567,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"2846:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":568,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"2855:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":562,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2799:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2803:18:5","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2799:22:5","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2799:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":560,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"2772:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$352_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2772:97:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":571,"nodeType":"ExpressionStatement","src":"2772:97:5"}]}]},"id":574,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"2409:21:5","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"token","nameLocation":"2447:5:5","nodeType":"VariableDeclaration","scope":574,"src":"2440:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":528,"nodeType":"UserDefinedTypeName","pathNode":{"id":527,"name":"IERC20","nameLocations":["2440:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"2440:6:5"},"referencedDeclaration":352,"src":"2440:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"spender","nameLocation":"2470:7:5","nodeType":"VariableDeclaration","scope":574,"src":"2462:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"2462:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"value","nameLocation":"2495:5:5","nodeType":"VariableDeclaration","scope":574,"src":"2487:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2487:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:76:5"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"2516:0:5"},"scope":669,"src":"2400:486:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":629,"nodeType":"Block","src":"3107:257:5","statements":[{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"nonceBefore","nameLocation":"3125:11:5","nodeType":"VariableDeclaration","scope":629,"src":"3117:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"3117:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":600,"initialValue":{"arguments":[{"id":598,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"3152:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":596,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"3139:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$388","typeString":"contract IERC20Permit"}},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":381,"src":"3139:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3139:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3117:41:5"},{"expression":{"arguments":[{"id":604,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"3181:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":605,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":581,"src":"3188:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":606,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"3197:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":607,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"3204:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":608,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"3214:1:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":609,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3217:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":610,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"3220:1:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":601,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"3168:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$388","typeString":"contract IERC20Permit"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3174:6:5","memberName":"permit","nodeType":"MemberAccess","referencedDeclaration":373,"src":"3168:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:54:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":612,"nodeType":"ExpressionStatement","src":"3168:54:5"},{"assignments":[614],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"nonceAfter","nameLocation":"3240:10:5","nodeType":"VariableDeclaration","scope":629,"src":"3232:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3232:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":619,"initialValue":{"arguments":[{"id":617,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"3266:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":615,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"3253:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$388","typeString":"contract IERC20Permit"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3259:6:5","memberName":"nonces","nodeType":"MemberAccess","referencedDeclaration":381,"src":"3253:12:5","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3253:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3232:40:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":621,"name":"nonceAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"3290:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":622,"name":"nonceBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"3304:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3318:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3304:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3290:29:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a207065726d697420646964206e6f742073756363656564","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3321:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""},"value":"SafeERC20: permit did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d","typeString":"literal_string \"SafeERC20: permit did not succeed\""}],"id":620,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3282:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3282:75:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"3282:75:5"}]},"id":630,"implemented":true,"kind":"function","modifiers":[],"name":"safePermit","nameLocation":"2901:10:5","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":577,"mutability":"mutable","name":"token","nameLocation":"2934:5:5","nodeType":"VariableDeclaration","scope":630,"src":"2921:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$388","typeString":"contract IERC20Permit"},"typeName":{"id":576,"nodeType":"UserDefinedTypeName","pathNode":{"id":575,"name":"IERC20Permit","nameLocations":["2921:12:5"],"nodeType":"IdentifierPath","referencedDeclaration":388,"src":"2921:12:5"},"referencedDeclaration":388,"src":"2921:12:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Permit_$388","typeString":"contract IERC20Permit"}},"visibility":"internal"},{"constant":false,"id":579,"mutability":"mutable","name":"owner","nameLocation":"2957:5:5","nodeType":"VariableDeclaration","scope":630,"src":"2949:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":578,"name":"address","nodeType":"ElementaryTypeName","src":"2949:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":581,"mutability":"mutable","name":"spender","nameLocation":"2980:7:5","nodeType":"VariableDeclaration","scope":630,"src":"2972:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":580,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":583,"mutability":"mutable","name":"value","nameLocation":"3005:5:5","nodeType":"VariableDeclaration","scope":630,"src":"2997:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":582,"name":"uint256","nodeType":"ElementaryTypeName","src":"2997:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":585,"mutability":"mutable","name":"deadline","nameLocation":"3028:8:5","nodeType":"VariableDeclaration","scope":630,"src":"3020:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":584,"name":"uint256","nodeType":"ElementaryTypeName","src":"3020:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":587,"mutability":"mutable","name":"v","nameLocation":"3052:1:5","nodeType":"VariableDeclaration","scope":630,"src":"3046:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":586,"name":"uint8","nodeType":"ElementaryTypeName","src":"3046:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":589,"mutability":"mutable","name":"r","nameLocation":"3071:1:5","nodeType":"VariableDeclaration","scope":630,"src":"3063:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3063:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"s","nameLocation":"3090:1:5","nodeType":"VariableDeclaration","scope":630,"src":"3082:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3082:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2911:186:5"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"3107:0:5"},"scope":669,"src":"2892:472:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":667,"nodeType":"Block","src":"3817:636:5","statements":[{"assignments":[640],"declarations":[{"constant":false,"id":640,"mutability":"mutable","name":"returndata","nameLocation":"4179:10:5","nodeType":"VariableDeclaration","scope":667,"src":"4166:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":639,"name":"bytes","nodeType":"ElementaryTypeName","src":"4166:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":649,"initialValue":{"arguments":[{"id":646,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":636,"src":"4220:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4226:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":643,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4200:5:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}],"id":642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":641,"name":"address","nodeType":"ElementaryTypeName","src":"4192:7:5","typeDescriptions":{}}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4207:12:5","memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":759,"src":"4192:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4166:95:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":650,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4275:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4286:6:5","memberName":"length","nodeType":"MemberAccess","src":"4275:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4295:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4275:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":666,"nodeType":"IfStatement","src":"4271:176:5","trueBody":{"id":665,"nodeType":"Block","src":"4298:149:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":657,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":640,"src":"4370:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4383:4:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":658,"name":"bool","nodeType":"ElementaryTypeName","src":"4383:4:5","typeDescriptions":{}}}],"id":660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"4382:6:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":655,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4359:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4363:6:5","memberName":"decode","nodeType":"MemberAccess","src":"4359:10:5","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4359:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4391:44:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":654,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4351:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4351:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":664,"nodeType":"ExpressionStatement","src":"4351:85:5"}]}}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"3370:372:5","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":668,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"3756:19:5","nodeType":"FunctionDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"token","nameLocation":"3783:5:5","nodeType":"VariableDeclaration","scope":668,"src":"3776:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":633,"nodeType":"UserDefinedTypeName","pathNode":{"id":632,"name":"IERC20","nameLocations":["3776:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"3776:6:5"},"referencedDeclaration":352,"src":"3776:6:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":636,"mutability":"mutable","name":"data","nameLocation":"3803:4:5","nodeType":"VariableDeclaration","scope":668,"src":"3790:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":635,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:33:5"},"returnParameters":{"id":638,"nodeType":"ParameterList","parameters":[],"src":"3817:0:5"},"scope":669,"src":"3747:706:5","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":670,"src":"707:3748:5","usedErrors":[]}],"src":"115:4341:5"},"id":5},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[999]},"id":1000,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":671,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":672,"nodeType":"StructuredDocumentation","src":"126:67:6","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":999,"linearizedBaseContracts":[999],"name":"Address","nameLocation":"202:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":686,"nodeType":"Block","src":"1241:254:6","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":680,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"1465:7:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1473:4:6","memberName":"code","nodeType":"MemberAccess","src":"1465:12:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1478:6:6","memberName":"length","nodeType":"MemberAccess","src":"1465:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":679,"id":685,"nodeType":"Return","src":"1458:30:6"}]},"documentation":{"id":673,"nodeType":"StructuredDocumentation","src":"216:954:6","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":687,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:6","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":675,"mutability":"mutable","name":"account","nameLocation":"1203:7:6","nodeType":"VariableDeclaration","scope":687,"src":"1195:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:6"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"1235:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":677,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:6"},"scope":999,"src":"1175:320:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":720,"nodeType":"Block","src":"2483:241:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":698,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$999","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$999","typeString":"library Address"}],"id":697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:6","typeDescriptions":{}}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2501:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2515:7:6","memberName":"balance","nodeType":"MemberAccess","src":"2501:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":701,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"2526:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":695,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":705,"nodeType":"ExpressionStatement","src":"2493:73:6"},{"assignments":[707,null],"declarations":[{"constant":false,"id":707,"mutability":"mutable","name":"success","nameLocation":"2583:7:6","nodeType":"VariableDeclaration","scope":720,"src":"2578:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":706,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":714,"initialValue":{"arguments":[{"hexValue":"","id":712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":708,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":690,"src":"2596:9:6","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2606:4:6","memberName":"call","nodeType":"MemberAccess","src":"2596:14:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":710,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"2618:6:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:6"},{"expression":{"arguments":[{"id":716,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":707,"src":"2647:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":715,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:78:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":719,"nodeType":"ExpressionStatement","src":"2639:78:6"}]},"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"1501:906:6","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:6","nodeType":"FunctionDefinition","parameters":{"id":693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:6","nodeType":"VariableDeclaration","scope":721,"src":"2431:25:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:6","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"amount","nameLocation":"2466:6:6","nodeType":"VariableDeclaration","scope":721,"src":"2458:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":691,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:6"},"returnParameters":{"id":694,"nodeType":"ParameterList","parameters":[],"src":"2483:0:6"},"scope":999,"src":"2412:312:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":738,"nodeType":"Block","src":"3555:96:6","statements":[{"expression":{"arguments":[{"id":732,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"3594:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3602:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3611:32:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":731,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[779,823],"referencedDeclaration":823,"src":"3572:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:72:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":730,"id":737,"nodeType":"Return","src":"3565:79:6"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"2730:731:6","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":739,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:6","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"target","nameLocation":"3496:6:6","nodeType":"VariableDeclaration","scope":739,"src":"3488:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"data","nameLocation":"3517:4:6","nodeType":"VariableDeclaration","scope":739,"src":"3504:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":725,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:6"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":739,"src":"3541:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:6"},"scope":999,"src":"3466:185:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":758,"nodeType":"Block","src":"4020:76:6","statements":[{"expression":{"arguments":[{"id":752,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":742,"src":"4059:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":753,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":744,"src":"4067:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4073:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":755,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"4076:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":751,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[779,823],"referencedDeclaration":823,"src":"4037:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4037:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":750,"id":757,"nodeType":"Return","src":"4030:59:6"}]},"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"3657:211:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":759,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3882:12:6","nodeType":"FunctionDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"target","nameLocation":"3912:6:6","nodeType":"VariableDeclaration","scope":759,"src":"3904:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"data","nameLocation":"3941:4:6","nodeType":"VariableDeclaration","scope":759,"src":"3928:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":743,"name":"bytes","nodeType":"ElementaryTypeName","src":"3928:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"errorMessage","nameLocation":"3969:12:6","nodeType":"VariableDeclaration","scope":759,"src":"3955:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":745,"name":"string","nodeType":"ElementaryTypeName","src":"3955:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3894:93:6"},"returnParameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":759,"src":"4006:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":748,"name":"bytes","nodeType":"ElementaryTypeName","src":"4006:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4005:14:6"},"scope":999,"src":"3873:223:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":778,"nodeType":"Block","src":"4601:111:6","statements":[{"expression":{"arguments":[{"id":772,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"4640:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"4648:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4654:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4661:43:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":771,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[779,823],"referencedDeclaration":823,"src":"4618:21:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4618:87:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":770,"id":777,"nodeType":"Return","src":"4611:94:6"}]},"documentation":{"id":760,"nodeType":"StructuredDocumentation","src":"4102:351:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":779,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4467:21:6","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":762,"mutability":"mutable","name":"target","nameLocation":"4506:6:6","nodeType":"VariableDeclaration","scope":779,"src":"4498:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":761,"name":"address","nodeType":"ElementaryTypeName","src":"4498:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"data","nameLocation":"4535:4:6","nodeType":"VariableDeclaration","scope":779,"src":"4522:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":763,"name":"bytes","nodeType":"ElementaryTypeName","src":"4522:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"value","nameLocation":"4557:5:6","nodeType":"VariableDeclaration","scope":779,"src":"4549:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"4549:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4488:80:6"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"4587:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":768,"name":"bytes","nodeType":"ElementaryTypeName","src":"4587:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4586:14:6"},"scope":999,"src":"4458:254:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"5139:267:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":796,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5165:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$999","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$999","typeString":"library Address"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5157:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"5157:7:6","typeDescriptions":{}}},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5157:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5171:7:6","memberName":"balance","nodeType":"MemberAccess","src":"5157:21:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"5182:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5157:30:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5189:40:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":793,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5149:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5149:81:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":803,"nodeType":"ExpressionStatement","src":"5149:81:6"},{"assignments":[805,807],"declarations":[{"constant":false,"id":805,"mutability":"mutable","name":"success","nameLocation":"5246:7:6","nodeType":"VariableDeclaration","scope":822,"src":"5241:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":804,"name":"bool","nodeType":"ElementaryTypeName","src":"5241:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":807,"mutability":"mutable","name":"returndata","nameLocation":"5268:10:6","nodeType":"VariableDeclaration","scope":822,"src":"5255:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":806,"name":"bytes","nodeType":"ElementaryTypeName","src":"5255:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":814,"initialValue":{"arguments":[{"id":812,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"5308:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":808,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"5282:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5289:4:6","memberName":"call","nodeType":"MemberAccess","src":"5282:11:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"5301:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5282:25:6","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5282:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5240:73:6"},{"expression":{"arguments":[{"id":816,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"5357:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":817,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":805,"src":"5365:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":818,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":807,"src":"5374:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":819,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5386:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":815,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"5330:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5330:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":792,"id":821,"nodeType":"Return","src":"5323:76:6"}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"4718:237:6","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4969:21:6","nodeType":"FunctionDefinition","parameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"target","nameLocation":"5008:6:6","nodeType":"VariableDeclaration","scope":823,"src":"5000:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"data","nameLocation":"5037:4:6","nodeType":"VariableDeclaration","scope":823,"src":"5024:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":783,"name":"bytes","nodeType":"ElementaryTypeName","src":"5024:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":786,"mutability":"mutable","name":"value","nameLocation":"5059:5:6","nodeType":"VariableDeclaration","scope":823,"src":"5051:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":785,"name":"uint256","nodeType":"ElementaryTypeName","src":"5051:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":788,"mutability":"mutable","name":"errorMessage","nameLocation":"5088:12:6","nodeType":"VariableDeclaration","scope":823,"src":"5074:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":787,"name":"string","nodeType":"ElementaryTypeName","src":"5074:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4990:116:6"},"returnParameters":{"id":792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":823,"src":"5125:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":790,"name":"bytes","nodeType":"ElementaryTypeName","src":"5125:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5124:14:6"},"scope":999,"src":"4960:446:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":839,"nodeType":"Block","src":"5683:97:6","statements":[{"expression":{"arguments":[{"id":834,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"5719:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":835,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"5727:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5733:39:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":833,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[840,869],"referencedDeclaration":869,"src":"5700:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5700:73:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":832,"id":838,"nodeType":"Return","src":"5693:80:6"}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"5412:166:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":840,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5592:18:6","nodeType":"FunctionDefinition","parameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"target","nameLocation":"5619:6:6","nodeType":"VariableDeclaration","scope":840,"src":"5611:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"5611:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"data","nameLocation":"5640:4:6","nodeType":"VariableDeclaration","scope":840,"src":"5627:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":827,"name":"bytes","nodeType":"ElementaryTypeName","src":"5627:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5610:35:6"},"returnParameters":{"id":832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":840,"src":"5669:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":830,"name":"bytes","nodeType":"ElementaryTypeName","src":"5669:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5668:14:6"},"scope":999,"src":"5583:197:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":868,"nodeType":"Block","src":"6122:168:6","statements":[{"assignments":[853,855],"declarations":[{"constant":false,"id":853,"mutability":"mutable","name":"success","nameLocation":"6138:7:6","nodeType":"VariableDeclaration","scope":868,"src":"6133:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":852,"name":"bool","nodeType":"ElementaryTypeName","src":"6133:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"returndata","nameLocation":"6160:10:6","nodeType":"VariableDeclaration","scope":868,"src":"6147:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":854,"name":"bytes","nodeType":"ElementaryTypeName","src":"6147:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":860,"initialValue":{"arguments":[{"id":858,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6192:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":856,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"6174:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:10:6","memberName":"staticcall","nodeType":"MemberAccess","src":"6174:17:6","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6174:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6132:65:6"},{"expression":{"arguments":[{"id":862,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":843,"src":"6241:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":863,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"6249:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":864,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"6258:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":865,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":847,"src":"6270:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":861,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"6214:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":851,"id":867,"nodeType":"Return","src":"6207:76:6"}]},"documentation":{"id":841,"nodeType":"StructuredDocumentation","src":"5786:173:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":869,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5973:18:6","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":843,"mutability":"mutable","name":"target","nameLocation":"6009:6:6","nodeType":"VariableDeclaration","scope":869,"src":"6001:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":842,"name":"address","nodeType":"ElementaryTypeName","src":"6001:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"data","nameLocation":"6038:4:6","nodeType":"VariableDeclaration","scope":869,"src":"6025:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":844,"name":"bytes","nodeType":"ElementaryTypeName","src":"6025:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"errorMessage","nameLocation":"6066:12:6","nodeType":"VariableDeclaration","scope":869,"src":"6052:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":846,"name":"string","nodeType":"ElementaryTypeName","src":"6052:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5991:93:6"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":869,"src":"6108:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":849,"name":"bytes","nodeType":"ElementaryTypeName","src":"6108:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6107:14:6"},"scope":999,"src":"5964:326:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"6566:101:6","statements":[{"expression":{"arguments":[{"id":880,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"6604:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":881,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"6612:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6618:41:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":879,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[886,915],"referencedDeclaration":915,"src":"6583:20:6","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6583:77:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":878,"id":884,"nodeType":"Return","src":"6576:84:6"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"6296:168:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6478:20:6","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"target","nameLocation":"6507:6:6","nodeType":"VariableDeclaration","scope":886,"src":"6499:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"6499:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"data","nameLocation":"6528:4:6","nodeType":"VariableDeclaration","scope":886,"src":"6515:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":873,"name":"bytes","nodeType":"ElementaryTypeName","src":"6515:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6498:35:6"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":886,"src":"6552:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":876,"name":"bytes","nodeType":"ElementaryTypeName","src":"6552:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6551:14:6"},"scope":999,"src":"6469:198:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":914,"nodeType":"Block","src":"7008:170:6","statements":[{"assignments":[899,901],"declarations":[{"constant":false,"id":899,"mutability":"mutable","name":"success","nameLocation":"7024:7:6","nodeType":"VariableDeclaration","scope":914,"src":"7019:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":898,"name":"bool","nodeType":"ElementaryTypeName","src":"7019:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"returndata","nameLocation":"7046:10:6","nodeType":"VariableDeclaration","scope":914,"src":"7033:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":900,"name":"bytes","nodeType":"ElementaryTypeName","src":"7033:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":906,"initialValue":{"arguments":[{"id":904,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":891,"src":"7080:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":902,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"7060:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7067:12:6","memberName":"delegatecall","nodeType":"MemberAccess","src":"7060:19:6","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7060:25:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7018:67:6"},{"expression":{"arguments":[{"id":908,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"7129:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":909,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"7137:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":910,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"7146:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":911,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"7158:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":907,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"7102:26:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7102:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":897,"id":913,"nodeType":"Return","src":"7095:76:6"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"6673:175:6","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6862:20:6","nodeType":"FunctionDefinition","parameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":889,"mutability":"mutable","name":"target","nameLocation":"6900:6:6","nodeType":"VariableDeclaration","scope":915,"src":"6892:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":888,"name":"address","nodeType":"ElementaryTypeName","src":"6892:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":891,"mutability":"mutable","name":"data","nameLocation":"6929:4:6","nodeType":"VariableDeclaration","scope":915,"src":"6916:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":890,"name":"bytes","nodeType":"ElementaryTypeName","src":"6916:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":893,"mutability":"mutable","name":"errorMessage","nameLocation":"6957:12:6","nodeType":"VariableDeclaration","scope":915,"src":"6943:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":892,"name":"string","nodeType":"ElementaryTypeName","src":"6943:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6882:93:6"},"returnParameters":{"id":897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":915,"src":"6994:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":895,"name":"bytes","nodeType":"ElementaryTypeName","src":"6994:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6993:14:6"},"scope":999,"src":"6853:325:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":953,"nodeType":"Block","src":"7660:434:6","statements":[{"condition":{"id":929,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"7674:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":951,"nodeType":"Block","src":"8030:58:6","statements":[{"expression":{"arguments":[{"id":947,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"8052:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":948,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"8064:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":946,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"8044:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8044:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":950,"nodeType":"ExpressionStatement","src":"8044:33:6"}]},"id":952,"nodeType":"IfStatement","src":"7670:418:6","trueBody":{"id":945,"nodeType":"Block","src":"7683:341:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":930,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"7701:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7712:6:6","memberName":"length","nodeType":"MemberAccess","src":"7701:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7722:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7701:22:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":942,"nodeType":"IfStatement","src":"7697:286:6","trueBody":{"id":941,"nodeType":"Block","src":"7725:258:6","statements":[{"expression":{"arguments":[{"arguments":[{"id":936,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"7927:6:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":935,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7916:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7936:31:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":934,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7908:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7908:60:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":940,"nodeType":"ExpressionStatement","src":"7908:60:6"}]}},{"expression":{"id":943,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"8003:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":928,"id":944,"nodeType":"Return","src":"7996:17:6"}]}}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"7184:277:6","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":954,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7475:26:6","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"target","nameLocation":"7519:6:6","nodeType":"VariableDeclaration","scope":954,"src":"7511:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"7511:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"success","nameLocation":"7540:7:6","nodeType":"VariableDeclaration","scope":954,"src":"7535:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":919,"name":"bool","nodeType":"ElementaryTypeName","src":"7535:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"returndata","nameLocation":"7570:10:6","nodeType":"VariableDeclaration","scope":954,"src":"7557:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":921,"name":"bytes","nodeType":"ElementaryTypeName","src":"7557:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"errorMessage","nameLocation":"7604:12:6","nodeType":"VariableDeclaration","scope":954,"src":"7590:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":923,"name":"string","nodeType":"ElementaryTypeName","src":"7590:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7501:121:6"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":954,"src":"7646:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":926,"name":"bytes","nodeType":"ElementaryTypeName","src":"7646:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7645:14:6"},"scope":999,"src":"7466:628:6","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":977,"nodeType":"Block","src":"8475:135:6","statements":[{"condition":{"id":966,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":957,"src":"8489:7:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":975,"nodeType":"Block","src":"8546:58:6","statements":[{"expression":{"arguments":[{"id":971,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8568:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":972,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"8580:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":970,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"8560:7:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"ExpressionStatement","src":"8560:33:6"}]},"id":976,"nodeType":"IfStatement","src":"8485:119:6","trueBody":{"id":969,"nodeType":"Block","src":"8498:42:6","statements":[{"expression":{"id":967,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8519:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":965,"id":968,"nodeType":"Return","src":"8512:17:6"}]}}]},"documentation":{"id":955,"nodeType":"StructuredDocumentation","src":"8100:210:6","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":978,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8324:16:6","nodeType":"FunctionDefinition","parameters":{"id":962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":957,"mutability":"mutable","name":"success","nameLocation":"8355:7:6","nodeType":"VariableDeclaration","scope":978,"src":"8350:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":956,"name":"bool","nodeType":"ElementaryTypeName","src":"8350:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":959,"mutability":"mutable","name":"returndata","nameLocation":"8385:10:6","nodeType":"VariableDeclaration","scope":978,"src":"8372:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":958,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":961,"mutability":"mutable","name":"errorMessage","nameLocation":"8419:12:6","nodeType":"VariableDeclaration","scope":978,"src":"8405:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":960,"name":"string","nodeType":"ElementaryTypeName","src":"8405:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8340:97:6"},"returnParameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":978,"src":"8461:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":963,"name":"bytes","nodeType":"ElementaryTypeName","src":"8461:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8460:14:6"},"scope":999,"src":"8315:295:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":997,"nodeType":"Block","src":"8699:457:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":985,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8775:10:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8786:6:6","memberName":"length","nodeType":"MemberAccess","src":"8775:17:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8775:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":995,"nodeType":"Block","src":"9105:45:6","statements":[{"expression":{"arguments":[{"id":992,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"9126:12:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":991,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9119:6:6","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9119:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"9119:20:6"}]},"id":996,"nodeType":"IfStatement","src":"8771:379:6","trueBody":{"id":990,"nodeType":"Block","src":"8798:301:6","statements":[{"AST":{"nodeType":"YulBlock","src":"8956:133:6","statements":[{"nodeType":"YulVariableDeclaration","src":"8974:40:6","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9003:10:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8997:5:6"},"nodeType":"YulFunctionCall","src":"8997:17:6"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8978:15:6","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9042:2:6","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9046:10:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9038:3:6"},"nodeType":"YulFunctionCall","src":"9038:19:6"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9059:15:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9031:6:6"},"nodeType":"YulFunctionCall","src":"9031:44:6"},"nodeType":"YulExpressionStatement","src":"9031:44:6"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":980,"isOffset":false,"isSlot":false,"src":"9003:10:6","valueSize":1},{"declaration":980,"isOffset":false,"isSlot":false,"src":"9046:10:6","valueSize":1}],"id":989,"nodeType":"InlineAssembly","src":"8947:142:6"}]}}]},"id":998,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8625:7:6","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"returndata","nameLocation":"8646:10:6","nodeType":"VariableDeclaration","scope":998,"src":"8633:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":979,"name":"bytes","nodeType":"ElementaryTypeName","src":"8633:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"errorMessage","nameLocation":"8672:12:6","nodeType":"VariableDeclaration","scope":998,"src":"8658:26:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":981,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8632:53:6"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"8699:0:6"},"scope":999,"src":"8616:540:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1000,"src":"194:8964:6","usedErrors":[]}],"src":"101:9058:6"},"id":6},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1021]},"id":1022,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1001,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1002,"nodeType":"StructuredDocumentation","src":"111:496:7","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1021,"linearizedBaseContracts":[1021],"name":"Context","nameLocation":"626:7:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1010,"nodeType":"Block","src":"702:34:7","statements":[{"expression":{"expression":{"id":1007,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:7","memberName":"sender","nodeType":"MemberAccess","src":"719:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1006,"id":1009,"nodeType":"Return","src":"712:17:7"}]},"id":1011,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:7","nodeType":"FunctionDefinition","parameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"659:2:7"},"returnParameters":{"id":1006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1011,"src":"693:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:7"},"scope":1021,"src":"640:96:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1019,"nodeType":"Block","src":"809:32:7","statements":[{"expression":{"expression":{"id":1016,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:7","memberName":"data","nodeType":"MemberAccess","src":"826:8:7","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1015,"id":1018,"nodeType":"Return","src":"819:15:7"}]},"id":1020,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:7","nodeType":"FunctionDefinition","parameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"759:2:7"},"returnParameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1020,"src":"793:14:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1013,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:7"},"scope":1021,"src":"742:99:7","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1022,"src":"608:235:7","usedErrors":[]}],"src":"86:758:7"},"id":7},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[1333]},"id":1334,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1023,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":1024,"nodeType":"StructuredDocumentation","src":"285:196:8","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":1333,"linearizedBaseContracts":[1333],"name":"SafeMath","nameLocation":"490:8:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1055,"nodeType":"Block","src":"717:140:8","statements":[{"id":1054,"nodeType":"UncheckedBlock","src":"727:124:8","statements":[{"assignments":[1037],"declarations":[{"constant":false,"id":1037,"mutability":"mutable","name":"c","nameLocation":"759:1:8","nodeType":"VariableDeclaration","scope":1054,"src":"751:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1036,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1041,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"763:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"767:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"763:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"751:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1042,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"786:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1043,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"790:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"786:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1049,"nodeType":"IfStatement","src":"782:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"801:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"808:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1047,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"800:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1035,"id":1048,"nodeType":"Return","src":"793:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"832:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1051,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"838:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"831:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1035,"id":1053,"nodeType":"Return","src":"824:16:8"}]}]},"documentation":{"id":1025,"nodeType":"StructuredDocumentation","src":"505:131:8","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"650:6:8","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1027,"mutability":"mutable","name":"a","nameLocation":"665:1:8","nodeType":"VariableDeclaration","scope":1056,"src":"657:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"b","nameLocation":"676:1:8","nodeType":"VariableDeclaration","scope":1056,"src":"668:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"668:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:22:8"},"returnParameters":{"id":1035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"702:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1031,"name":"bool","nodeType":"ElementaryTypeName","src":"702:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1056,"src":"708:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"701:15:8"},"scope":1333,"src":"641:216:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1083,"nodeType":"Block","src":"1078:113:8","statements":[{"id":1082,"nodeType":"UncheckedBlock","src":"1088:97:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1068,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"1116:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1069,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1120:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1116:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1075,"nodeType":"IfStatement","src":"1112:28:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1131:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1138:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1073,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1130:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1067,"id":1074,"nodeType":"Return","src":"1123:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1162:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"1168:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1078,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"1172:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1168:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1161:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1067,"id":1081,"nodeType":"Return","src":"1154:20:8"}]}]},"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"863:134:8","text":" @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1084,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"1011:6:8","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"a","nameLocation":"1026:1:8","nodeType":"VariableDeclaration","scope":1084,"src":"1018:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"b","nameLocation":"1037:1:8","nodeType":"VariableDeclaration","scope":1084,"src":"1029:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1017:22:8"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1084,"src":"1063:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1063,"name":"bool","nodeType":"ElementaryTypeName","src":"1063:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1084,"src":"1069:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1069:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1062:15:8"},"scope":1333,"src":"1002:189:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1125,"nodeType":"Block","src":"1415:417:8","statements":[{"id":1124,"nodeType":"UncheckedBlock","src":"1425:401:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"1683:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1683:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1103,"nodeType":"IfStatement","src":"1679:28:8","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1705:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1698:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1095,"id":1102,"nodeType":"Return","src":"1691:16:8"}},{"assignments":[1105],"declarations":[{"constant":false,"id":1105,"mutability":"mutable","name":"c","nameLocation":"1729:1:8","nodeType":"VariableDeclaration","scope":1124,"src":"1721:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1109,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"1733:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1107,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"1737:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1721:17:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1110,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1756:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1111,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"1760:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1113,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"1765:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:10:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1119,"nodeType":"IfStatement","src":"1752:33:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1776:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1783:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1775:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1095,"id":1118,"nodeType":"Return","src":"1768:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1807:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1121,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"1813:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1806:9:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1095,"id":1123,"nodeType":"Return","src":"1799:16:8"}]}]},"documentation":{"id":1085,"nodeType":"StructuredDocumentation","src":"1197:137:8","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":1126,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1348:6:8","nodeType":"FunctionDefinition","parameters":{"id":1090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1087,"mutability":"mutable","name":"a","nameLocation":"1363:1:8","nodeType":"VariableDeclaration","scope":1126,"src":"1355:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"b","nameLocation":"1374:1:8","nodeType":"VariableDeclaration","scope":1126,"src":"1366:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:22:8"},"returnParameters":{"id":1095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1092,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"1400:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1091,"name":"bool","nodeType":"ElementaryTypeName","src":"1400:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1126,"src":"1406:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1093,"name":"uint256","nodeType":"ElementaryTypeName","src":"1406:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1399:15:8"},"scope":1333,"src":"1339:493:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1153,"nodeType":"Block","src":"2057:114:8","statements":[{"id":1152,"nodeType":"UncheckedBlock","src":"2067:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"2095:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2095:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1145,"nodeType":"IfStatement","src":"2091:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2111:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2118:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1143,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2110:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1137,"id":1144,"nodeType":"Return","src":"2103:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2142:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1147,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"2148:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1148,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"2152:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2148:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1150,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2141:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1137,"id":1151,"nodeType":"Return","src":"2134:20:8"}]}]},"documentation":{"id":1127,"nodeType":"StructuredDocumentation","src":"1838:138:8","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1990:6:8","nodeType":"FunctionDefinition","parameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"a","nameLocation":"2005:1:8","nodeType":"VariableDeclaration","scope":1154,"src":"1997:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"1997:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"b","nameLocation":"2016:1:8","nodeType":"VariableDeclaration","scope":1154,"src":"2008:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1996:22:8"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1154,"src":"2042:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1133,"name":"bool","nodeType":"ElementaryTypeName","src":"2042:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1154,"src":"2048:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1135,"name":"uint256","nodeType":"ElementaryTypeName","src":"2048:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2041:15:8"},"scope":1333,"src":"1981:190:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1181,"nodeType":"Block","src":"2406:114:8","statements":[{"id":1180,"nodeType":"UncheckedBlock","src":"2416:98:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1166,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2444:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2449:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2444:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1173,"nodeType":"IfStatement","src":"2440:29:8","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2460:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2467:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1171,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2459:10:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":1165,"id":1172,"nodeType":"Return","src":"2452:17:8"}},{"expression":{"components":[{"hexValue":"74727565","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2491:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"2497:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1176,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"2501:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2497:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2490:13:8","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1165,"id":1179,"nodeType":"Return","src":"2483:20:8"}]}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"2177:148:8","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":1182,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2339:6:8","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"a","nameLocation":"2354:1:8","nodeType":"VariableDeclaration","scope":1182,"src":"2346:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"2346:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"b","nameLocation":"2365:1:8","nodeType":"VariableDeclaration","scope":1182,"src":"2357:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2357:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2345:22:8"},"returnParameters":{"id":1165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1182,"src":"2391:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1161,"name":"bool","nodeType":"ElementaryTypeName","src":"2391:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1182,"src":"2397:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2397:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2390:15:8"},"scope":1333,"src":"2330:190:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1196,"nodeType":"Block","src":"2822:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1192,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1185,"src":"2839:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1193,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1187,"src":"2843:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2839:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1191,"id":1195,"nodeType":"Return","src":"2832:12:8"}]},"documentation":{"id":1183,"nodeType":"StructuredDocumentation","src":"2526:224:8","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":1197,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2764:3:8","nodeType":"FunctionDefinition","parameters":{"id":1188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1185,"mutability":"mutable","name":"a","nameLocation":"2776:1:8","nodeType":"VariableDeclaration","scope":1197,"src":"2768:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"b","nameLocation":"2787:1:8","nodeType":"VariableDeclaration","scope":1197,"src":"2779:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2767:22:8"},"returnParameters":{"id":1191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1190,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"2813:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1189,"name":"uint256","nodeType":"ElementaryTypeName","src":"2813:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2812:9:8"},"scope":1333,"src":"2755:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1211,"nodeType":"Block","src":"3189:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1207,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"3206:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1208,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1202,"src":"3210:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3206:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1206,"id":1210,"nodeType":"Return","src":"3199:12:8"}]},"documentation":{"id":1198,"nodeType":"StructuredDocumentation","src":"2857:260:8","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3131:3:8","nodeType":"FunctionDefinition","parameters":{"id":1203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"a","nameLocation":"3143:1:8","nodeType":"VariableDeclaration","scope":1212,"src":"3135:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1202,"mutability":"mutable","name":"b","nameLocation":"3154:1:8","nodeType":"VariableDeclaration","scope":1212,"src":"3146:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3134:22:8"},"returnParameters":{"id":1206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"3180:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3180:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3179:9:8"},"scope":1333,"src":"3122:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1226,"nodeType":"Block","src":"3532:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"3549:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1223,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"3553:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3549:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1221,"id":1225,"nodeType":"Return","src":"3542:12:8"}]},"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"3224:236:8","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":1227,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3474:3:8","nodeType":"FunctionDefinition","parameters":{"id":1218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"a","nameLocation":"3486:1:8","nodeType":"VariableDeclaration","scope":1227,"src":"3478:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1214,"name":"uint256","nodeType":"ElementaryTypeName","src":"3478:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1217,"mutability":"mutable","name":"b","nameLocation":"3497:1:8","nodeType":"VariableDeclaration","scope":1227,"src":"3489:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"3489:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3477:22:8"},"returnParameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1227,"src":"3523:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1219,"name":"uint256","nodeType":"ElementaryTypeName","src":"3523:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3522:9:8"},"scope":1333,"src":"3465:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1241,"nodeType":"Block","src":"3917:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1237,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1230,"src":"3934:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1238,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"3938:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3934:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1236,"id":1240,"nodeType":"Return","src":"3927:12:8"}]},"documentation":{"id":1228,"nodeType":"StructuredDocumentation","src":"3567:278:8","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":1242,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3859:3:8","nodeType":"FunctionDefinition","parameters":{"id":1233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1230,"mutability":"mutable","name":"a","nameLocation":"3871:1:8","nodeType":"VariableDeclaration","scope":1242,"src":"3863:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3863:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1232,"mutability":"mutable","name":"b","nameLocation":"3882:1:8","nodeType":"VariableDeclaration","scope":1242,"src":"3874:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"3874:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3862:22:8"},"returnParameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1235,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1242,"src":"3908:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1234,"name":"uint256","nodeType":"ElementaryTypeName","src":"3908:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3907:9:8"},"scope":1333,"src":"3850:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1256,"nodeType":"Block","src":"4466:29:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1252,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"4483:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1253,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1247,"src":"4487:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4483:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1251,"id":1255,"nodeType":"Return","src":"4476:12:8"}]},"documentation":{"id":1243,"nodeType":"StructuredDocumentation","src":"3952:442:8","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1257,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4408:3:8","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1245,"mutability":"mutable","name":"a","nameLocation":"4420:1:8","nodeType":"VariableDeclaration","scope":1257,"src":"4412:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4412:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1247,"mutability":"mutable","name":"b","nameLocation":"4431:1:8","nodeType":"VariableDeclaration","scope":1257,"src":"4423:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4423:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4411:22:8"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1257,"src":"4457:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"4457:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4456:9:8"},"scope":1333,"src":"4399:96:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1281,"nodeType":"Block","src":"5084:106:8","statements":[{"id":1280,"nodeType":"UncheckedBlock","src":"5094:90:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1270,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"5126:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"5131:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5126:6:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1273,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"5134:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5118:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5118:29:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1275,"nodeType":"ExpressionStatement","src":"5118:29:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1276,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1260,"src":"5168:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1277,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"5172:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5168:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1268,"id":1279,"nodeType":"Return","src":"5161:12:8"}]}]},"documentation":{"id":1258,"nodeType":"StructuredDocumentation","src":"4501:453:8","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":1282,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4968:3:8","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"a","nameLocation":"4989:1:8","nodeType":"VariableDeclaration","scope":1282,"src":"4981:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"4981:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1262,"mutability":"mutable","name":"b","nameLocation":"5008:1:8","nodeType":"VariableDeclaration","scope":1282,"src":"5000:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"5000:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"errorMessage","nameLocation":"5033:12:8","nodeType":"VariableDeclaration","scope":1282,"src":"5019:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1263,"name":"string","nodeType":"ElementaryTypeName","src":"5019:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4971:80:8"},"returnParameters":{"id":1268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1282,"src":"5075:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"5075:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5074:9:8"},"scope":1333,"src":"4959:231:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1306,"nodeType":"Block","src":"5799:105:8","statements":[{"id":1305,"nodeType":"UncheckedBlock","src":"5809:89:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1295,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"5841:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5845:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5841:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1298,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5848:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1294,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5833:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5833:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1300,"nodeType":"ExpressionStatement","src":"5833:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1301,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"5882:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1302,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"5886:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5882:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1293,"id":1304,"nodeType":"Return","src":"5875:12:8"}]}]},"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"5196:473:8","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1307,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5683:3:8","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"mutability":"mutable","name":"a","nameLocation":"5704:1:8","nodeType":"VariableDeclaration","scope":1307,"src":"5696:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"5696:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1287,"mutability":"mutable","name":"b","nameLocation":"5723:1:8","nodeType":"VariableDeclaration","scope":1307,"src":"5715:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5715:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1289,"mutability":"mutable","name":"errorMessage","nameLocation":"5748:12:8","nodeType":"VariableDeclaration","scope":1307,"src":"5734:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1288,"name":"string","nodeType":"ElementaryTypeName","src":"5734:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5686:80:8"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1307,"src":"5790:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"5790:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5789:9:8"},"scope":1333,"src":"5674:230:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1331,"nodeType":"Block","src":"6675:105:8","statements":[{"id":1330,"nodeType":"UncheckedBlock","src":"6685:89:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1320,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"6717:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6721:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6717:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1323,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"6724:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1319,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6709:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6709:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1325,"nodeType":"ExpressionStatement","src":"6709:28:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1326,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1310,"src":"6758:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1327,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"6762:1:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6758:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1318,"id":1329,"nodeType":"Return","src":"6751:12:8"}]}]},"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"5910:635:8","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":1332,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6559:3:8","nodeType":"FunctionDefinition","parameters":{"id":1315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"a","nameLocation":"6580:1:8","nodeType":"VariableDeclaration","scope":1332,"src":"6572:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1309,"name":"uint256","nodeType":"ElementaryTypeName","src":"6572:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"b","nameLocation":"6599:1:8","nodeType":"VariableDeclaration","scope":1332,"src":"6591:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1311,"name":"uint256","nodeType":"ElementaryTypeName","src":"6591:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1314,"mutability":"mutable","name":"errorMessage","nameLocation":"6624:12:8","nodeType":"VariableDeclaration","scope":1332,"src":"6610:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1313,"name":"string","nodeType":"ElementaryTypeName","src":"6610:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6562:80:8"},"returnParameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1332,"src":"6666:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"6666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6665:9:8"},"scope":1333,"src":"6550:230:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1334,"src":"482:6300:8","usedErrors":[]}],"src":"107:6676:8"},"id":8},"contracts/SHRFStaking.sol":{"ast":{"absolutePath":"contracts/SHRFStaking.sol","exportedSymbols":{"Address":[999],"Context":[1021],"IERC20":[352],"IERC20Permit":[388],"Ownable":[112],"Pausable":[220],"ReentrancyGuard":[274],"SafeERC20":[669],"SafeMath":[1333],"Staking":[2057]},"id":2058,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1335,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"38:23:9"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1336,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2058,"sourceUnit":113,"src":"65:52:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":1337,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2058,"sourceUnit":275,"src":"119:62:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/Pausable.sol","file":"@openzeppelin/contracts/security/Pausable.sol","id":1338,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2058,"sourceUnit":221,"src":"183:55:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":1339,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2058,"sourceUnit":1022,"src":"240:51:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":1340,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2058,"sourceUnit":1334,"src":"293:57:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":1341,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2058,"sourceUnit":353,"src":"352:56:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":1342,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2058,"sourceUnit":670,"src":"410:65:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1343,"name":"ReentrancyGuard","nameLocations":["499:15:9"],"nodeType":"IdentifierPath","referencedDeclaration":274,"src":"499:15:9"},"id":1344,"nodeType":"InheritanceSpecifier","src":"499:15:9"},{"baseName":{"id":1345,"name":"Ownable","nameLocations":["516:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"516:7:9"},"id":1346,"nodeType":"InheritanceSpecifier","src":"516:7:9"}],"canonicalName":"Staking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2057,"linearizedBaseContracts":[2057,112,1021,274],"name":"Staking","nameLocation":"488:7:9","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1349,"libraryName":{"id":1347,"name":"SafeMath","nameLocations":["537:8:9"],"nodeType":"IdentifierPath","referencedDeclaration":1333,"src":"537:8:9"},"nodeType":"UsingForDirective","src":"531:27:9","typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"550:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"global":false,"id":1353,"libraryName":{"id":1350,"name":"SafeERC20","nameLocations":["570:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":669,"src":"570:9:9"},"nodeType":"UsingForDirective","src":"564:27:9","typeName":{"id":1352,"nodeType":"UserDefinedTypeName","pathNode":{"id":1351,"name":"IERC20","nameLocations":["584:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"584:6:9"},"referencedDeclaration":352,"src":"584:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"72f702f3","id":1356,"mutability":"mutable","name":"stakingToken","nameLocation":"662:12:9","nodeType":"VariableDeclaration","scope":2057,"src":"648:26:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"},"typeName":{"id":1355,"nodeType":"UserDefinedTypeName","pathNode":{"id":1354,"name":"IERC20","nameLocations":["648:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":352,"src":"648:6:9"},"referencedDeclaration":352,"src":"648:6:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"visibility":"public"},{"canonicalName":"Staking.record","id":1367,"members":[{"constant":false,"id":1358,"mutability":"mutable","name":"stakeTime","nameLocation":"716:9:9","nodeType":"VariableDeclaration","scope":1367,"src":"708:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1357,"name":"uint256","nodeType":"ElementaryTypeName","src":"708:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"stakeAmt","nameLocation":"744:8:9","nodeType":"VariableDeclaration","scope":1367,"src":"736:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1359,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"lastUpdateTime","nameLocation":"771:14:9","nodeType":"VariableDeclaration","scope":1367,"src":"763:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"763:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1364,"mutability":"mutable","name":"accumulatedInterestToUpdateTime","nameLocation":"804:31:9","nodeType":"VariableDeclaration","scope":1367,"src":"796:39:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1363,"name":"uint256","nodeType":"ElementaryTypeName","src":"796:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1366,"mutability":"mutable","name":"amtWithdrawn","nameLocation":"854:12:9","nodeType":"VariableDeclaration","scope":1367,"src":"846:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"846:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"record","nameLocation":"690:6:9","nodeType":"StructDefinition","scope":2057,"src":"683:191:9","visibility":"public"},{"constant":false,"functionSelector":"da5633ef","id":1372,"mutability":"mutable","name":"addressMap","nameLocation":"914:10:9","nodeType":"VariableDeclaration","scope":2057,"src":"880:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record)"},"typeName":{"id":1371,"keyType":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"888:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"880:26:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record)"},"valueType":{"id":1370,"nodeType":"UserDefinedTypeName","pathNode":{"id":1369,"name":"record","nameLocations":["899:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"899:6:9"},"referencedDeclaration":1367,"src":"899:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage_ptr","typeString":"struct Staking.record"}}},"visibility":"public"},{"constant":false,"functionSelector":"4f0fd4ca","id":1376,"mutability":"mutable","name":"addressStore","nameLocation":"966:12:9","nodeType":"VariableDeclaration","scope":2057,"src":"931:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1375,"keyType":{"id":1373,"name":"uint256","nodeType":"ElementaryTypeName","src":"939:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"931:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1374,"name":"address","nodeType":"ElementaryTypeName","src":"950:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"d3cec8ba","id":1382,"mutability":"mutable","name":"stakingAddresses","nameLocation":"1000:16:9","nodeType":"VariableDeclaration","scope":2057,"src":"985:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1377,"name":"uint256","nodeType":"ElementaryTypeName","src":"985:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"arguments":[{"hexValue":"30","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1027:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1019:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1378,"name":"uint256","nodeType":"ElementaryTypeName","src":"1019:7:9","typeDescriptions":{}}},"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1019:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"57ded9c9","id":1388,"mutability":"mutable","name":"apr","nameLocation":"1051:3:9","nodeType":"VariableDeclaration","scope":2057,"src":"1036:31:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1036:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"arguments":[{"hexValue":"35","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1065:1:9","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1057:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1057:7:9","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1057:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"60464627","id":1394,"mutability":"mutable","name":"totalWithdrawals","nameLocation":"1089:16:9","nodeType":"VariableDeclaration","scope":2057,"src":"1074:44:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1389,"name":"uint256","nodeType":"ElementaryTypeName","src":"1074:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"arguments":[{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1116:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1108:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1108:7:9","typeDescriptions":{}}},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1108:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":1400,"mutability":"mutable","name":"divisor","nameLocation":"1141:7:9","nodeType":"VariableDeclaration","scope":2057,"src":"1125:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1395,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"arguments":[{"hexValue":"335f3135335f3030305f3030305f303030","id":1398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1158:17:9","typeDescriptions":{"typeIdentifier":"t_rational_3153000000000_by_1","typeString":"int_const 3153000000000"},"value":"3_153_000_000_000"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3153000000000_by_1","typeString":"int_const 3153000000000"}],"id":1397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1150:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1150:7:9","typeDescriptions":{}}},"id":1399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1150:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"77338642d9284a44296d29a273e04b8ab6b15c7d2439094cd460b7e4f0b33074","id":1404,"name":"Staked","nameLocation":"1189:6:9","nodeType":"EventDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1212:7:9","nodeType":"VariableDeclaration","scope":1404,"src":"1196:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1401,"name":"address","nodeType":"ElementaryTypeName","src":"1196:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1195:25:9"},"src":"1183:38:9"},{"anonymous":false,"eventSelector":"908e667f6c2b13b8062954eb100253ea804c21222b190449e40d967a3ac0ff13","id":1408,"name":"Unstaked","nameLocation":"1233:8:9","nodeType":"EventDefinition","parameters":{"id":1407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1406,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1258:7:9","nodeType":"VariableDeclaration","scope":1408,"src":"1242:23:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1405,"name":"address","nodeType":"ElementaryTypeName","src":"1242:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1241:25:9"},"src":"1227:40:9"},{"body":{"id":1419,"nodeType":"Block","src":"1355:55:9","statements":[{"expression":{"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1413,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"1366:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1415,"name":"_stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1410,"src":"1388:13:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1414,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"1381:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$352_$","typeString":"type(contract IERC20)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1381:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"src":"1366:36:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1418,"nodeType":"ExpressionStatement","src":"1366:36:9"}]},"id":1420,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1410,"mutability":"mutable","name":"_stakingToken","nameLocation":"1340:13:9","nodeType":"VariableDeclaration","scope":1420,"src":"1332:21:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1409,"name":"address","nodeType":"ElementaryTypeName","src":"1332:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1331:23:9"},"returnParameters":{"id":1412,"nodeType":"ParameterList","parameters":[],"src":"1355:0:9"},"scope":2057,"src":"1320:90:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1464,"nodeType":"Block","src":"2067:258:9","statements":[{"assignments":[1427],"declarations":[{"constant":false,"id":1427,"mutability":"mutable","name":"total","nameLocation":"2086:5:9","nodeType":"VariableDeclaration","scope":1464,"src":"2078:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1426,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1432,"initialValue":{"arguments":[{"hexValue":"30","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2102:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2094:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1428,"name":"uint256","nodeType":"ElementaryTypeName","src":"2094:7:9","typeDescriptions":{}}},"id":1431,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2094:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2078:26:9"},{"body":{"id":1460,"nodeType":"Block","src":"2162:133:9","statements":[{"assignments":[1445],"declarations":[{"constant":false,"id":1445,"mutability":"mutable","name":"thisRecord","nameLocation":"2191:10:9","nodeType":"VariableDeclaration","scope":1460,"src":"2177:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record"},"typeName":{"id":1444,"nodeType":"UserDefinedTypeName","pathNode":{"id":1443,"name":"record","nameLocations":["2177:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"2177:6:9"},"referencedDeclaration":1367,"src":"2177:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage_ptr","typeString":"struct Staking.record"}},"visibility":"internal"}],"id":1451,"initialValue":{"baseExpression":{"id":1446,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"2204:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1450,"indexExpression":{"baseExpression":{"id":1447,"name":"addressStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"2215:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1449,"indexExpression":{"id":1448,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2228:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2215:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2204:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2177:54:9"},{"expression":{"id":1458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1452,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"2246:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1453,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"2255:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":1454,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"2263:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2274:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"2263:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2255:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2254:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2246:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1459,"nodeType":"ExpressionStatement","src":"2246:37:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1437,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2135:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1438,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2139:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2135:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1461,"initializationExpression":{"assignments":[1434],"declarations":[{"constant":false,"id":1434,"mutability":"mutable","name":"i","nameLocation":"2128:1:9","nodeType":"VariableDeclaration","scope":1461,"src":"2120:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1436,"initialValue":{"hexValue":"30","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2132:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2120:13:9"},"loopExpression":{"expression":{"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2157:3:9","subExpression":{"id":1440,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"2157:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1442,"nodeType":"ExpressionStatement","src":"2157:3:9"},"nodeType":"ForStatement","src":"2115:180:9"},{"expression":{"id":1462,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"2312:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1425,"id":1463,"nodeType":"Return","src":"2305:12:9"}]},"documentation":{"id":1421,"nodeType":"StructuredDocumentation","src":"1459:543:9","text":" Function totalStakedAmount\n The function takes in 0 variables. It can be called by functions both inside and outside of this contract. It does the following :\n creates an internal variable total with initial value 0\n repeat stakingAddresses times with loop variable i :  (creates an internal variable thisRecord with initial value addressMap with element addressStore with element Loop Variable i; and then updates total as (total) + (thisRecord with element stakeAmt))\n returns total as output"},"functionSelector":"567e98f9","id":1465,"implemented":true,"kind":"function","modifiers":[],"name":"totalStakedAmount","nameLocation":"2017:17:9","nodeType":"FunctionDefinition","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[],"src":"2034:2:9"},"returnParameters":{"id":1425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"2058:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2058:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2057:9:9"},"scope":2057,"src":"2008:317:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1503,"nodeType":"Block","src":"2870:258:9","statements":[{"assignments":[1472],"declarations":[{"constant":false,"id":1472,"mutability":"mutable","name":"total","nameLocation":"2889:5:9","nodeType":"VariableDeclaration","scope":1503,"src":"2881:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2881:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1477,"initialValue":{"arguments":[{"hexValue":"30","id":1475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2905:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2897:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2897:7:9","typeDescriptions":{}}},"id":1476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2897:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2881:26:9"},{"body":{"id":1499,"nodeType":"Block","src":"2965:133:9","statements":[{"expression":{"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1488,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"2980:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1489,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"2989:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"baseExpression":{"id":1491,"name":"addressStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"3051:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1493,"indexExpression":{"id":1492,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3064:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3051:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1490,"name":"presentEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"3014:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3014:71:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2989:96:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1496,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2988:98:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2980:106:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1498,"nodeType":"ExpressionStatement","src":"2980:106:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1482,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2938:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1483,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"2942:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2938:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1500,"initializationExpression":{"assignments":[1479],"declarations":[{"constant":false,"id":1479,"mutability":"mutable","name":"i","nameLocation":"2931:1:9","nodeType":"VariableDeclaration","scope":1500,"src":"2923:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1478,"name":"uint256","nodeType":"ElementaryTypeName","src":"2923:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1481,"initialValue":{"hexValue":"30","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2935:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2923:13:9"},"loopExpression":{"expression":{"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2960:3:9","subExpression":{"id":1485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"2960:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1487,"nodeType":"ExpressionStatement","src":"2960:3:9"},"nodeType":"ForStatement","src":"2918:180:9"},{"expression":{"id":1501,"name":"total","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"3115:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1470,"id":1502,"nodeType":"Return","src":"3108:12:9"}]},"documentation":{"id":1466,"nodeType":"StructuredDocumentation","src":"2333:465:9","text":" Function totalAccumulatedInterest\n The function takes in 0 variables. It can be called by functions both inside and outside of this contract. It does the following :\n creates an internal variable total with initial value 0\n repeat stakingAddresses times with loop variable i :  (updates total as (total) + (presentEarning with variable _address as addressStore with element Loop Variable i))\n returns total as output"},"functionSelector":"2e82c983","id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"totalAccumulatedInterest","nameLocation":"2813:24:9","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[],"src":"2837:2:9"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1504,"src":"2861:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2860:9:9"},"scope":2057,"src":"2804:324:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1539,"nodeType":"Block","src":"3745:265:9","statements":[{"assignments":[1514],"declarations":[{"constant":false,"id":1514,"mutability":"mutable","name":"thisRecord","nameLocation":"3770:10:9","nodeType":"VariableDeclaration","scope":1539,"src":"3756:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record"},"typeName":{"id":1513,"nodeType":"UserDefinedTypeName","pathNode":{"id":1512,"name":"record","nameLocations":["3756:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"3756:6:9"},"referencedDeclaration":1367,"src":"3756:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage_ptr","typeString":"struct Staking.record"}},"visibility":"internal"}],"id":1518,"initialValue":{"baseExpression":{"id":1515,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"3783:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1517,"indexExpression":{"id":1516,"name":"_address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"3794:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3783:20:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3756:47:9"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1519,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"3822:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3833:31:9","memberName":"accumulatedInterestToUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"3822:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1521,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"3882:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3893:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"3882:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1523,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3922:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3928:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"3922:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1525,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"3940:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1526,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3951:14:9","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"3940:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3922:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3921:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3882:84:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1530,"name":"apr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"3986:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3882:107:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3881:109:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1533,"name":"divisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"3993:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3881:119:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1535,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3880:121:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3822:179:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1537,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3821:181:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1511,"id":1538,"nodeType":"Return","src":"3814:188:9"}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3136:515:9","text":" Function presentEarning\n The function takes in 1 variable, (an address) _address. It can be called by functions both inside and outside of this contract. It does the following :\n creates an internal variable thisRecord with initial value addressMap with element _address\n returns (thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864)) as output"},"functionSelector":"b583ea51","id":1540,"implemented":true,"kind":"function","modifiers":[],"name":"presentEarning","nameLocation":"3666:14:9","nodeType":"FunctionDefinition","parameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"_address","nameLocation":"3699:8:9","nodeType":"VariableDeclaration","scope":1540,"src":"3691:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3680:34:9"},"returnParameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1540,"src":"3736:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1509,"name":"uint256","nodeType":"ElementaryTypeName","src":"3736:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3735:9:9"},"scope":2057,"src":"3657:353:9","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1671,"nodeType":"Block","src":"5664:1200:9","statements":[{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1549,"name":"_stakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"5698:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"hexValue":"30","id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5718:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5710:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1550,"name":"uint256","nodeType":"ElementaryTypeName","src":"5710:7:9","typeDescriptions":{}}},"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5698:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1555,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5697:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b656420616d6f756e74206e6565647320746f2062652067726561746572207468616e2030","id":1556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5736:42:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bc95157987e4fc53544852f1d612e4c43d757cb6def8c7731e8c06b851f7318","typeString":"literal_string \"Staked amount needs to be greater than 0\""},"value":"Staked amount needs to be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bc95157987e4fc53544852f1d612e4c43d757cb6def8c7731e8c06b851f7318","typeString":"literal_string \"Staked amount needs to be greater than 0\""}],"id":1548,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5675:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5675:114:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"ExpressionStatement","src":"5675:114:9"},{"assignments":[1561],"declarations":[{"constant":false,"id":1561,"mutability":"mutable","name":"thisRecord","nameLocation":"5814:10:9","nodeType":"VariableDeclaration","scope":1671,"src":"5800:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record"},"typeName":{"id":1560,"nodeType":"UserDefinedTypeName","pathNode":{"id":1559,"name":"record","nameLocations":["5800:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"5800:6:9"},"referencedDeclaration":1367,"src":"5800:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage_ptr","typeString":"struct Staking.record"}},"visibility":"internal"}],"id":1566,"initialValue":{"baseExpression":{"id":1562,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5827:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1565,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1563,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5838:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5838:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5827:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5800:51:9"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1567,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"5867:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5878:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"5867:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5898:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5890:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"5890:7:9","typeDescriptions":{}}},"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5890:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5867:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5866:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1652,"nodeType":"Block","src":"6280:461:9","statements":[{"expression":{"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1614,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"6295:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1617,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1615,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"6306:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6295:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1619,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6347:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6353:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"6347:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1621,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"6382:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6393:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"6382:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1623,"name":"_stakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"6404:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6382:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6381:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1626,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6433:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6439:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"6433:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1628,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"6468:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6479:31:9","memberName":"accumulatedInterestToUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"6468:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1630,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"6536:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6547:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"6536:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1632,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6584:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6590:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"6584:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1634,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"6602:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6613:14:9","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"6602:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6584:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6583:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6536:92:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1639,"name":"apr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"6656:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6536:123:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6535:125:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1642,"name":"divisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"6663:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6535:135:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1644,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6534:137:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6468:203:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1646,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6467:205:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1647,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1561,"src":"6691:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6702:12:9","memberName":"amtWithdrawn","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"6691:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1618,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"6322:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_record_$1367_storage_ptr_$","typeString":"type(struct Staking.record storage pointer)"}},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:407:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"src":"6295:434:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"id":1651,"nodeType":"ExpressionStatement","src":"6295:434:9"}]},"id":1653,"nodeType":"IfStatement","src":"5862:879:9","trueBody":{"id":1613,"nodeType":"Block","src":"5903:371:9","statements":[{"expression":{"id":1594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1575,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5918:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1578,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1576,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"5929:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5929:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5918:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1580,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5970:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5976:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"5970:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1582,"name":"_stakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"6004:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1583,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6032:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6038:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"6032:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6074:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6066:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1585,"name":"uint256","nodeType":"ElementaryTypeName","src":"6066:7:9","typeDescriptions":{}}},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6066:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6103:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6095:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"6095:7:9","typeDescriptions":{}}},"id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6095:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1579,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"5945:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_record_$1367_storage_ptr_$","typeString":"type(struct Staking.record storage pointer)"}},"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5945:175:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"src":"5918:202:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"id":1595,"nodeType":"ExpressionStatement","src":"5918:202:9"},{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1596,"name":"addressStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"6135:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1598,"indexExpression":{"id":1597,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"6148:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6135:30:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":1599,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"6168:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6135:45:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1602,"nodeType":"ExpressionStatement","src":"6135:45:9"},{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"6195:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1604,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"6215:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"hexValue":"31","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6259:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6251:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"6251:7:9","typeDescriptions":{}}},"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6251:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6215:46:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6214:48:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6195:67:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ExpressionStatement","src":"6195:67:9"}]}},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1657,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"6781:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6781:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1661,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6803:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}],"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6795:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1659,"name":"address","nodeType":"ElementaryTypeName","src":"6795:7:9","typeDescriptions":{}}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6795:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1663,"name":"_stakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"6810:9:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1654,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"6751:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6764:16:9","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":446,"src":"6751:29:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$352_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$352_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6751:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1665,"nodeType":"ExpressionStatement","src":"6751:69:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1667,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"6843:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6843:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1666,"name":"Staked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"6836:6:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6836:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1670,"nodeType":"EmitStatement","src":"6831:25:9"}]},"documentation":{"id":1541,"nodeType":"StructuredDocumentation","src":"4018:1584:9","text":" Function stake\n Daily Interest Rate : Variable apr\n Address Map : addressMap\n ERC20 Transfer : 0x33D512a749f6feFaDB832c91c0F23Bc27bE2E3d4, _stakeAmt\n The function takes in 1 variable, (zero or a positive integer) _stakeAmt. It can be called by functions both inside and outside of this contract. It does the following :\n checks that _stakeAmt is strictly greater than 0\n creates an internal variable thisRecord with initial value addressMap with element the address that called this function\n if (thisRecord with element stakeAmt) is equals to 0 then (updates addressMap (Element the address that called this function) as Struct comprising current time, _stakeAmt, current time, 0, 0; then updates addressStore (Element stakingAddresses) as the address that called this function; and then updates stakingAddresses as (stakingAddresses) + (1)) otherwise (updates addressMap (Element the address that called this function) as Struct comprising current time, ((thisRecord with element stakeAmt) + (_stakeAmt)), current time, ((thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864))), (thisRecord with element amtWithdrawn))\n calls ERC20's transferFrom function  with variable sender as the address that called this function, variable recipient as the address of this contract, variable amount as _stakeAmt\n emits event Staked with inputs the address that called this function"},"functionSelector":"a694fc3a","id":1672,"implemented":true,"kind":"function","modifiers":[{"id":1546,"kind":"modifierInvocation","modifierName":{"id":1545,"name":"nonReentrant","nameLocations":["5651:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"5651:12:9"},"nodeType":"ModifierInvocation","src":"5651:12:9"}],"name":"stake","nameLocation":"5617:5:9","nodeType":"FunctionDefinition","parameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1543,"mutability":"mutable","name":"_stakeAmt","nameLocation":"5631:9:9","nodeType":"VariableDeclaration","scope":1672,"src":"5623:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5623:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5622:19:9"},"returnParameters":{"id":1547,"nodeType":"ParameterList","parameters":[],"src":"5664:0:9"},"scope":2057,"src":"5608:1256:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1864,"nodeType":"Block","src":"9202:1973:9","statements":[{"assignments":[1682],"declarations":[{"constant":false,"id":1682,"mutability":"mutable","name":"thisRecord","nameLocation":"9227:10:9","nodeType":"VariableDeclaration","scope":1864,"src":"9213:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record"},"typeName":{"id":1681,"nodeType":"UserDefinedTypeName","pathNode":{"id":1680,"name":"record","nameLocations":["9213:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"9213:6:9"},"referencedDeclaration":1367,"src":"9213:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage_ptr","typeString":"struct Staking.record"}},"visibility":"internal"}],"id":1687,"initialValue":{"baseExpression":{"id":1683,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"9240:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1686,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1684,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"9251:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9251:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9240:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9213:51:9"},{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"_unstakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"9298:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1690,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"9313:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9324:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"9313:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9298:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9297:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177696e67206d6f7265207468616e207374616b656420616d6f756e74","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9348:37:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc2d125021d8f60b44170d715a9b2ac1d0b66b9258405e6ddfe7424ad7b29348","typeString":"literal_string \"Withdrawing more than staked amount\""},"value":"Withdrawing more than staked amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc2d125021d8f60b44170d715a9b2ac1d0b66b9258405e6ddfe7424ad7b29348","typeString":"literal_string \"Withdrawing more than staked amount\""}],"id":1688,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9275:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9275:121:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1696,"nodeType":"ExpressionStatement","src":"9275:121:9"},{"assignments":[1698],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"newAccum","nameLocation":"9415:8:9","nodeType":"VariableDeclaration","scope":1864,"src":"9407:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1697,"name":"uint256","nodeType":"ElementaryTypeName","src":"9407:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1718,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1699,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"9427:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1700,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9438:31:9","memberName":"accumulatedInterestToUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"9427:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1701,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"9487:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1702,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9498:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"9487:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1703,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9527:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9533:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"9527:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1705,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"9545:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1706,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9556:14:9","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"9545:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9527:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9526:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9487:84:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1710,"name":"apr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"9591:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9487:107:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1712,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9486:109:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1713,"name":"divisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"9598:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9486:119:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1715,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9485:121:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9427:179:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1717,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9426:181:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9407:200:9"},{"assignments":[1720],"declarations":[{"constant":false,"id":1720,"mutability":"mutable","name":"interestToRemove","nameLocation":"9626:16:9","nodeType":"VariableDeclaration","scope":1864,"src":"9618:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1719,"name":"uint256","nodeType":"ElementaryTypeName","src":"9618:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1729,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1721,"name":"newAccum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"9647:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1722,"name":"_unstakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"9658:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9647:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9646:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":1725,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"9686:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9697:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"9686:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9646:59:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9645:61:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9618:88:9"},{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1733,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9748:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}],"id":1732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9740:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"9740:7:9","typeDescriptions":{}}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9740:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9754:7:9","memberName":"balance","nodeType":"MemberAccess","src":"9740:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1736,"name":"interestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"9765:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9740:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1738,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9739:43:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616d6f756e74206f66206e61746976652063757272656e637920696e207468697320636f6e747261637420746f207472616e73666572206f75742e20506c6561736520636f6e746163742074686520636f6e7472616374206f776e657220746f20746f7020757020746865206e61746976652063757272656e63792e","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9797:139:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6","typeString":"literal_string \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\""},"value":"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6","typeString":"literal_string \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\""}],"id":1730,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9717:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9717:230:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1741,"nodeType":"ExpressionStatement","src":"9717:230:9"},{"expression":{"arguments":[{"id":1748,"name":"interestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"9989:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1744,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"9966:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9966:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9958:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1742,"name":"address","nodeType":"ElementaryTypeName","src":"9958:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9958:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9980:8:9","memberName":"transfer","nodeType":"MemberAccess","src":"9958:30:9","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9958:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1750,"nodeType":"ExpressionStatement","src":"9958:48:9"},{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1756,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10071:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}],"id":1755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10063:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"10063:7:9","typeDescriptions":{}}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10063:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1752,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10040:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10053:9:9","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":309,"src":"10040:22:9","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10040:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1759,"name":"_unstakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"10081:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10040:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10039:54:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616d6f756e74206f662074686520746f6b656e20696e207468697320636f6e747261637420746f207472616e73666572206f75742e20506c6561736520636f6e746163742074686520636f6e7472616374206f776e657220746f20746f702075702074686520746f6b656e2e","id":1762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10108:123:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_95103a4a809546be77054f7c7b0e13c99bc48824a20d9e5960729f46a17f2413","typeString":"literal_string \"Insufficient amount of the token in this contract to transfer out. Please contact the contract owner to top up the token.\""},"value":"Insufficient amount of the token in this contract to transfer out. Please contact the contract owner to top up the token."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95103a4a809546be77054f7c7b0e13c99bc48824a20d9e5960729f46a17f2413","typeString":"literal_string \"Insufficient amount of the token in this contract to transfer out. Please contact the contract owner to top up the token.\""}],"id":1751,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10017:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10017:225:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1764,"nodeType":"ExpressionStatement","src":"10017:225:9"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1768,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10275:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10275:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1770,"name":"_unstakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"10289:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1765,"name":"stakingToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1356,"src":"10253:12:9","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$352","typeString":"contract IERC20"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10266:8:9","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":319,"src":"10253:21:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10253:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1772,"nodeType":"ExpressionStatement","src":"10253:48:9"},{"expression":{"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1773,"name":"totalWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"10312:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"totalWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"10332:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1775,"name":"interestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"10351:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10332:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1777,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10331:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10312:56:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1779,"nodeType":"ExpressionStatement","src":"10312:56:9"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1780,"name":"_unstakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"10384:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1781,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"10399:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1782,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10410:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"10399:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10384:34:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10383:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1832,"nodeType":"IfStatement","src":"10379:468:9","trueBody":{"id":1831,"nodeType":"Block","src":"10421:426:9","statements":[{"body":{"id":1829,"nodeType":"Block","src":"10483:353:9","statements":[{"condition":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1795,"name":"addressStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10507:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1797,"indexExpression":{"id":1796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10520:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10507:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1798,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10526:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10526:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10507:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10506:33:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1828,"nodeType":"IfStatement","src":"10502:319:9","trueBody":{"id":1827,"nodeType":"Block","src":"10541:280:9","statements":[{"expression":{"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1802,"name":"addressStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10564:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1804,"indexExpression":{"id":1803,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10577:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10564:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1805,"name":"addressStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"10582:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1813,"indexExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1806,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"10622:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"hexValue":"31","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10649:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10641:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1807,"name":"uint256","nodeType":"ElementaryTypeName","src":"10641:7:9","typeDescriptions":{}}},"id":1810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10641:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10622:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1812,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10621:31:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10582:93:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10564:111:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1815,"nodeType":"ExpressionStatement","src":"10564:111:9"},{"expression":{"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1816,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"10698:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1817,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"10718:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"hexValue":"31","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10770:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10762:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1818,"name":"uint256","nodeType":"ElementaryTypeName","src":"10762:7:9","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10762:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10718:54:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1823,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10717:56:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10698:75:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1825,"nodeType":"ExpressionStatement","src":"10698:75:9"},{"id":1826,"nodeType":"Break","src":"10796:5:9"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1789,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10456:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1790,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"10460:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10456:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1830,"initializationExpression":{"assignments":[1786],"declarations":[{"constant":false,"id":1786,"mutability":"mutable","name":"i","nameLocation":"10449:1:9","nodeType":"VariableDeclaration","scope":1830,"src":"10441:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1785,"name":"uint256","nodeType":"ElementaryTypeName","src":"10441:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1788,"initialValue":{"hexValue":"30","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10453:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10441:13:9"},"loopExpression":{"expression":{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10478:3:9","subExpression":{"id":1792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"10478:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1794,"nodeType":"ExpressionStatement","src":"10478:3:9"},"nodeType":"ForStatement","src":"10436:400:9"}]}},{"expression":{"id":1857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1833,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"10857:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1836,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1834,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"10868:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10868:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10857:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1838,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"10905:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10916:9:9","memberName":"stakeTime","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"10905:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1840,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"10941:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10952:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"10941:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1842,"name":"_unstakeAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"10963:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10941:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10940:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1845,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"10990:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11001:14:9","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"10990:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1847,"name":"newAccum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"11031:8:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1848,"name":"interestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"11042:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11031:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11030:29:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1851,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1682,"src":"11075:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11086:12:9","memberName":"amtWithdrawn","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"11075:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1853,"name":"interestToRemove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"11101:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11075:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1855,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11074:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1837,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"10884:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_record_$1367_storage_ptr_$","typeString":"type(struct Staking.record storage pointer)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10884:245:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"src":"10857:272:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"id":1858,"nodeType":"ExpressionStatement","src":"10857:272:9"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1860,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"11154:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11154:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1859,"name":"Unstaked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"11145:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11145:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1863,"nodeType":"EmitStatement","src":"11140:27:9"}]},"documentation":{"id":1673,"nodeType":"StructuredDocumentation","src":"6872:2264:9","text":" Function unstake\n The function takes in 1 variable, (zero or a positive integer) _unstakeAmt. It can be called by functions both inside and outside of this contract. It does the following :\n creates an internal variable thisRecord with initial value addressMap with element the address that called this function\n checks that _unstakeAmt is less than or equals to (thisRecord with element stakeAmt)\n creates an internal variable newAccum with initial value (thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864))\n creates an internal variable interestToRemove with initial value ((newAccum) * (_unstakeAmt)) / (thisRecord with element stakeAmt)\n checks that (amount of native currency owned by the address of this contract) is greater than or equals to interestToRemove\n transfers interestToRemove of the native currency to the address that called this function\n checks that (ERC20's balanceOf function  with variable recipient as the address of this contract) is greater than or equals to _unstakeAmt\n calls ERC20's transfer function  with variable recipient as the address that called this function, variable amount as _unstakeAmt\n updates totalWithdrawals as (totalWithdrawals) + (interestToRemove)\n if _unstakeAmt is equals to (thisRecord with element stakeAmt) then (repeat stakingAddresses times with loop variable i :  (if (addressStore with element Loop Variable i) is equals to (the address that called this function) then (updates addressStore (Element Loop Variable i) as addressStore with element (stakingAddresses) - (1); then updates stakingAddresses as (stakingAddresses) - (1); and then terminates the for-next loop)))\n updates addressMap (Element the address that called this function) as Struct comprising (thisRecord with element stakeTime), ((thisRecord with element stakeAmt) - (_unstakeAmt)), (thisRecord with element lastUpdateTime), ((newAccum) - (interestToRemove)), ((thisRecord with element amtWithdrawn) + (interestToRemove))\n emits event Unstaked with inputs the address that called this function"},"functionSelector":"2e17de78","id":1865,"implemented":true,"kind":"function","modifiers":[{"id":1678,"kind":"modifierInvocation","modifierName":{"id":1677,"name":"nonReentrant","nameLocations":["9189:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"9189:12:9"},"nodeType":"ModifierInvocation","src":"9189:12:9"}],"name":"unstake","nameLocation":"9151:7:9","nodeType":"FunctionDefinition","parameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"_unstakeAmt","nameLocation":"9167:11:9","nodeType":"VariableDeclaration","scope":1865,"src":"9159:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1674,"name":"uint256","nodeType":"ElementaryTypeName","src":"9159:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9158:21:9"},"returnParameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"9202:0:9"},"scope":2057,"src":"9142:2033:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1947,"nodeType":"Block","src":"12472:971:9","statements":[{"assignments":[1874],"declarations":[{"constant":false,"id":1874,"mutability":"mutable","name":"totalInterestEarnedTillNow","nameLocation":"12491:26:9","nodeType":"VariableDeclaration","scope":1947,"src":"12483:34:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"12483:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1879,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1876,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12553:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12553:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1875,"name":"presentEarning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1540,"src":"12520:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12520:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12483:97:9"},{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"_withdrawalAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"12614:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1882,"name":"totalInterestEarnedTillNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"12632:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12614:44:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12613:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57697468647261776e20616d6f756e74206d757374206265206c657373207468616e20776974686472617761626c6520616d6f756e74","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12674:56:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_a27a5eb7856de28254026458a5f18b6961698e344ae637bfc945dffeb1fa0350","typeString":"literal_string \"Withdrawn amount must be less than withdrawable amount\""},"value":"Withdrawn amount must be less than withdrawable amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a27a5eb7856de28254026458a5f18b6961698e344ae637bfc945dffeb1fa0350","typeString":"literal_string \"Withdrawn amount must be less than withdrawable amount\""}],"id":1880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12591:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12591:150:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1887,"nodeType":"ExpressionStatement","src":"12591:150:9"},{"assignments":[1890],"declarations":[{"constant":false,"id":1890,"mutability":"mutable","name":"thisRecord","nameLocation":"12766:10:9","nodeType":"VariableDeclaration","scope":1947,"src":"12752:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record"},"typeName":{"id":1889,"nodeType":"UserDefinedTypeName","pathNode":{"id":1888,"name":"record","nameLocations":["12752:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"12752:6:9"},"referencedDeclaration":1367,"src":"12752:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage_ptr","typeString":"struct Staking.record"}},"visibility":"internal"}],"id":1895,"initialValue":{"baseExpression":{"id":1891,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"12779:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1894,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1892,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12790:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12790:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12779:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12752:51:9"},{"expression":{"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1896,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"12814:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1899,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1897,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"12825:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12825:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12814:24:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1901,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12862:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1902,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12873:9:9","memberName":"stakeTime","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"12862:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1903,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"12897:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12908:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"12897:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1905,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12931:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12937:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"12931:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1907,"name":"totalInterestEarnedTillNow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"12962:26:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1908,"name":"_withdrawalAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"12991:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12962:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1910,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12961:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1911,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1890,"src":"13022:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13033:12:9","memberName":"amtWithdrawn","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"13022:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1913,"name":"_withdrawalAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"13048:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13022:40:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1915,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13021:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1900,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"12841:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_record_$1367_storage_ptr_$","typeString":"type(struct Staking.record storage pointer)"}},"id":1916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12841:233:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"src":"12814:260:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"id":1918,"nodeType":"ExpressionStatement","src":"12814:260:9"},{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1922,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13116:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}],"id":1921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13108:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1920,"name":"address","nodeType":"ElementaryTypeName","src":"13108:7:9","typeDescriptions":{}}},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13108:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13122:7:9","memberName":"balance","nodeType":"MemberAccess","src":"13108:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1925,"name":"_withdrawalAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"13133:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13108:39:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1927,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13107:41:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616d6f756e74206f66206e61746976652063757272656e637920696e207468697320636f6e747261637420746f207472616e73666572206f75742e20506c6561736520636f6e746163742074686520636f6e7472616374206f776e657220746f20746f7020757020746865206e61746976652063757272656e63792e","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13163:139:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6","typeString":"literal_string \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\""},"value":"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6","typeString":"literal_string \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\""}],"id":1919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13085:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13085:228:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1930,"nodeType":"ExpressionStatement","src":"13085:228:9"},{"expression":{"arguments":[{"id":1937,"name":"_withdrawalAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"13355:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1933,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"13332:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13332:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13324:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"13324:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13324:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13346:8:9","memberName":"transfer","nodeType":"MemberAccess","src":"13324:30:9","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13324:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1939,"nodeType":"ExpressionStatement","src":"13324:46:9"},{"expression":{"id":1945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1940,"name":"totalWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"13381:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1941,"name":"totalWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"13401:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1942,"name":"_withdrawalAmt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1868,"src":"13420:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13401:33:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13400:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13381:54:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1946,"nodeType":"ExpressionStatement","src":"13381:54:9"}]},"documentation":{"id":1866,"nodeType":"StructuredDocumentation","src":"11183:1190:9","text":" Function withdrawReward\n The function takes in 1 variable, (zero or a positive integer) _withdrawalAmt. It can only be called by functions outside of this contract. It does the following :\n creates an internal variable totalInterestEarnedTillNow with initial value presentEarning with variable _address as the address that called this function\n checks that _withdrawalAmt is less than or equals to totalInterestEarnedTillNow\n creates an internal variable thisRecord with initial value addressMap with element the address that called this function\n updates addressMap (Element the address that called this function) as Struct comprising (thisRecord with element stakeTime), (thisRecord with element stakeAmt), current time, ((totalInterestEarnedTillNow) - (_withdrawalAmt)), ((thisRecord with element amtWithdrawn) + (_withdrawalAmt))\n checks that (amount of native currency owned by the address of this contract) is greater than or equals to _withdrawalAmt\n transfers _withdrawalAmt of the native currency to the address that called this function\n updates totalWithdrawals as (totalWithdrawals) + (_withdrawalAmt)"},"functionSelector":"523a3f08","id":1948,"implemented":true,"kind":"function","modifiers":[{"id":1871,"kind":"modifierInvocation","modifierName":{"id":1870,"name":"nonReentrant","nameLocations":["12454:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":250,"src":"12454:12:9"},"nodeType":"ModifierInvocation","src":"12454:12:9"}],"name":"withdrawReward","nameLocation":"12388:14:9","nodeType":"FunctionDefinition","parameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"_withdrawalAmt","nameLocation":"12411:14:9","nodeType":"VariableDeclaration","scope":1948,"src":"12403:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"12403:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12402:24:9"},"returnParameters":{"id":1872,"nodeType":"ParameterList","parameters":[],"src":"12472:0:9"},"scope":2057,"src":"12379:1064:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2009,"nodeType":"Block","src":"14310:588:9","statements":[{"body":{"id":2007,"nodeType":"Block","src":"14368:523:9","statements":[{"assignments":[1964],"declarations":[{"constant":false,"id":1964,"mutability":"mutable","name":"thisRecord","nameLocation":"14397:10:9","nodeType":"VariableDeclaration","scope":2007,"src":"14383:24:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record"},"typeName":{"id":1963,"nodeType":"UserDefinedTypeName","pathNode":{"id":1962,"name":"record","nameLocations":["14383:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1367,"src":"14383:6:9"},"referencedDeclaration":1367,"src":"14383:6:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage_ptr","typeString":"struct Staking.record"}},"visibility":"internal"}],"id":1970,"initialValue":{"baseExpression":{"id":1965,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"14410:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1969,"indexExpression":{"baseExpression":{"id":1966,"name":"addressStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"14421:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1968,"indexExpression":{"id":1967,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"14434:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14421:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14410:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14383:54:9"},{"expression":{"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1971,"name":"addressMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"14452:10:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_record_$1367_storage_$","typeString":"mapping(address => struct Staking.record storage ref)"}},"id":1975,"indexExpression":{"baseExpression":{"id":1972,"name":"addressStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1376,"src":"14463:12:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1974,"indexExpression":{"id":1973,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"14476:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14463:15:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14452:27:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":1977,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"14507:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1978,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14518:9:9","memberName":"stakeTime","nodeType":"MemberAccess","referencedDeclaration":1358,"src":"14507:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1979,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"14546:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1980,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14557:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"14546:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1981,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14584:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14590:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"14584:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1983,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"14619:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14630:31:9","memberName":"accumulatedInterestToUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1364,"src":"14619:42:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1985,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"14687:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14698:8:9","memberName":"stakeAmt","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"14687:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1987,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14735:5:9","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14741:9:9","memberName":"timestamp","nodeType":"MemberAccess","src":"14735:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1989,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"14753:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":1990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14764:14:9","memberName":"lastUpdateTime","nodeType":"MemberAccess","referencedDeclaration":1362,"src":"14753:25:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14735:43:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14734:45:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14687:92:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1994,"name":"apr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"14807:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14687:123:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1996,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14686:125:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1997,"name":"divisor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"14813:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14686:134:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1999,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14685:136:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14619:202:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14618:204:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2002,"name":"thisRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"14841:10:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14852:12:9","memberName":"amtWithdrawn","nodeType":"MemberAccess","referencedDeclaration":1366,"src":"14841:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1976,"name":"record","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"14482:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_record_$1367_storage_ptr_$","typeString":"type(struct Staking.record storage pointer)"}},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14482:397:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_memory_ptr","typeString":"struct Staking.record memory"}},"src":"14452:427:9","typeDescriptions":{"typeIdentifier":"t_struct$_record_$1367_storage","typeString":"struct Staking.record storage ref"}},"id":2006,"nodeType":"ExpressionStatement","src":"14452:427:9"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1956,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"14341:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1957,"name":"stakingAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"14345:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14341:20:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2008,"initializationExpression":{"assignments":[1953],"declarations":[{"constant":false,"id":1953,"mutability":"mutable","name":"i","nameLocation":"14334:1:9","nodeType":"VariableDeclaration","scope":2008,"src":"14326:9:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"14326:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1955,"initialValue":{"hexValue":"30","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14338:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"14326:13:9"},"loopExpression":{"expression":{"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"14363:3:9","subExpression":{"id":1959,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"14363:1:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1961,"nodeType":"ExpressionStatement","src":"14363:3:9"},"nodeType":"ForStatement","src":"14321:570:9"}]},"documentation":{"id":1949,"nodeType":"StructuredDocumentation","src":"13451:796:9","text":" Function updateRecordsWithLatestInterestRates\n The function takes in 0 variables. It can only be called by other functions in this contract. It does the following :\n repeat stakingAddresses times with loop variable i :  (creates an internal variable thisRecord with initial value addressMap with element addressStore with element Loop Variable i; and then updates addressMap (Element addressStore with element Loop Variable i) as Struct comprising (thisRecord with element stakeTime), (thisRecord with element stakeAmt), current time, ((thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864))), (thisRecord with element amtWithdrawn))"},"id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"updateRecordsWithLatestInterestRates","nameLocation":"14262:36:9","nodeType":"FunctionDefinition","parameters":{"id":1950,"nodeType":"ParameterList","parameters":[],"src":"14298:2:9"},"returnParameters":{"id":1951,"nodeType":"ParameterList","parameters":[],"src":"14310:0:9"},"scope":2057,"src":"14253:645:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2025,"nodeType":"Block","src":"15452:78:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2018,"name":"updateRecordsWithLatestInterestRates","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"15463:36:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"ExpressionStatement","src":"15463:38:9"},{"expression":{"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2021,"name":"apr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"15512:3:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2022,"name":"_apr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"15518:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15512:10:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2024,"nodeType":"ExpressionStatement","src":"15512:10:9"}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"14964:409:9","text":" Function modifyapr\n Notes for _apr : 10000 is one percent\n The function takes in 1 variable, (zero or a positive integer) _apr. It can be called by functions both inside and outside of this contract. It does the following :\n checks that the function is called by the owner of the contract\n calls updateRecordsWithLatestInterestRates\n updates apr as _apr"},"functionSelector":"7f787414","id":2026,"implemented":true,"kind":"function","modifiers":[{"id":2016,"kind":"modifierInvocation","modifierName":{"id":2015,"name":"onlyOwner","nameLocations":["15437:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"15437:9:9"},"nodeType":"ModifierInvocation","src":"15437:9:9"}],"name":"modifyapr","nameLocation":"15388:9:9","nodeType":"FunctionDefinition","parameters":{"id":2014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2013,"mutability":"mutable","name":"_apr","nameLocation":"15406:4:9","nodeType":"VariableDeclaration","scope":2026,"src":"15398:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2012,"name":"uint256","nodeType":"ElementaryTypeName","src":"15398:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15397:14:9"},"returnParameters":{"id":2017,"nodeType":"ParameterList","parameters":[],"src":"15452:0:9"},"scope":2057,"src":"15379:151:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2055,"nodeType":"Block","src":"16111:284:9","statements":[{"expression":{"arguments":[{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2037,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16153:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Staking_$2057","typeString":"contract Staking"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16145:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"16145:7:9","typeDescriptions":{}}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16145:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16159:7:9","memberName":"balance","nodeType":"MemberAccess","src":"16145:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2040,"name":"_amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"16170:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16145:29:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2042,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16144:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420616d6f756e74206f66206e61746976652063757272656e637920696e207468697320636f6e747261637420746f207472616e73666572206f75742e20506c6561736520636f6e746163742074686520636f6e7472616374206f776e657220746f20746f7020757020746865206e61746976652063757272656e63792e","id":2043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16190:139:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6","typeString":"literal_string \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\""},"value":"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6","typeString":"literal_string \"Insufficient amount of native currency in this contract to transfer out. Please contact the contract owner to top up the native currency.\""}],"id":2034,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16122:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16122:218:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"ExpressionStatement","src":"16122:218:9"},{"expression":{"arguments":[{"id":2052,"name":"_amt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"16382:4:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2048,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1011,"src":"16359:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16359:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16351:8:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2046,"name":"address","nodeType":"ElementaryTypeName","src":"16351:8:9","stateMutability":"payable","typeDescriptions":{}}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16373:8:9","memberName":"transfer","nodeType":"MemberAccess","src":"16351:30:9","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2054,"nodeType":"ExpressionStatement","src":"16351:36:9"}]},"documentation":{"id":2027,"nodeType":"StructuredDocumentation","src":"15538:504:9","text":" Function withdrawNativeCurrency\n The function takes in 1 variable, (zero or a positive integer) _amt. It can be called by functions both inside and outside of this contract. It does the following :\n checks that the function is called by the owner of the contract\n checks that (amount of native currency owned by the address of this contract) is greater than or equals to _amt\n transfers _amt of the native currency to the address that called this function"},"functionSelector":"15f5254e","id":2056,"implemented":true,"kind":"function","modifiers":[{"id":2032,"kind":"modifierInvocation","modifierName":{"id":2031,"name":"onlyOwner","nameLocations":["16101:9:9"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"16101:9:9"},"nodeType":"ModifierInvocation","src":"16101:9:9"}],"name":"withdrawNativeCurrency","nameLocation":"16057:22:9","nodeType":"FunctionDefinition","parameters":{"id":2030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2029,"mutability":"mutable","name":"_amt","nameLocation":"16088:4:9","nodeType":"VariableDeclaration","scope":2056,"src":"16080:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2028,"name":"uint256","nodeType":"ElementaryTypeName","src":"16080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16079:14:9"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"16111:0:9"},"scope":2057,"src":"16048:347:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":2058,"src":"479:15919:9","usedErrors":[]}],"src":"38:16362:9"},"id":9}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/Pausable.sol":{"Pausable":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202506cfddbbeae81102427cbccc46d5cef2db9cf92f8df6b74e56374ee3b6f8b064736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 MOD 0xCF 0xDD 0xBB 0xEA 0xE8 GT MUL TIMESTAMP PUSH29 0xBCCC46D5CEF2DB9CF92F8DF6B74E56374EE3B6F8B064736F6C63430008 GT STOP CALLER ","sourceMap":"707:3748:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;707:3748:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202506cfddbbeae81102427cbccc46d5cef2db9cf92f8df6b74e56374ee3b6f8b064736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 MOD 0xCF 0xDD 0xBB 0xEA 0xE8 GT MUL TIMESTAMP PUSH29 0xBCCC46D5CEF2DB9CF92F8DF6B74E56374EE3B6F8B064736F6C63430008 GT STOP CALLER ","sourceMap":"707:3748:5:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP10 MLOAD PUSH26 0x1995B8E449C901C4B4C2BF03AC7D11A0E0A78D1677050F81215C 0xD7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8964:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8964:6;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220289951791995b8e449c901c4b4c2bf03ac7d11a0e0a78d1677050f81215cd7de64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 SWAP10 MLOAD PUSH26 0x1995B8E449C901C4B4C2BF03AC7D11A0E0A78D1677050F81215C 0xD7 0xDE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ","sourceMap":"194:8964:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP16 ADDRESS LOG1 MOD JUMPDEST PUSH23 0x9B5C48A9AC3B695216C0FCE3495FF93BF93102C0CFB68A 0x4B PUSH32 0x64736F6C63430008110033000000000000000000000000000000000000000000 ","sourceMap":"482:6300:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220548f30a1065b769b5c48a9ac3b695216c0fce3495ff93bf93102c0cfb68a4b7f64736f6c63430008110033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD DUP16 ADDRESS LOG1 MOD JUMPDEST PUSH23 0x9B5C48A9AC3B695216C0FCE3495FF93BF93102C0CFB68A 0x4B PUSH32 0x64736F6C63430008110033000000000000000000000000000000000000000000 ","sourceMap":"482:6300:8:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}"}},"contracts/SHRFStaking.sol":{"Staking":{"abi":[{"inputs":[{"internalType":"address","name":"_stakingToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"}],"name":"Unstaked","type":"event"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"addressMap","outputs":[{"internalType":"uint256","name":"stakeTime","type":"uint256"},{"internalType":"uint256","name":"stakeAmt","type":"uint256"},{"internalType":"uint256","name":"lastUpdateTime","type":"uint256"},{"internalType":"uint256","name":"accumulatedInterestToUpdateTime","type":"uint256"},{"internalType":"uint256","name":"amtWithdrawn","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"addressStore","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"apr","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_apr","type":"uint256"}],"name":"modifyapr","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"presentEarning","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_stakeAmt","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stakingAddresses","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stakingToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAccumulatedInterest","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStakedAmount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalWithdrawals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_unstakeAmt","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amt","type":"uint256"}],"name":"withdrawNativeCurrency","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_withdrawalAmt","type":"uint256"}],"name":"withdrawReward","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1420":{"entryPoint":null,"id":1420,"parameterSlots":1,"returnSlots":0},"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_239":{"entryPoint":null,"id":239,"parameterSlots":0,"returnSlots":0},"@_msgSender_1011":{"entryPoint":null,"id":1011,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":123,"id":111,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":205,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:10","statements":[{"nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:10","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:10"},"nodeType":"YulFunctionCall","src":"143:12:10"},"nodeType":"YulExpressionStatement","src":"143:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:10"},"nodeType":"YulFunctionCall","src":"112:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:10"},"nodeType":"YulFunctionCall","src":"108:32:10"},"nodeType":"YulIf","src":"105:52:10"},{"nodeType":"YulVariableDeclaration","src":"166:29:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:10"},"nodeType":"YulFunctionCall","src":"179:16:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:10"},"nodeType":"YulFunctionCall","src":"260:12:10"},"nodeType":"YulExpressionStatement","src":"260:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:10"},"nodeType":"YulFunctionCall","src":"239:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:10"},"nodeType":"YulFunctionCall","src":"235:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:10"},"nodeType":"YulFunctionCall","src":"224:31:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:10"},"nodeType":"YulFunctionCall","src":"214:42:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:10"},"nodeType":"YulFunctionCall","src":"207:50:10"},"nodeType":"YulIf","src":"204:70:10"},{"nodeType":"YulAssignment","src":"283:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:10"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:10","type":""}],"src":"14:290:10"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526000600555600560065560006007556502de1d71ea0060085534801561002957600080fd5b50604051611685380380611685833981016040819052610048916100cd565b60016000556100563361007b565b600280546001600160a01b0319166001600160a01b03929092169190911790556100fd565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100df57600080fd5b81516001600160a01b03811681146100f657600080fd5b9392505050565b6115798061010c6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a694fc3a11610071578063a694fc3a14610200578063b583ea5114610213578063d3cec8ba14610226578063da5633ef1461022f578063f2fde38b1461029557600080fd5b8063715018a6146101c157806372f702f3146101c95780637f787414146101dc5780638da5cb5b146101ef57600080fd5b8063523a3f08116100de578063523a3f0814610194578063567e98f9146101a757806357ded9c9146101af57806360464627146101b857600080fd5b806315f5254e146101105780632e17de78146101255780632e82c983146101385780634f0fd4ca14610153575b600080fd5b61012361011e366004611304565b6102a8565b005b610123610133366004611304565b61030a565b6101406107b1565b6040519081526020015b60405180910390f35b61017c610161366004611304565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161014a565b6101236101a2366004611304565b610805565b6101406109bc565b61014060065481565b61014060075481565b610123610a47565b60025461017c906001600160a01b031681565b6101236101ea366004611304565b610a5b565b6001546001600160a01b031661017c565b61012361020e366004611304565b610a70565b61014061022136600461131d565b610ce1565b61014060055481565b61026d61023d36600461131d565b60036020819052600091825260409091208054600182015460028301549383015460049093015491939092909185565b604080519586526020860194909452928401919091526060830152608082015260a00161014a565b6101236102a336600461131d565b610d81565b6102b0610df7565b804710156102d95760405162461bcd60e51b81526004016102d090611346565b60405180910390fd5b604051339082156108fc029083906000818181858888f19350505050158015610306573d6000803e3d6000fd5b5050565b610312610e51565b33600090815260036020818152604092839020835160a08101855281548152600182015492810183905260028201549481019490945291820154606084015260049091015460808301528211156103b75760405162461bcd60e51b815260206004820152602360248201527f5769746864726177696e67206d6f7265207468616e207374616b656420616d6f6044820152621d5b9d60ea1b60648201526084016102d0565b60006008546006548360400151426103cf9190611417565b84602001516103de9190611430565b6103e89190611430565b6103f29190611447565b82606001516104019190611469565b90506000826020015184836104169190611430565b6104209190611447565b9050804710156104425760405162461bcd60e51b81526004016102d090611346565b604051339082156108fc029083906000818181858888f1935050505015801561046f573d6000803e3d6000fd5b506002546040516370a0823160e01b815230600482015285916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc919061147c565b101561059c5760405162461bcd60e51b815260206004820152607960248201527f496e73756666696369656e7420616d6f756e74206f662074686520746f6b656e60448201527f20696e207468697320636f6e747261637420746f207472616e73666572206f7560648201527f742e20506c6561736520636f6e746163742074686520636f6e7472616374206f60848201527f776e657220746f20746f702075702074686520746f6b656e2e0000000000000060a482015260c4016102d0565b6002546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303816000875af11580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f9190611495565b508060075461062e9190611469565b600755602083015184036106e35760005b6005548110156106e157600081815260046020526040902054336001600160a01b03909116036106cf5760046000600160055461067c9190611417565b8152602080820192909252604090810160009081205484825260049093522080546001600160a01b0319166001600160a01b039092169190911790556005546106c790600190611417565b6005556106e1565b806106d9816114b7565b91505061063f565b505b6040518060a00160405280846000015181526020018585602001516107089190611417565b81526040808601516020830152016107208385611417565b81526020018285608001516107359190611469565b905233600081815260036020818152604080842086518155918601516001830155858101516002830155606086015192820192909255608090940151600490940193909355915190917f908e667f6c2b13b8062954eb100253ea804c21222b190449e40d967a3ac0ff1391a25050506107ae6001600055565b50565b600080805b6005548110156107ff576000818152600460205260409020546107e1906001600160a01b0316610ce1565b6107eb9083611469565b9150806107f7816114b7565b9150506107b6565b50919050565b61080d610e51565b600061081833610ce1565b9050808211156108895760405162461bcd60e51b815260206004820152603660248201527f57697468647261776e20616d6f756e74206d757374206265206c657373207468604482015275185b881dda5d1a191c985dd8589b1948185b5bdd5b9d60521b60648201526084016102d0565b33600090815260036020818152604092839020835160a08082018652825482526001830154828501908152600284015483880152948301546060808401919091526004909301546080830152855190810186528151815293519284019290925242938301939093529181016108fe8585611417565b81526020018483608001516109139190611469565b90523360009081526003602081815260409283902084518155908401516001820155918301516002830155606083015190820155608090910151600490910155478311156109735760405162461bcd60e51b81526004016102d090611346565b604051339084156108fc029085906000818181858888f193505050501580156109a0573d6000803e3d6000fd5b50826007546109af9190611469565b6007555050600160005550565b600080805b6005548110156107ff576000818152600460208181526040808420546001600160a01b03168452600380835293819020815160a08101835281548152600182015493810184905260028201549281019290925293840154606082015292909101546080830152610a319084611469565b9250508080610a3f906114b7565b9150506109c1565b610a4f610df7565b610a596000610eaa565b565b610a63610df7565b610a6b610efc565b600655565b610a78610e51565b60008111610ad95760405162461bcd60e51b815260206004820152602860248201527f5374616b656420616d6f756e74206e6565647320746f20626520677265617465604482015267072207468616e20360c41b60648201526084016102d0565b33600090815260036020818152604092839020835160a0810185528154815260018201549281018390526002820154948101949094529182015460608401526004909101546080830152610bd5576040518060a0016040528042815260200183815260200142815260200160008152602001600081525060036000610b5b3390565b6001600160a01b031681526020808201929092526040908101600090812084518155848401516001808301919091558584015160028301556060860151600383015560809095015160049182015560058054835293522080546001600160a01b0319163317905554610bcd9190611469565b600555610c93565b6040518060a00160405280428152602001838360200151610bf69190611469565b8152602001428152602001600854600654846040015142610c179190611417565b8560200151610c269190611430565b610c309190611430565b610c3a9190611447565b8360600151610c499190611469565b815260808381015160209283015233600090815260038084526040918290208551815593850151600185015590840151600284015560608401519083015591909101516004909101555b610cab336002546001600160a01b031690308561103d565b60405133907f77338642d9284a44296d29a273e04b8ab6b15c7d2439094cd460b7e4f0b3307490600090a2506107ae6001600055565b6001600160a01b0381166000908152600360208181526040808420815160a08101835281548152600182015493810193909352600281015491830182905292830154606083015260049092015460808201526008546006549192909190610d489042611417565b8360200151610d579190611430565b610d619190611430565b610d6b9190611447565b8160600151610d7a9190611469565b9392505050565b610d89610df7565b6001600160a01b038116610dee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d0565b6107ae81610eaa565b6001546001600160a01b03163314610a595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d0565b600260005403610ea35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102d0565b6002600055565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b6005548110156107ae576000818152600460208181526040808420546001600160a01b03168452600380835293819020815160a080820184528254825260018301548286019081526002840154838601908152978401546060808501919091529390960154608083015283519081018452815181529451938501939093524291840182905260085460065495519395918501939092610f9e9190611417565b8560200151610fad9190611430565b610fb79190611430565b610fc19190611447565b8360600151610fd09190611469565b8152608092830151602091820152600084815260048083526040808320546001600160a01b03168352600380855292819020855181559385015160018501558401516002840155606084015191830191909155919092015191015580611035816114b7565b915050610eff565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261109790859061109d565b50505050565b60006110f2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111749092919063ffffffff16565b80519091501561116f57808060200190518101906111109190611495565b61116f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102d0565b505050565b6060611183848460008561118b565b949350505050565b6060824710156111ec5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102d0565b600080866001600160a01b0316858760405161120891906114f4565b60006040518083038185875af1925050503d8060008114611245576040519150601f19603f3d011682016040523d82523d6000602084013e61124a565b606091505b509150915061125b87838387611266565b979650505050505050565b606083156112d55782516000036112ce576001600160a01b0385163b6112ce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102d0565b5081611183565b61118383838151156112ea5781518083602001fd5b8060405162461bcd60e51b81526004016102d09190611510565b60006020828403121561131657600080fd5b5035919050565b60006020828403121561132f57600080fd5b81356001600160a01b0381168114610d7a57600080fd5b60208082526089908201527f496e73756666696369656e7420616d6f756e74206f66206e617469766520637560408201527f7272656e637920696e207468697320636f6e747261637420746f207472616e7360608201527f666572206f75742e20506c6561736520636f6e746163742074686520636f6e7460808201527f72616374206f776e657220746f20746f7020757020746865206e61746976652060a08201526831bab93932b731bc9760b91b60c082015260e00190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561142a5761142a611401565b92915050565b808202811582820484141761142a5761142a611401565b60008261146457634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561142a5761142a611401565b60006020828403121561148e57600080fd5b5051919050565b6000602082840312156114a757600080fd5b81518015158114610d7a57600080fd5b6000600182016114c9576114c9611401565b5060010190565b60005b838110156114eb5781810151838201526020016114d3565b50506000910152565b600082516115068184602087016114d0565b9190910192915050565b602081526000825180602084015261152f8160408501602087016114d0565b601f01601f1916919091016040019291505056fea2646970667358221220f411e223c09412914cc2e83ce4db8c484988a34b54f0b7cfaf5b3fe06c95248364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE PUSH1 0x5 PUSH1 0x6 SSTORE PUSH1 0x0 PUSH1 0x7 SSTORE PUSH6 0x2DE1D71EA00 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1685 CODESIZE SUB DUP1 PUSH2 0x1685 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x48 SWAP2 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x56 CALLER PUSH2 0x7B JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xFD JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1579 DUP1 PUSH2 0x10C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB583EA51 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xD3CEC8BA EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xDA5633EF EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x7F787414 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x523A3F08 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x523A3F08 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x57DED9C9 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x60464627 EQ PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15F5254E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2E82C983 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4F0FD4CA EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH2 0x140 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x140 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x17C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17C JUMP JUMPDEST PUSH2 0x123 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0x140 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0xDF7 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x306 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x312 PUSH2 0xE51 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP3 GT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177696E67206D6F7265207468616E207374616B656420616D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B9D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD DUP4 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD DUP5 DUP4 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E74206F662074686520746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E207468697320636F6E747261637420746F207472616E73666572206F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x742E20506C6561736520636F6E746163742074686520636F6E7472616374206F PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x776E657220746F20746F702075702074686520746F6B656E2E00000000000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x1495 JUMP JUMPDEST POP DUP1 PUSH1 0x7 SLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP5 SUB PUSH2 0x6E3 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x6CF JUMPI PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD DUP5 DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x6C7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x6E1 JUMP JUMPDEST DUP1 PUSH2 0x6D9 DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x63F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x720 DUP4 DUP6 PUSH2 0x1417 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP2 DUP7 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP6 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH32 0x908E667F6C2B13B8062954EB100253EA804C21222B190449E40D967A3AC0FF13 SWAP2 LOG2 POP POP POP PUSH2 0x7AE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7E1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0x7EB SWAP1 DUP4 PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x7F7 DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B6 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80D PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x818 CALLER PUSH2 0xCE1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57697468647261776E20616D6F756E74206D757374206265206C657373207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x185B881DDA5D1A191C985DD8589B1948185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP5 DUP4 ADD SLOAD PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP6 MLOAD SWAP1 DUP2 ADD DUP7 MSTORE DUP2 MLOAD DUP2 MSTORE SWAP4 MLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE TIMESTAMP SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 ADD PUSH2 0x8FE DUP6 DUP6 PUSH2 0x1417 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SELFBALANCE DUP4 GT ISZERO PUSH2 0x973 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x7 SLOAD PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x7 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x3 DUP1 DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP5 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xA31 SWAP1 DUP5 PUSH2 0x1469 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xA3F SWAP1 PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0xA4F PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xA59 PUSH1 0x0 PUSH2 0xEAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xA6B PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xA78 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B656420616D6F756E74206E6565647320746F20626520677265617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x72207468616E203 PUSH1 0xC4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 PUSH2 0xB5B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP5 MLOAD DUP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP6 ADD MLOAD PUSH1 0x4 SWAP2 DUP3 ADD SSTORE PUSH1 0x5 DUP1 SLOAD DUP4 MSTORE SWAP4 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SLOAD PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0xC17 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x80 DUP4 DUP2 ADD MLOAD PUSH1 0x20 SWAP3 DUP4 ADD MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP1 DUP5 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP4 DUP6 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP1 DUP4 ADD SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH2 0xCAB CALLER PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP6 PUSH2 0x103D JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x77338642D9284A44296D29A273E04B8AB6B15C7D2439094CD460B7E4F0B33074 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH2 0x7AE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD48 SWAP1 TIMESTAMP PUSH2 0x1417 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xD6B SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0xD7A SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD89 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x7AE DUP2 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x3 DUP1 DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD SLOAD DUP4 DUP7 ADD SWAP1 DUP2 MSTORE SWAP8 DUP5 ADD SLOAD PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 SWAP7 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP4 MLOAD SWAP1 DUP2 ADD DUP5 MSTORE DUP2 MLOAD DUP2 MSTORE SWAP5 MLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE TIMESTAMP SWAP2 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD SWAP6 MLOAD SWAP4 SWAP6 SWAP2 DUP6 ADD SWAP4 SWAP1 SWAP3 PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xFD0 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x3 DUP1 DUP6 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP4 DUP6 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP1 SWAP3 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x1035 DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1097 SWAP1 DUP6 SWAP1 PUSH2 0x109D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1174 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x116F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x116F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1183 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x118B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x11EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1208 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x124A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x125B DUP8 DUP4 DUP4 DUP8 PUSH2 0x1266 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x12D5 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x12CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST POP DUP2 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x1183 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x89 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E74206F66206E6174697665206375 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7272656E637920696E207468697320636F6E747261637420746F207472616E73 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x666572206F75742E20506C6561736520636F6E746163742074686520636F6E74 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x72616374206F776E657220746F20746F7020757020746865206E617469766520 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x31BAB93932B731BC97 PUSH1 0xB9 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x142A JUMPI PUSH2 0x142A PUSH2 0x1401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x142A JUMPI PUSH2 0x142A PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1464 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x142A JUMPI PUSH2 0x142A PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x14C9 JUMPI PUSH2 0x14C9 PUSH2 0x1401 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14EB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14D3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1506 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x152F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL GT 0xE2 0x23 0xC0 SWAP5 SLT SWAP2 0x4C 0xC2 0xE8 EXTCODECOPY 0xE4 0xDB DUP13 BASEFEE 0x49 DUP9 LOG3 0x4B SLOAD CREATE 0xB7 0xCF 0xAF JUMPDEST EXTCODEHASH 0xE0 PUSH13 0x95248364736F6C634300081100 CALLER ","sourceMap":"479:15919:9:-:0;;;1027:1;985:44;;1065:1;1036:31;;1116:1;1074:44;;1158:17;1125:51;;1320:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:2;1821:7;:22;936:32:0;719:10:7;936:18:0;:32::i;:::-;1366:12:9;:36;;-1:-1:-1;;;;;;1366:36:9;-1:-1:-1;;;;;1366:36:9;;;;;;;;;;479:15919;;2433:187:0;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:290:10:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:10;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:10:o;:::-;479:15919:9;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_callOptionalReturn_668":{"entryPoint":4253,"id":668,"parameterSlots":2,"returnSlots":0},"@_checkOwner_54":{"entryPoint":3575,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_1011":{"entryPoint":null,"id":1011,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_273":{"entryPoint":null,"id":273,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_265":{"entryPoint":3665,"id":265,"parameterSlots":0,"returnSlots":0},"@_revert_998":{"entryPoint":null,"id":998,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_111":{"entryPoint":3754,"id":111,"parameterSlots":1,"returnSlots":0},"@addressMap_1372":{"entryPoint":null,"id":1372,"parameterSlots":0,"returnSlots":0},"@addressStore_1376":{"entryPoint":null,"id":1376,"parameterSlots":0,"returnSlots":0},"@apr_1388":{"entryPoint":null,"id":1388,"parameterSlots":0,"returnSlots":0},"@functionCallWithValue_823":{"entryPoint":4491,"id":823,"parameterSlots":4,"returnSlots":1},"@functionCall_759":{"entryPoint":4468,"id":759,"parameterSlots":3,"returnSlots":1},"@isContract_687":{"entryPoint":null,"id":687,"parameterSlots":1,"returnSlots":1},"@modifyapr_2026":{"entryPoint":2651,"id":2026,"parameterSlots":1,"returnSlots":0},"@owner_40":{"entryPoint":null,"id":40,"parameterSlots":0,"returnSlots":1},"@presentEarning_1540":{"entryPoint":3297,"id":1540,"parameterSlots":1,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":2631,"id":68,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_446":{"entryPoint":4157,"id":446,"parameterSlots":4,"returnSlots":0},"@stake_1672":{"entryPoint":2672,"id":1672,"parameterSlots":1,"returnSlots":0},"@stakingAddresses_1382":{"entryPoint":null,"id":1382,"parameterSlots":0,"returnSlots":0},"@stakingToken_1356":{"entryPoint":null,"id":1356,"parameterSlots":0,"returnSlots":0},"@totalAccumulatedInterest_1504":{"entryPoint":1969,"id":1504,"parameterSlots":0,"returnSlots":1},"@totalStakedAmount_1465":{"entryPoint":2492,"id":1465,"parameterSlots":0,"returnSlots":1},"@totalWithdrawals_1394":{"entryPoint":null,"id":1394,"parameterSlots":0,"returnSlots":0},"@transferOwnership_91":{"entryPoint":3457,"id":91,"parameterSlots":1,"returnSlots":0},"@unstake_1865":{"entryPoint":778,"id":1865,"parameterSlots":1,"returnSlots":0},"@updateRecordsWithLatestInterestRates_2010":{"entryPoint":3836,"id":2010,"parameterSlots":0,"returnSlots":0},"@verifyCallResultFromTarget_954":{"entryPoint":4710,"id":954,"parameterSlots":4,"returnSlots":1},"@withdrawNativeCurrency_2056":{"entryPoint":680,"id":2056,"parameterSlots":1,"returnSlots":0},"@withdrawReward_1948":{"entryPoint":2053,"id":1948,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":4893,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":5269,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4868,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_contract$_IERC20_$352__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bc95157987e4fc53544852f1d612e4c43d757cb6def8c7731e8c06b851f7318__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_95103a4a809546be77054f7c7b0e13c99bc48824a20d9e5960729f46a17f2413__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a27a5eb7856de28254026458a5f18b6961698e344ae637bfc945dffeb1fa0350__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_dc2d125021d8f60b44170d715a9b2ac1d0b66b9258405e6ddfe7424ad7b29348__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4934,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5225,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":5191,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":5168,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5143,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":5328,"id":null,"parameterSlots":3,"returnSlots":0},"increment_t_uint256":{"entryPoint":5303,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5121,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:9313:10","statements":[{"nodeType":"YulBlock","src":"6:3:10","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:110:10","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:10"},"nodeType":"YulFunctionCall","src":"132:12:10"},"nodeType":"YulExpressionStatement","src":"132:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:10"},"nodeType":"YulFunctionCall","src":"101:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:10"},"nodeType":"YulFunctionCall","src":"97:32:10"},"nodeType":"YulIf","src":"94:52:10"},{"nodeType":"YulAssignment","src":"155:33:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"178:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"165:12:10"},"nodeType":"YulFunctionCall","src":"165:23:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"155:6:10"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:10","type":""}],"src":"14:180:10"},{"body":{"nodeType":"YulBlock","src":"300:76:10","statements":[{"nodeType":"YulAssignment","src":"310:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"322:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"333:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"318:3:10"},"nodeType":"YulFunctionCall","src":"318:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"310:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"352:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"363:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"345:6:10"},"nodeType":"YulFunctionCall","src":"345:25:10"},"nodeType":"YulExpressionStatement","src":"345:25:10"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"269:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"280:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"291:4:10","type":""}],"src":"199:177:10"},{"body":{"nodeType":"YulBlock","src":"482:102:10","statements":[{"nodeType":"YulAssignment","src":"492:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"504:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"515:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"500:3:10"},"nodeType":"YulFunctionCall","src":"500:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"492:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"534:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"549:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"565:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"570:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"561:3:10"},"nodeType":"YulFunctionCall","src":"561:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"574:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"557:3:10"},"nodeType":"YulFunctionCall","src":"557:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"545:3:10"},"nodeType":"YulFunctionCall","src":"545:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"527:6:10"},"nodeType":"YulFunctionCall","src":"527:51:10"},"nodeType":"YulExpressionStatement","src":"527:51:10"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"451:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"462:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"473:4:10","type":""}],"src":"381:203:10"},{"body":{"nodeType":"YulBlock","src":"704:102:10","statements":[{"nodeType":"YulAssignment","src":"714:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"726:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"737:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"722:3:10"},"nodeType":"YulFunctionCall","src":"722:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"714:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"756:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"771:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"787:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"792:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"783:3:10"},"nodeType":"YulFunctionCall","src":"783:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"796:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"779:3:10"},"nodeType":"YulFunctionCall","src":"779:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"767:3:10"},"nodeType":"YulFunctionCall","src":"767:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"749:6:10"},"nodeType":"YulFunctionCall","src":"749:51:10"},"nodeType":"YulExpressionStatement","src":"749:51:10"}]},"name":"abi_encode_tuple_t_contract$_IERC20_$352__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"673:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"684:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"695:4:10","type":""}],"src":"589:217:10"},{"body":{"nodeType":"YulBlock","src":"881:216:10","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:10"},"nodeType":"YulFunctionCall","src":"929:12:10"},"nodeType":"YulExpressionStatement","src":"929:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:10"},"nodeType":"YulFunctionCall","src":"898:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:10"},"nodeType":"YulFunctionCall","src":"894:32:10"},"nodeType":"YulIf","src":"891:52:10"},{"nodeType":"YulVariableDeclaration","src":"952:36:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"978:9:10"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"965:12:10"},"nodeType":"YulFunctionCall","src":"965:23:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"956:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"1051:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1060:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1063:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1053:6:10"},"nodeType":"YulFunctionCall","src":"1053:12:10"},"nodeType":"YulExpressionStatement","src":"1053:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1010:5:10"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1021:5:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1036:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1041:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1032:3:10"},"nodeType":"YulFunctionCall","src":"1032:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"1045:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1028:3:10"},"nodeType":"YulFunctionCall","src":"1028:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1017:3:10"},"nodeType":"YulFunctionCall","src":"1017:31:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1007:2:10"},"nodeType":"YulFunctionCall","src":"1007:42:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1000:6:10"},"nodeType":"YulFunctionCall","src":"1000:50:10"},"nodeType":"YulIf","src":"997:70:10"},{"nodeType":"YulAssignment","src":"1076:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"1086:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1076:6:10"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"847:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"858:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"870:6:10","type":""}],"src":"811:286:10"},{"body":{"nodeType":"YulBlock","src":"1315:250:10","statements":[{"nodeType":"YulAssignment","src":"1325:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1337:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1348:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1333:3:10"},"nodeType":"YulFunctionCall","src":"1333:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1325:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:10"},{"name":"value0","nodeType":"YulIdentifier","src":"1379:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1361:6:10"},"nodeType":"YulFunctionCall","src":"1361:25:10"},"nodeType":"YulExpressionStatement","src":"1361:25:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1406:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1417:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1402:3:10"},"nodeType":"YulFunctionCall","src":"1402:18:10"},{"name":"value1","nodeType":"YulIdentifier","src":"1422:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1395:6:10"},"nodeType":"YulFunctionCall","src":"1395:34:10"},"nodeType":"YulExpressionStatement","src":"1395:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1449:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1460:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1445:3:10"},"nodeType":"YulFunctionCall","src":"1445:18:10"},{"name":"value2","nodeType":"YulIdentifier","src":"1465:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1438:6:10"},"nodeType":"YulFunctionCall","src":"1438:34:10"},"nodeType":"YulExpressionStatement","src":"1438:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1492:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1503:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1488:3:10"},"nodeType":"YulFunctionCall","src":"1488:18:10"},{"name":"value3","nodeType":"YulIdentifier","src":"1508:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1481:6:10"},"nodeType":"YulFunctionCall","src":"1481:34:10"},"nodeType":"YulExpressionStatement","src":"1481:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1535:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1546:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1531:3:10"},"nodeType":"YulFunctionCall","src":"1531:19:10"},{"name":"value4","nodeType":"YulIdentifier","src":"1552:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1524:6:10"},"nodeType":"YulFunctionCall","src":"1524:35:10"},"nodeType":"YulExpressionStatement","src":"1524:35:10"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1252:9:10","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1263:6:10","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1271:6:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1279:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1287:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1295:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1306:4:10","type":""}],"src":"1102:463:10"},{"body":{"nodeType":"YulBlock","src":"1744:448:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1761:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1772:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1754:6:10"},"nodeType":"YulFunctionCall","src":"1754:21:10"},"nodeType":"YulExpressionStatement","src":"1754:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1795:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1806:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:10"},"nodeType":"YulFunctionCall","src":"1791:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"1811:3:10","type":"","value":"137"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1784:6:10"},"nodeType":"YulFunctionCall","src":"1784:31:10"},"nodeType":"YulExpressionStatement","src":"1784:31:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1835:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1846:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1831:3:10"},"nodeType":"YulFunctionCall","src":"1831:18:10"},{"hexValue":"496e73756666696369656e7420616d6f756e74206f66206e6174697665206375","kind":"string","nodeType":"YulLiteral","src":"1851:34:10","type":"","value":"Insufficient amount of native cu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1824:6:10"},"nodeType":"YulFunctionCall","src":"1824:62:10"},"nodeType":"YulExpressionStatement","src":"1824:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1906:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1917:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1902:3:10"},"nodeType":"YulFunctionCall","src":"1902:18:10"},{"hexValue":"7272656e637920696e207468697320636f6e747261637420746f207472616e73","kind":"string","nodeType":"YulLiteral","src":"1922:34:10","type":"","value":"rrency in this contract to trans"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1895:6:10"},"nodeType":"YulFunctionCall","src":"1895:62:10"},"nodeType":"YulExpressionStatement","src":"1895:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1977:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"1988:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1973:3:10"},"nodeType":"YulFunctionCall","src":"1973:19:10"},{"hexValue":"666572206f75742e20506c6561736520636f6e746163742074686520636f6e74","kind":"string","nodeType":"YulLiteral","src":"1994:34:10","type":"","value":"fer out. Please contact the cont"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1966:6:10"},"nodeType":"YulFunctionCall","src":"1966:63:10"},"nodeType":"YulExpressionStatement","src":"1966:63:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2060:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2045:3:10"},"nodeType":"YulFunctionCall","src":"2045:19:10"},{"hexValue":"72616374206f776e657220746f20746f7020757020746865206e617469766520","kind":"string","nodeType":"YulLiteral","src":"2066:34:10","type":"","value":"ract owner to top up the native "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2038:6:10"},"nodeType":"YulFunctionCall","src":"2038:63:10"},"nodeType":"YulExpressionStatement","src":"2038:63:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2121:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2132:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:10"},"nodeType":"YulFunctionCall","src":"2117:19:10"},{"hexValue":"63757272656e63792e","kind":"string","nodeType":"YulLiteral","src":"2138:11:10","type":"","value":"currency."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2110:6:10"},"nodeType":"YulFunctionCall","src":"2110:40:10"},"nodeType":"YulExpressionStatement","src":"2110:40:10"},{"nodeType":"YulAssignment","src":"2159:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2171:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2182:3:10","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2167:3:10"},"nodeType":"YulFunctionCall","src":"2167:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2159:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1721:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1735:4:10","type":""}],"src":"1570:622:10"},{"body":{"nodeType":"YulBlock","src":"2371:225:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2388:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2399:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2381:6:10"},"nodeType":"YulFunctionCall","src":"2381:21:10"},"nodeType":"YulExpressionStatement","src":"2381:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2422:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2433:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2418:3:10"},"nodeType":"YulFunctionCall","src":"2418:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"2438:2:10","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2411:6:10"},"nodeType":"YulFunctionCall","src":"2411:30:10"},"nodeType":"YulExpressionStatement","src":"2411:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2472:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:10"},"nodeType":"YulFunctionCall","src":"2457:18:10"},{"hexValue":"5769746864726177696e67206d6f7265207468616e207374616b656420616d6f","kind":"string","nodeType":"YulLiteral","src":"2477:34:10","type":"","value":"Withdrawing more than staked amo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2450:6:10"},"nodeType":"YulFunctionCall","src":"2450:62:10"},"nodeType":"YulExpressionStatement","src":"2450:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2532:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2543:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2528:3:10"},"nodeType":"YulFunctionCall","src":"2528:18:10"},{"hexValue":"756e74","kind":"string","nodeType":"YulLiteral","src":"2548:5:10","type":"","value":"unt"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2521:6:10"},"nodeType":"YulFunctionCall","src":"2521:33:10"},"nodeType":"YulExpressionStatement","src":"2521:33:10"},{"nodeType":"YulAssignment","src":"2563:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2575:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"2586:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2571:3:10"},"nodeType":"YulFunctionCall","src":"2571:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2563:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_dc2d125021d8f60b44170d715a9b2ac1d0b66b9258405e6ddfe7424ad7b29348__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2348:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2362:4:10","type":""}],"src":"2197:399:10"},{"body":{"nodeType":"YulBlock","src":"2633:95:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2650:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2657:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2662:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2653:3:10"},"nodeType":"YulFunctionCall","src":"2653:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2643:6:10"},"nodeType":"YulFunctionCall","src":"2643:31:10"},"nodeType":"YulExpressionStatement","src":"2643:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2690:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2693:4:10","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2683:6:10"},"nodeType":"YulFunctionCall","src":"2683:15:10"},"nodeType":"YulExpressionStatement","src":"2683:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2714:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2717:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2707:6:10"},"nodeType":"YulFunctionCall","src":"2707:15:10"},"nodeType":"YulExpressionStatement","src":"2707:15:10"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2601:127:10"},{"body":{"nodeType":"YulBlock","src":"2782:79:10","statements":[{"nodeType":"YulAssignment","src":"2792:17:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2804:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2807:1:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2800:3:10"},"nodeType":"YulFunctionCall","src":"2800:9:10"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"2792:4:10"}]},{"body":{"nodeType":"YulBlock","src":"2833:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"2835:16:10"},"nodeType":"YulFunctionCall","src":"2835:18:10"},"nodeType":"YulExpressionStatement","src":"2835:18:10"}]},"condition":{"arguments":[{"name":"diff","nodeType":"YulIdentifier","src":"2824:4:10"},{"name":"x","nodeType":"YulIdentifier","src":"2830:1:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2821:2:10"},"nodeType":"YulFunctionCall","src":"2821:11:10"},"nodeType":"YulIf","src":"2818:37:10"}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2764:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"2767:1:10","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"2773:4:10","type":""}],"src":"2733:128:10"},{"body":{"nodeType":"YulBlock","src":"2918:116:10","statements":[{"nodeType":"YulAssignment","src":"2928:20:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2943:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2946:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2939:3:10"},"nodeType":"YulFunctionCall","src":"2939:9:10"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"2928:7:10"}]},{"body":{"nodeType":"YulBlock","src":"3006:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3008:16:10"},"nodeType":"YulFunctionCall","src":"3008:18:10"},"nodeType":"YulExpressionStatement","src":"3008:18:10"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2977:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2970:6:10"},"nodeType":"YulFunctionCall","src":"2970:9:10"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2984:1:10"},{"arguments":[{"name":"product","nodeType":"YulIdentifier","src":"2991:7:10"},{"name":"x","nodeType":"YulIdentifier","src":"3000:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2987:3:10"},"nodeType":"YulFunctionCall","src":"2987:15:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2981:2:10"},"nodeType":"YulFunctionCall","src":"2981:22:10"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2967:2:10"},"nodeType":"YulFunctionCall","src":"2967:37:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2960:6:10"},"nodeType":"YulFunctionCall","src":"2960:45:10"},"nodeType":"YulIf","src":"2957:71:10"}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2897:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"2900:1:10","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"2906:7:10","type":""}],"src":"2866:168:10"},{"body":{"nodeType":"YulBlock","src":"3085:171:10","statements":[{"body":{"nodeType":"YulBlock","src":"3116:111:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3137:1:10","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3144:3:10","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3149:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3140:3:10"},"nodeType":"YulFunctionCall","src":"3140:20:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3130:6:10"},"nodeType":"YulFunctionCall","src":"3130:31:10"},"nodeType":"YulExpressionStatement","src":"3130:31:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3181:1:10","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3184:4:10","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3174:6:10"},"nodeType":"YulFunctionCall","src":"3174:15:10"},"nodeType":"YulExpressionStatement","src":"3174:15:10"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3209:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3212:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3202:6:10"},"nodeType":"YulFunctionCall","src":"3202:15:10"},"nodeType":"YulExpressionStatement","src":"3202:15:10"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3105:1:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3098:6:10"},"nodeType":"YulFunctionCall","src":"3098:9:10"},"nodeType":"YulIf","src":"3095:132:10"},{"nodeType":"YulAssignment","src":"3236:14:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3245:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"3248:1:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3241:3:10"},"nodeType":"YulFunctionCall","src":"3241:9:10"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3236:1:10"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3070:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"3073:1:10","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"3079:1:10","type":""}],"src":"3039:217:10"},{"body":{"nodeType":"YulBlock","src":"3309:77:10","statements":[{"nodeType":"YulAssignment","src":"3319:16:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3330:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"3333:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3326:3:10"},"nodeType":"YulFunctionCall","src":"3326:9:10"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3319:3:10"}]},{"body":{"nodeType":"YulBlock","src":"3358:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3360:16:10"},"nodeType":"YulFunctionCall","src":"3360:18:10"},"nodeType":"YulExpressionStatement","src":"3360:18:10"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3350:1:10"},{"name":"sum","nodeType":"YulIdentifier","src":"3353:3:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3347:2:10"},"nodeType":"YulFunctionCall","src":"3347:10:10"},"nodeType":"YulIf","src":"3344:36:10"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3292:1:10","type":""},{"name":"y","nodeType":"YulTypedName","src":"3295:1:10","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3301:3:10","type":""}],"src":"3261:125:10"},{"body":{"nodeType":"YulBlock","src":"3472:103:10","statements":[{"body":{"nodeType":"YulBlock","src":"3518:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3527:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3530:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3520:6:10"},"nodeType":"YulFunctionCall","src":"3520:12:10"},"nodeType":"YulExpressionStatement","src":"3520:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3493:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"3502:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3489:3:10"},"nodeType":"YulFunctionCall","src":"3489:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"3514:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3485:3:10"},"nodeType":"YulFunctionCall","src":"3485:32:10"},"nodeType":"YulIf","src":"3482:52:10"},{"nodeType":"YulAssignment","src":"3543:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3559:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3553:5:10"},"nodeType":"YulFunctionCall","src":"3553:16:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3543:6:10"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3438:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3449:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3461:6:10","type":""}],"src":"3391:184:10"},{"body":{"nodeType":"YulBlock","src":"3754:392:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3771:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3782:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3764:6:10"},"nodeType":"YulFunctionCall","src":"3764:21:10"},"nodeType":"YulExpressionStatement","src":"3764:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3805:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3816:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3801:3:10"},"nodeType":"YulFunctionCall","src":"3801:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"3821:3:10","type":"","value":"121"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3794:6:10"},"nodeType":"YulFunctionCall","src":"3794:31:10"},"nodeType":"YulExpressionStatement","src":"3794:31:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3845:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3856:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3841:3:10"},"nodeType":"YulFunctionCall","src":"3841:18:10"},{"hexValue":"496e73756666696369656e7420616d6f756e74206f662074686520746f6b656e","kind":"string","nodeType":"YulLiteral","src":"3861:34:10","type":"","value":"Insufficient amount of the token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3834:6:10"},"nodeType":"YulFunctionCall","src":"3834:62:10"},"nodeType":"YulExpressionStatement","src":"3834:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3916:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3927:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3912:3:10"},"nodeType":"YulFunctionCall","src":"3912:18:10"},{"hexValue":"20696e207468697320636f6e747261637420746f207472616e73666572206f75","kind":"string","nodeType":"YulLiteral","src":"3932:34:10","type":"","value":" in this contract to transfer ou"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3905:6:10"},"nodeType":"YulFunctionCall","src":"3905:62:10"},"nodeType":"YulExpressionStatement","src":"3905:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3987:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"3998:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3983:3:10"},"nodeType":"YulFunctionCall","src":"3983:19:10"},{"hexValue":"742e20506c6561736520636f6e746163742074686520636f6e7472616374206f","kind":"string","nodeType":"YulLiteral","src":"4004:34:10","type":"","value":"t. Please contact the contract o"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3976:6:10"},"nodeType":"YulFunctionCall","src":"3976:63:10"},"nodeType":"YulExpressionStatement","src":"3976:63:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4059:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4070:3:10","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4055:3:10"},"nodeType":"YulFunctionCall","src":"4055:19:10"},{"hexValue":"776e657220746f20746f702075702074686520746f6b656e2e","kind":"string","nodeType":"YulLiteral","src":"4076:27:10","type":"","value":"wner to top up the token."}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4048:6:10"},"nodeType":"YulFunctionCall","src":"4048:56:10"},"nodeType":"YulExpressionStatement","src":"4048:56:10"},{"nodeType":"YulAssignment","src":"4113:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4125:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4136:3:10","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4121:3:10"},"nodeType":"YulFunctionCall","src":"4121:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4113:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_95103a4a809546be77054f7c7b0e13c99bc48824a20d9e5960729f46a17f2413__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3731:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3745:4:10","type":""}],"src":"3580:566:10"},{"body":{"nodeType":"YulBlock","src":"4280:145:10","statements":[{"nodeType":"YulAssignment","src":"4290:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4302:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4313:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4298:3:10"},"nodeType":"YulFunctionCall","src":"4298:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4290:4:10"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4332:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4347:6:10"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4363:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4368:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4359:3:10"},"nodeType":"YulFunctionCall","src":"4359:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"4372:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4355:3:10"},"nodeType":"YulFunctionCall","src":"4355:19:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4343:3:10"},"nodeType":"YulFunctionCall","src":"4343:32:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4325:6:10"},"nodeType":"YulFunctionCall","src":"4325:51:10"},"nodeType":"YulExpressionStatement","src":"4325:51:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4396:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"4407:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4392:3:10"},"nodeType":"YulFunctionCall","src":"4392:18:10"},{"name":"value1","nodeType":"YulIdentifier","src":"4412:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4385:6:10"},"nodeType":"YulFunctionCall","src":"4385:34:10"},"nodeType":"YulExpressionStatement","src":"4385:34:10"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4241:9:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4252:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4260:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4271:4:10","type":""}],"src":"4151:274:10"},{"body":{"nodeType":"YulBlock","src":"4508:199:10","statements":[{"body":{"nodeType":"YulBlock","src":"4554:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4563:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4566:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4556:6:10"},"nodeType":"YulFunctionCall","src":"4556:12:10"},"nodeType":"YulExpressionStatement","src":"4556:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4529:7:10"},{"name":"headStart","nodeType":"YulIdentifier","src":"4538:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4525:3:10"},"nodeType":"YulFunctionCall","src":"4525:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4550:2:10","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4521:3:10"},"nodeType":"YulFunctionCall","src":"4521:32:10"},"nodeType":"YulIf","src":"4518:52:10"},{"nodeType":"YulVariableDeclaration","src":"4579:29:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4598:9:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4592:5:10"},"nodeType":"YulFunctionCall","src":"4592:16:10"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4583:5:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"4661:16:10","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4670:1:10","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4673:1:10","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4663:6:10"},"nodeType":"YulFunctionCall","src":"4663:12:10"},"nodeType":"YulExpressionStatement","src":"4663:12:10"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4630:5:10"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4651:5:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4644:6:10"},"nodeType":"YulFunctionCall","src":"4644:13:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4637:6:10"},"nodeType":"YulFunctionCall","src":"4637:21:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4627:2:10"},"nodeType":"YulFunctionCall","src":"4627:32:10"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4620:6:10"},"nodeType":"YulFunctionCall","src":"4620:40:10"},"nodeType":"YulIf","src":"4617:60:10"},{"nodeType":"YulAssignment","src":"4686:15:10","value":{"name":"value","nodeType":"YulIdentifier","src":"4696:5:10"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4686:6:10"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4474:9:10","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4485:7:10","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4497:6:10","type":""}],"src":"4430:277:10"},{"body":{"nodeType":"YulBlock","src":"4759:88:10","statements":[{"body":{"nodeType":"YulBlock","src":"4790:22:10","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4792:16:10"},"nodeType":"YulFunctionCall","src":"4792:18:10"},"nodeType":"YulExpressionStatement","src":"4792:18:10"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4775:5:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4786:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4782:3:10"},"nodeType":"YulFunctionCall","src":"4782:6:10"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4772:2:10"},"nodeType":"YulFunctionCall","src":"4772:17:10"},"nodeType":"YulIf","src":"4769:43:10"},{"nodeType":"YulAssignment","src":"4821:20:10","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4832:5:10"},{"kind":"number","nodeType":"YulLiteral","src":"4839:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4828:3:10"},"nodeType":"YulFunctionCall","src":"4828:13:10"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4821:3:10"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4741:5:10","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4751:3:10","type":""}],"src":"4712:135:10"},{"body":{"nodeType":"YulBlock","src":"5026:244:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5043:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5054:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5036:6:10"},"nodeType":"YulFunctionCall","src":"5036:21:10"},"nodeType":"YulExpressionStatement","src":"5036:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5077:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5088:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5073:3:10"},"nodeType":"YulFunctionCall","src":"5073:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"5093:2:10","type":"","value":"54"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5066:6:10"},"nodeType":"YulFunctionCall","src":"5066:30:10"},"nodeType":"YulExpressionStatement","src":"5066:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5116:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5127:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5112:3:10"},"nodeType":"YulFunctionCall","src":"5112:18:10"},{"hexValue":"57697468647261776e20616d6f756e74206d757374206265206c657373207468","kind":"string","nodeType":"YulLiteral","src":"5132:34:10","type":"","value":"Withdrawn amount must be less th"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5105:6:10"},"nodeType":"YulFunctionCall","src":"5105:62:10"},"nodeType":"YulExpressionStatement","src":"5105:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5187:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5198:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5183:3:10"},"nodeType":"YulFunctionCall","src":"5183:18:10"},{"hexValue":"616e20776974686472617761626c6520616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"5203:24:10","type":"","value":"an withdrawable amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5176:6:10"},"nodeType":"YulFunctionCall","src":"5176:52:10"},"nodeType":"YulExpressionStatement","src":"5176:52:10"},{"nodeType":"YulAssignment","src":"5237:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5249:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5260:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5245:3:10"},"nodeType":"YulFunctionCall","src":"5245:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5237:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_a27a5eb7856de28254026458a5f18b6961698e344ae637bfc945dffeb1fa0350__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5003:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5017:4:10","type":""}],"src":"4852:418:10"},{"body":{"nodeType":"YulBlock","src":"5449:230:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5466:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5477:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5459:6:10"},"nodeType":"YulFunctionCall","src":"5459:21:10"},"nodeType":"YulExpressionStatement","src":"5459:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5500:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5511:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5496:3:10"},"nodeType":"YulFunctionCall","src":"5496:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"5516:2:10","type":"","value":"40"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5489:6:10"},"nodeType":"YulFunctionCall","src":"5489:30:10"},"nodeType":"YulExpressionStatement","src":"5489:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5539:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5550:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5535:3:10"},"nodeType":"YulFunctionCall","src":"5535:18:10"},{"hexValue":"5374616b656420616d6f756e74206e6565647320746f20626520677265617465","kind":"string","nodeType":"YulLiteral","src":"5555:34:10","type":"","value":"Staked amount needs to be greate"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5528:6:10"},"nodeType":"YulFunctionCall","src":"5528:62:10"},"nodeType":"YulExpressionStatement","src":"5528:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5610:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5621:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5606:3:10"},"nodeType":"YulFunctionCall","src":"5606:18:10"},{"hexValue":"72207468616e2030","kind":"string","nodeType":"YulLiteral","src":"5626:10:10","type":"","value":"r than 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5599:6:10"},"nodeType":"YulFunctionCall","src":"5599:38:10"},"nodeType":"YulExpressionStatement","src":"5599:38:10"},{"nodeType":"YulAssignment","src":"5646:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5658:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5669:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5654:3:10"},"nodeType":"YulFunctionCall","src":"5654:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5646:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bc95157987e4fc53544852f1d612e4c43d757cb6def8c7731e8c06b851f7318__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5426:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5440:4:10","type":""}],"src":"5275:404:10"},{"body":{"nodeType":"YulBlock","src":"5858:228:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5875:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5886:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5868:6:10"},"nodeType":"YulFunctionCall","src":"5868:21:10"},"nodeType":"YulExpressionStatement","src":"5868:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5909:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5920:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5905:3:10"},"nodeType":"YulFunctionCall","src":"5905:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"5925:2:10","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5898:6:10"},"nodeType":"YulFunctionCall","src":"5898:30:10"},"nodeType":"YulExpressionStatement","src":"5898:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5948:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"5959:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5944:3:10"},"nodeType":"YulFunctionCall","src":"5944:18:10"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"5964:34:10","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5937:6:10"},"nodeType":"YulFunctionCall","src":"5937:62:10"},"nodeType":"YulExpressionStatement","src":"5937:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6019:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6030:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6015:3:10"},"nodeType":"YulFunctionCall","src":"6015:18:10"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"6035:8:10","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6008:6:10"},"nodeType":"YulFunctionCall","src":"6008:36:10"},"nodeType":"YulExpressionStatement","src":"6008:36:10"},{"nodeType":"YulAssignment","src":"6053:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6065:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6076:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6061:3:10"},"nodeType":"YulFunctionCall","src":"6061:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6053:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5835:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5849:4:10","type":""}],"src":"5684:402:10"},{"body":{"nodeType":"YulBlock","src":"6265:182:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6282:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6293:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6275:6:10"},"nodeType":"YulFunctionCall","src":"6275:21:10"},"nodeType":"YulExpressionStatement","src":"6275:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6316:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6327:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6312:3:10"},"nodeType":"YulFunctionCall","src":"6312:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"6332:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6305:6:10"},"nodeType":"YulFunctionCall","src":"6305:30:10"},"nodeType":"YulExpressionStatement","src":"6305:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6355:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6366:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6351:3:10"},"nodeType":"YulFunctionCall","src":"6351:18:10"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"6371:34:10","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6344:6:10"},"nodeType":"YulFunctionCall","src":"6344:62:10"},"nodeType":"YulExpressionStatement","src":"6344:62:10"},{"nodeType":"YulAssignment","src":"6415:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6427:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6438:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6423:3:10"},"nodeType":"YulFunctionCall","src":"6423:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6415:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6242:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6256:4:10","type":""}],"src":"6091:356:10"},{"body":{"nodeType":"YulBlock","src":"6626:181:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6643:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6654:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6636:6:10"},"nodeType":"YulFunctionCall","src":"6636:21:10"},"nodeType":"YulExpressionStatement","src":"6636:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6677:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6688:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6673:3:10"},"nodeType":"YulFunctionCall","src":"6673:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"6693:2:10","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6666:6:10"},"nodeType":"YulFunctionCall","src":"6666:30:10"},"nodeType":"YulExpressionStatement","src":"6666:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6716:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6727:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6712:3:10"},"nodeType":"YulFunctionCall","src":"6712:18:10"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"6732:33:10","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6705:6:10"},"nodeType":"YulFunctionCall","src":"6705:61:10"},"nodeType":"YulExpressionStatement","src":"6705:61:10"},{"nodeType":"YulAssignment","src":"6775:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6787:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"6798:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:10"},"nodeType":"YulFunctionCall","src":"6783:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6775:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6603:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6617:4:10","type":""}],"src":"6452:355:10"},{"body":{"nodeType":"YulBlock","src":"6969:218:10","statements":[{"nodeType":"YulAssignment","src":"6979:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6991:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7002:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6987:3:10"},"nodeType":"YulFunctionCall","src":"6987:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6979:4:10"}]},{"nodeType":"YulVariableDeclaration","src":"7014:29:10","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7032:3:10","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7037:1:10","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7028:3:10"},"nodeType":"YulFunctionCall","src":"7028:11:10"},{"kind":"number","nodeType":"YulLiteral","src":"7041:1:10","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7024:3:10"},"nodeType":"YulFunctionCall","src":"7024:19:10"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7018:2:10","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7059:9:10"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7074:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"7082:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7070:3:10"},"nodeType":"YulFunctionCall","src":"7070:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7052:6:10"},"nodeType":"YulFunctionCall","src":"7052:34:10"},"nodeType":"YulExpressionStatement","src":"7052:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7106:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7117:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7102:3:10"},"nodeType":"YulFunctionCall","src":"7102:18:10"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7126:6:10"},{"name":"_1","nodeType":"YulIdentifier","src":"7134:2:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7122:3:10"},"nodeType":"YulFunctionCall","src":"7122:15:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7095:6:10"},"nodeType":"YulFunctionCall","src":"7095:43:10"},"nodeType":"YulExpressionStatement","src":"7095:43:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7158:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7169:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7154:3:10"},"nodeType":"YulFunctionCall","src":"7154:18:10"},{"name":"value2","nodeType":"YulIdentifier","src":"7174:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7147:6:10"},"nodeType":"YulFunctionCall","src":"7147:34:10"},"nodeType":"YulExpressionStatement","src":"7147:34:10"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6922:9:10","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6933:6:10","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6941:6:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6949:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6960:4:10","type":""}],"src":"6812:375:10"},{"body":{"nodeType":"YulBlock","src":"7366:232:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7383:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7394:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7376:6:10"},"nodeType":"YulFunctionCall","src":"7376:21:10"},"nodeType":"YulExpressionStatement","src":"7376:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7417:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7428:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7413:3:10"},"nodeType":"YulFunctionCall","src":"7413:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"7433:2:10","type":"","value":"42"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7406:6:10"},"nodeType":"YulFunctionCall","src":"7406:30:10"},"nodeType":"YulExpressionStatement","src":"7406:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7456:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7467:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7452:3:10"},"nodeType":"YulFunctionCall","src":"7452:18:10"},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e","kind":"string","nodeType":"YulLiteral","src":"7472:34:10","type":"","value":"SafeERC20: ERC20 operation did n"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7445:6:10"},"nodeType":"YulFunctionCall","src":"7445:62:10"},"nodeType":"YulExpressionStatement","src":"7445:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7527:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7538:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7523:3:10"},"nodeType":"YulFunctionCall","src":"7523:18:10"},{"hexValue":"6f742073756363656564","kind":"string","nodeType":"YulLiteral","src":"7543:12:10","type":"","value":"ot succeed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7516:6:10"},"nodeType":"YulFunctionCall","src":"7516:40:10"},"nodeType":"YulExpressionStatement","src":"7516:40:10"},{"nodeType":"YulAssignment","src":"7565:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7588:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:10"},"nodeType":"YulFunctionCall","src":"7573:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7565:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7343:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7357:4:10","type":""}],"src":"7192:406:10"},{"body":{"nodeType":"YulBlock","src":"7777:228:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7794:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7805:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7787:6:10"},"nodeType":"YulFunctionCall","src":"7787:21:10"},"nodeType":"YulExpressionStatement","src":"7787:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7828:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7839:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7824:3:10"},"nodeType":"YulFunctionCall","src":"7824:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"7844:2:10","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7817:6:10"},"nodeType":"YulFunctionCall","src":"7817:30:10"},"nodeType":"YulExpressionStatement","src":"7817:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7867:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7878:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7863:3:10"},"nodeType":"YulFunctionCall","src":"7863:18:10"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"7883:34:10","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7856:6:10"},"nodeType":"YulFunctionCall","src":"7856:62:10"},"nodeType":"YulExpressionStatement","src":"7856:62:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7938:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7949:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7934:3:10"},"nodeType":"YulFunctionCall","src":"7934:18:10"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"7954:8:10","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7927:6:10"},"nodeType":"YulFunctionCall","src":"7927:36:10"},"nodeType":"YulExpressionStatement","src":"7927:36:10"},{"nodeType":"YulAssignment","src":"7972:27:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7984:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"7995:3:10","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7980:3:10"},"nodeType":"YulFunctionCall","src":"7980:19:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7972:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7754:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7768:4:10","type":""}],"src":"7603:402:10"},{"body":{"nodeType":"YulBlock","src":"8076:184:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8086:10:10","value":{"kind":"number","nodeType":"YulLiteral","src":"8095:1:10","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"8090:1:10","type":""}]},{"body":{"nodeType":"YulBlock","src":"8155:63:10","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8180:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"8185:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8176:3:10"},"nodeType":"YulFunctionCall","src":"8176:11:10"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8199:3:10"},{"name":"i","nodeType":"YulIdentifier","src":"8204:1:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8195:3:10"},"nodeType":"YulFunctionCall","src":"8195:11:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8189:5:10"},"nodeType":"YulFunctionCall","src":"8189:18:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8169:6:10"},"nodeType":"YulFunctionCall","src":"8169:39:10"},"nodeType":"YulExpressionStatement","src":"8169:39:10"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8116:1:10"},{"name":"length","nodeType":"YulIdentifier","src":"8119:6:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8113:2:10"},"nodeType":"YulFunctionCall","src":"8113:13:10"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8127:19:10","statements":[{"nodeType":"YulAssignment","src":"8129:15:10","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"8138:1:10"},{"kind":"number","nodeType":"YulLiteral","src":"8141:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8134:3:10"},"nodeType":"YulFunctionCall","src":"8134:10:10"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"8129:1:10"}]}]},"pre":{"nodeType":"YulBlock","src":"8109:3:10","statements":[]},"src":"8105:113:10"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8238:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"8243:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8234:3:10"},"nodeType":"YulFunctionCall","src":"8234:16:10"},{"kind":"number","nodeType":"YulLiteral","src":"8252:1:10","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8227:6:10"},"nodeType":"YulFunctionCall","src":"8227:27:10"},"nodeType":"YulExpressionStatement","src":"8227:27:10"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8054:3:10","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8059:3:10","type":""},{"name":"length","nodeType":"YulTypedName","src":"8064:6:10","type":""}],"src":"8010:250:10"},{"body":{"nodeType":"YulBlock","src":"8402:150:10","statements":[{"nodeType":"YulVariableDeclaration","src":"8412:27:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8432:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8426:5:10"},"nodeType":"YulFunctionCall","src":"8426:13:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8416:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8487:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"8495:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8483:3:10"},"nodeType":"YulFunctionCall","src":"8483:17:10"},{"name":"pos","nodeType":"YulIdentifier","src":"8502:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"8507:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8448:34:10"},"nodeType":"YulFunctionCall","src":"8448:66:10"},"nodeType":"YulExpressionStatement","src":"8448:66:10"},{"nodeType":"YulAssignment","src":"8523:23:10","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8534:3:10"},{"name":"length","nodeType":"YulIdentifier","src":"8539:6:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8530:3:10"},"nodeType":"YulFunctionCall","src":"8530:16:10"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8523:3:10"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8378:3:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8383:6:10","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8394:3:10","type":""}],"src":"8265:287:10"},{"body":{"nodeType":"YulBlock","src":"8731:179:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8748:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8759:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8741:6:10"},"nodeType":"YulFunctionCall","src":"8741:21:10"},"nodeType":"YulExpressionStatement","src":"8741:21:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8782:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8793:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8778:3:10"},"nodeType":"YulFunctionCall","src":"8778:18:10"},{"kind":"number","nodeType":"YulLiteral","src":"8798:2:10","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8771:6:10"},"nodeType":"YulFunctionCall","src":"8771:30:10"},"nodeType":"YulExpressionStatement","src":"8771:30:10"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8821:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8832:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8817:3:10"},"nodeType":"YulFunctionCall","src":"8817:18:10"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"8837:31:10","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8810:6:10"},"nodeType":"YulFunctionCall","src":"8810:59:10"},"nodeType":"YulExpressionStatement","src":"8810:59:10"},{"nodeType":"YulAssignment","src":"8878:26:10","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8890:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"8901:2:10","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8886:3:10"},"nodeType":"YulFunctionCall","src":"8886:18:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8878:4:10"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8708:9:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8722:4:10","type":""}],"src":"8557:353:10"},{"body":{"nodeType":"YulBlock","src":"9036:275:10","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9053:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9064:2:10","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9046:6:10"},"nodeType":"YulFunctionCall","src":"9046:21:10"},"nodeType":"YulExpressionStatement","src":"9046:21:10"},{"nodeType":"YulVariableDeclaration","src":"9076:27:10","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9096:6:10"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9090:5:10"},"nodeType":"YulFunctionCall","src":"9090:13:10"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9080:6:10","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9123:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9134:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9119:3:10"},"nodeType":"YulFunctionCall","src":"9119:18:10"},{"name":"length","nodeType":"YulIdentifier","src":"9139:6:10"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9112:6:10"},"nodeType":"YulFunctionCall","src":"9112:34:10"},"nodeType":"YulExpressionStatement","src":"9112:34:10"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9194:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"9202:2:10","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9190:3:10"},"nodeType":"YulFunctionCall","src":"9190:15:10"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9211:9:10"},{"kind":"number","nodeType":"YulLiteral","src":"9222:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9207:3:10"},"nodeType":"YulFunctionCall","src":"9207:18:10"},{"name":"length","nodeType":"YulIdentifier","src":"9227:6:10"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9155:34:10"},"nodeType":"YulFunctionCall","src":"9155:79:10"},"nodeType":"YulExpressionStatement","src":"9155:79:10"},{"nodeType":"YulAssignment","src":"9243:62:10","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9259:9:10"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"9278:6:10"},{"kind":"number","nodeType":"YulLiteral","src":"9286:2:10","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9274:3:10"},"nodeType":"YulFunctionCall","src":"9274:15:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9295:2:10","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"9291:3:10"},"nodeType":"YulFunctionCall","src":"9291:7:10"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9270:3:10"},"nodeType":"YulFunctionCall","src":"9270:29:10"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9255:3:10"},"nodeType":"YulFunctionCall","src":"9255:45:10"},{"kind":"number","nodeType":"YulLiteral","src":"9302:2:10","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9251:3:10"},"nodeType":"YulFunctionCall","src":"9251:54:10"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9243:4:10"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9005:9:10","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9016:6:10","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9027:4:10","type":""}],"src":"8915:396:10"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$352__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_f72cede8812ef96edfd21c035c3951e5b968f427e889eac267b8c85c0e6a8ed6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 137)\n        mstore(add(headStart, 64), \"Insufficient amount of native cu\")\n        mstore(add(headStart, 96), \"rrency in this contract to trans\")\n        mstore(add(headStart, 128), \"fer out. Please contact the cont\")\n        mstore(add(headStart, 160), \"ract owner to top up the native \")\n        mstore(add(headStart, 192), \"currency.\")\n        tail := add(headStart, 224)\n    }\n    function abi_encode_tuple_t_stringliteral_dc2d125021d8f60b44170d715a9b2ac1d0b66b9258405e6ddfe7424ad7b29348__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"Withdrawing more than staked amo\")\n        mstore(add(headStart, 96), \"unt\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_95103a4a809546be77054f7c7b0e13c99bc48824a20d9e5960729f46a17f2413__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 121)\n        mstore(add(headStart, 64), \"Insufficient amount of the token\")\n        mstore(add(headStart, 96), \" in this contract to transfer ou\")\n        mstore(add(headStart, 128), \"t. Please contact the contract o\")\n        mstore(add(headStart, 160), \"wner to top up the token.\")\n        tail := add(headStart, 192)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_a27a5eb7856de28254026458a5f18b6961698e344ae637bfc945dffeb1fa0350__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Withdrawn amount must be less th\")\n        mstore(add(headStart, 96), \"an withdrawable amount\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4bc95157987e4fc53544852f1d612e4c43d757cb6def8c7731e8c06b851f7318__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Staked amount needs to be greate\")\n        mstore(add(headStart, 96), \"r than 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}","id":10,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063a694fc3a11610071578063a694fc3a14610200578063b583ea5114610213578063d3cec8ba14610226578063da5633ef1461022f578063f2fde38b1461029557600080fd5b8063715018a6146101c157806372f702f3146101c95780637f787414146101dc5780638da5cb5b146101ef57600080fd5b8063523a3f08116100de578063523a3f0814610194578063567e98f9146101a757806357ded9c9146101af57806360464627146101b857600080fd5b806315f5254e146101105780632e17de78146101255780632e82c983146101385780634f0fd4ca14610153575b600080fd5b61012361011e366004611304565b6102a8565b005b610123610133366004611304565b61030a565b6101406107b1565b6040519081526020015b60405180910390f35b61017c610161366004611304565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161014a565b6101236101a2366004611304565b610805565b6101406109bc565b61014060065481565b61014060075481565b610123610a47565b60025461017c906001600160a01b031681565b6101236101ea366004611304565b610a5b565b6001546001600160a01b031661017c565b61012361020e366004611304565b610a70565b61014061022136600461131d565b610ce1565b61014060055481565b61026d61023d36600461131d565b60036020819052600091825260409091208054600182015460028301549383015460049093015491939092909185565b604080519586526020860194909452928401919091526060830152608082015260a00161014a565b6101236102a336600461131d565b610d81565b6102b0610df7565b804710156102d95760405162461bcd60e51b81526004016102d090611346565b60405180910390fd5b604051339082156108fc029083906000818181858888f19350505050158015610306573d6000803e3d6000fd5b5050565b610312610e51565b33600090815260036020818152604092839020835160a08101855281548152600182015492810183905260028201549481019490945291820154606084015260049091015460808301528211156103b75760405162461bcd60e51b815260206004820152602360248201527f5769746864726177696e67206d6f7265207468616e207374616b656420616d6f6044820152621d5b9d60ea1b60648201526084016102d0565b60006008546006548360400151426103cf9190611417565b84602001516103de9190611430565b6103e89190611430565b6103f29190611447565b82606001516104019190611469565b90506000826020015184836104169190611430565b6104209190611447565b9050804710156104425760405162461bcd60e51b81526004016102d090611346565b604051339082156108fc029083906000818181858888f1935050505015801561046f573d6000803e3d6000fd5b506002546040516370a0823160e01b815230600482015285916001600160a01b0316906370a0823190602401602060405180830381865afa1580156104b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104dc919061147c565b101561059c5760405162461bcd60e51b815260206004820152607960248201527f496e73756666696369656e7420616d6f756e74206f662074686520746f6b656e60448201527f20696e207468697320636f6e747261637420746f207472616e73666572206f7560648201527f742e20506c6561736520636f6e746163742074686520636f6e7472616374206f60848201527f776e657220746f20746f702075702074686520746f6b656e2e0000000000000060a482015260c4016102d0565b6002546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303816000875af11580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f9190611495565b508060075461062e9190611469565b600755602083015184036106e35760005b6005548110156106e157600081815260046020526040902054336001600160a01b03909116036106cf5760046000600160055461067c9190611417565b8152602080820192909252604090810160009081205484825260049093522080546001600160a01b0319166001600160a01b039092169190911790556005546106c790600190611417565b6005556106e1565b806106d9816114b7565b91505061063f565b505b6040518060a00160405280846000015181526020018585602001516107089190611417565b81526040808601516020830152016107208385611417565b81526020018285608001516107359190611469565b905233600081815260036020818152604080842086518155918601516001830155858101516002830155606086015192820192909255608090940151600490940193909355915190917f908e667f6c2b13b8062954eb100253ea804c21222b190449e40d967a3ac0ff1391a25050506107ae6001600055565b50565b600080805b6005548110156107ff576000818152600460205260409020546107e1906001600160a01b0316610ce1565b6107eb9083611469565b9150806107f7816114b7565b9150506107b6565b50919050565b61080d610e51565b600061081833610ce1565b9050808211156108895760405162461bcd60e51b815260206004820152603660248201527f57697468647261776e20616d6f756e74206d757374206265206c657373207468604482015275185b881dda5d1a191c985dd8589b1948185b5bdd5b9d60521b60648201526084016102d0565b33600090815260036020818152604092839020835160a08082018652825482526001830154828501908152600284015483880152948301546060808401919091526004909301546080830152855190810186528151815293519284019290925242938301939093529181016108fe8585611417565b81526020018483608001516109139190611469565b90523360009081526003602081815260409283902084518155908401516001820155918301516002830155606083015190820155608090910151600490910155478311156109735760405162461bcd60e51b81526004016102d090611346565b604051339084156108fc029085906000818181858888f193505050501580156109a0573d6000803e3d6000fd5b50826007546109af9190611469565b6007555050600160005550565b600080805b6005548110156107ff576000818152600460208181526040808420546001600160a01b03168452600380835293819020815160a08101835281548152600182015493810184905260028201549281019290925293840154606082015292909101546080830152610a319084611469565b9250508080610a3f906114b7565b9150506109c1565b610a4f610df7565b610a596000610eaa565b565b610a63610df7565b610a6b610efc565b600655565b610a78610e51565b60008111610ad95760405162461bcd60e51b815260206004820152602860248201527f5374616b656420616d6f756e74206e6565647320746f20626520677265617465604482015267072207468616e20360c41b60648201526084016102d0565b33600090815260036020818152604092839020835160a0810185528154815260018201549281018390526002820154948101949094529182015460608401526004909101546080830152610bd5576040518060a0016040528042815260200183815260200142815260200160008152602001600081525060036000610b5b3390565b6001600160a01b031681526020808201929092526040908101600090812084518155848401516001808301919091558584015160028301556060860151600383015560809095015160049182015560058054835293522080546001600160a01b0319163317905554610bcd9190611469565b600555610c93565b6040518060a00160405280428152602001838360200151610bf69190611469565b8152602001428152602001600854600654846040015142610c179190611417565b8560200151610c269190611430565b610c309190611430565b610c3a9190611447565b8360600151610c499190611469565b815260808381015160209283015233600090815260038084526040918290208551815593850151600185015590840151600284015560608401519083015591909101516004909101555b610cab336002546001600160a01b031690308561103d565b60405133907f77338642d9284a44296d29a273e04b8ab6b15c7d2439094cd460b7e4f0b3307490600090a2506107ae6001600055565b6001600160a01b0381166000908152600360208181526040808420815160a08101835281548152600182015493810193909352600281015491830182905292830154606083015260049092015460808201526008546006549192909190610d489042611417565b8360200151610d579190611430565b610d619190611430565b610d6b9190611447565b8160600151610d7a9190611469565b9392505050565b610d89610df7565b6001600160a01b038116610dee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102d0565b6107ae81610eaa565b6001546001600160a01b03163314610a595760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102d0565b600260005403610ea35760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016102d0565b6002600055565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60005b6005548110156107ae576000818152600460208181526040808420546001600160a01b03168452600380835293819020815160a080820184528254825260018301548286019081526002840154838601908152978401546060808501919091529390960154608083015283519081018452815181529451938501939093524291840182905260085460065495519395918501939092610f9e9190611417565b8560200151610fad9190611430565b610fb79190611430565b610fc19190611447565b8360600151610fd09190611469565b8152608092830151602091820152600084815260048083526040808320546001600160a01b03168352600380855292819020855181559385015160018501558401516002840155606084015191830191909155919092015191015580611035816114b7565b915050610eff565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261109790859061109d565b50505050565b60006110f2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111749092919063ffffffff16565b80519091501561116f57808060200190518101906111109190611495565b61116f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102d0565b505050565b6060611183848460008561118b565b949350505050565b6060824710156111ec5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102d0565b600080866001600160a01b0316858760405161120891906114f4565b60006040518083038185875af1925050503d8060008114611245576040519150601f19603f3d011682016040523d82523d6000602084013e61124a565b606091505b509150915061125b87838387611266565b979650505050505050565b606083156112d55782516000036112ce576001600160a01b0385163b6112ce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102d0565b5081611183565b61118383838151156112ea5781518083602001fd5b8060405162461bcd60e51b81526004016102d09190611510565b60006020828403121561131657600080fd5b5035919050565b60006020828403121561132f57600080fd5b81356001600160a01b0381168114610d7a57600080fd5b60208082526089908201527f496e73756666696369656e7420616d6f756e74206f66206e617469766520637560408201527f7272656e637920696e207468697320636f6e747261637420746f207472616e7360608201527f666572206f75742e20506c6561736520636f6e746163742074686520636f6e7460808201527f72616374206f776e657220746f20746f7020757020746865206e61746976652060a08201526831bab93932b731bc9760b91b60c082015260e00190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561142a5761142a611401565b92915050565b808202811582820484141761142a5761142a611401565b60008261146457634e487b7160e01b600052601260045260246000fd5b500490565b8082018082111561142a5761142a611401565b60006020828403121561148e57600080fd5b5051919050565b6000602082840312156114a757600080fd5b81518015158114610d7a57600080fd5b6000600182016114c9576114c9611401565b5060010190565b60005b838110156114eb5781810151838201526020016114d3565b50506000910152565b600082516115068184602087016114d0565b9190910192915050565b602081526000825180602084015261152f8160408501602087016114d0565b601f01601f1916919091016040019291505056fea2646970667358221220f411e223c09412914cc2e83ce4db8c484988a34b54f0b7cfaf5b3fe06c95248364736f6c63430008110033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA694FC3A GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xB583EA51 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0xD3CEC8BA EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0xDA5633EF EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x7F787414 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x523A3F08 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x523A3F08 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x57DED9C9 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x60464627 EQ PUSH2 0x1B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x15F5254E EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x2E82C983 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x4F0FD4CA EQ PUSH2 0x153 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x2A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x123 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x30A JUMP JUMPDEST PUSH2 0x140 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17C PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0x805 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x9BC JUMP JUMPDEST PUSH2 0x140 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x140 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x17C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1EA CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0xA5B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17C JUMP JUMPDEST PUSH2 0x123 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1304 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST PUSH2 0x140 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0x140 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26D PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x14A JUMP JUMPDEST PUSH2 0x123 PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x131D JUMP JUMPDEST PUSH2 0xD81 JUMP JUMPDEST PUSH2 0x2B0 PUSH2 0xDF7 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0x2D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x306 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x312 PUSH2 0xE51 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP3 GT ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5769746864726177696E67206D6F7265207468616E207374616B656420616D6F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1D5B9D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD DUP4 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x3CF SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD MLOAD PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST DUP3 PUSH1 0x60 ADD MLOAD PUSH2 0x401 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD MLOAD DUP5 DUP4 PUSH2 0x416 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST SWAP1 POP DUP1 SELFBALANCE LT ISZERO PUSH2 0x442 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP6 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4DC SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST LT ISZERO PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x79 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E74206F662074686520746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20696E207468697320636F6E747261637420746F207472616E73666572206F75 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x742E20506C6561736520636F6E746163742074686520636F6E7472616374206F PUSH1 0x84 DUP3 ADD MSTORE PUSH32 0x776E657220746F20746F702075702074686520746F6B656E2E00000000000000 PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0xC4 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x1495 JUMP JUMPDEST POP DUP1 PUSH1 0x7 SLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x20 DUP4 ADD MLOAD DUP5 SUB PUSH2 0x6E3 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SUB PUSH2 0x6CF JUMPI PUSH1 0x4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD DUP5 DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH2 0x6C7 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x6E1 JUMP JUMPDEST DUP1 PUSH2 0x6D9 DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x63F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x708 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x720 DUP4 DUP6 PUSH2 0x1417 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x735 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 MLOAD DUP2 SSTORE SWAP2 DUP7 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE DUP6 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x80 SWAP1 SWAP5 ADD MLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 PUSH32 0x908E667F6C2B13B8062954EB100253EA804C21222B190449E40D967A3AC0FF13 SWAP2 LOG2 POP POP POP PUSH2 0x7AE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7E1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0x7EB SWAP1 DUP4 PUSH2 0x1469 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x7F7 DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x7B6 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x80D PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x818 CALLER PUSH2 0xCE1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57697468647261776E20616D6F756E74206D757374206265206C657373207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x185B881DDA5D1A191C985DD8589B1948185B5BDD5B9D PUSH1 0x52 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP7 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP5 DUP4 ADD SLOAD PUSH1 0x60 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP6 MLOAD SWAP1 DUP2 ADD DUP7 MSTORE DUP2 MLOAD DUP2 MSTORE SWAP4 MLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE TIMESTAMP SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 ADD PUSH2 0x8FE DUP6 DUP6 PUSH2 0x1417 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP4 PUSH1 0x80 ADD MLOAD PUSH2 0x913 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP1 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 DUP4 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE SELFBALANCE DUP4 GT ISZERO PUSH2 0x973 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP1 PUSH2 0x1346 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x9A0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x7 SLOAD PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x7 SSTORE POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7FF JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x3 DUP1 DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP4 DUP5 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xA31 SWAP1 DUP5 PUSH2 0x1469 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0xA3F SWAP1 PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x9C1 JUMP JUMPDEST PUSH2 0xA4F PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xA59 PUSH1 0x0 PUSH2 0xEAA JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xDF7 JUMP JUMPDEST PUSH2 0xA6B PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH2 0xA78 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xAD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B656420616D6F756E74206E6565647320746F20626520677265617465 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x72207468616E203 PUSH1 0xC4 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0xA0 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP2 DUP3 ADD SLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 SWAP1 SWAP2 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0xBD5 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 PUSH2 0xB5B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP5 MLOAD DUP2 SSTORE DUP5 DUP5 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP6 DUP5 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 SWAP1 SWAP6 ADD MLOAD PUSH1 0x4 SWAP2 DUP3 ADD SSTORE PUSH1 0x5 DUP1 SLOAD DUP4 MSTORE SWAP4 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE SLOAD PUSH2 0xBCD SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0xC93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xBF6 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0xC17 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xC26 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xC3A SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xC49 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x80 DUP4 DUP2 ADD MLOAD PUSH1 0x20 SWAP3 DUP4 ADD MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP1 DUP5 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP4 DUP6 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP1 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP1 DUP4 ADD SSTORE SWAP2 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE JUMPDEST PUSH2 0xCAB CALLER PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 ADDRESS DUP6 PUSH2 0x103D JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0x77338642D9284A44296D29A273E04B8AB6B15C7D2439094CD460B7E4F0B33074 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP PUSH2 0x7AE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 DUP4 ADD DUP3 SWAP1 MSTORE SWAP3 DUP4 ADD SLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x4 SWAP1 SWAP3 ADD SLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xD48 SWAP1 TIMESTAMP PUSH2 0x1417 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD PUSH2 0xD57 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xD6B SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0xD7A SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD89 PUSH2 0xDF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH2 0x7AE DUP2 PUSH2 0xEAA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xEA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x7AE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x3 DUP1 DUP4 MSTORE SWAP4 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP5 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP3 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP5 ADD SLOAD DUP4 DUP7 ADD SWAP1 DUP2 MSTORE SWAP8 DUP5 ADD SLOAD PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP1 SWAP7 ADD SLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP4 MLOAD SWAP1 DUP2 ADD DUP5 MSTORE DUP2 MLOAD DUP2 MSTORE SWAP5 MLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE TIMESTAMP SWAP2 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x8 SLOAD PUSH1 0x6 SLOAD SWAP6 MLOAD SWAP4 SWAP6 SWAP2 DUP6 ADD SWAP4 SWAP1 SWAP3 PUSH2 0xF9E SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xFB7 SWAP2 SWAP1 PUSH2 0x1430 JUMP JUMPDEST PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x1447 JUMP JUMPDEST DUP4 PUSH1 0x60 ADD MLOAD PUSH2 0xFD0 SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x80 SWAP3 DUP4 ADD MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x4 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x3 DUP1 DUP6 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 MLOAD DUP2 SSTORE SWAP4 DUP6 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP1 SWAP3 ADD MLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x1035 DUP2 PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1097 SWAP1 DUP6 SWAP1 PUSH2 0x109D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10F2 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1174 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x116F JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1110 SWAP2 SWAP1 PUSH2 0x1495 JUMP JUMPDEST PUSH2 0x116F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x1BDD081CDD58D8D95959 PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1183 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x118B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x11EC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1C8818D85B1B PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1208 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1245 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x124A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x125B DUP8 DUP4 DUP4 DUP8 PUSH2 0x1266 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x12D5 JUMPI DUP3 MLOAD PUSH1 0x0 SUB PUSH2 0x12CE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x12CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2D0 JUMP JUMPDEST POP DUP2 PUSH2 0x1183 JUMP JUMPDEST PUSH2 0x1183 DUP4 DUP4 DUP2 MLOAD ISZERO PUSH2 0x12EA JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1510 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x132F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x89 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420616D6F756E74206F66206E6174697665206375 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x7272656E637920696E207468697320636F6E747261637420746F207472616E73 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x666572206F75742E20506C6561736520636F6E746163742074686520636F6E74 PUSH1 0x80 DUP3 ADD MSTORE PUSH32 0x72616374206F776E657220746F20746F7020757020746865206E617469766520 PUSH1 0xA0 DUP3 ADD MSTORE PUSH9 0x31BAB93932B731BC97 PUSH1 0xB9 SHL PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x142A JUMPI PUSH2 0x142A PUSH2 0x1401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x142A JUMPI PUSH2 0x142A PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1464 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x142A JUMPI PUSH2 0x142A PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x148E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x14C9 JUMPI PUSH2 0x14C9 PUSH2 0x1401 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14EB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14D3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1506 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x14D0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x152F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x14D0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL GT 0xE2 0x23 0xC0 SWAP5 SLT SWAP2 0x4C 0xC2 0xE8 EXTCODECOPY 0xE4 0xDB DUP13 BASEFEE 0x49 DUP9 LOG3 0x4B SLOAD CREATE 0xB7 0xCF 0xAF JUMPDEST EXTCODEHASH 0xE0 PUSH13 0x95248364736F6C634300081100 CALLER ","sourceMap":"479:15919:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16048:347;;;;;;:::i;:::-;;:::i;:::-;;9142:2033;;;;;;:::i;:::-;;:::i;2804:324::-;;;:::i;:::-;;;345:25:10;;;333:2;318:18;2804:324:9;;;;;;;;931:47;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;931:47:9;;;;;;-1:-1:-1;;;;;545:32:10;;;527:51;;515:2;500:18;931:47:9;381:203:10;12379:1064:9;;;;;;:::i;:::-;;:::i;2008:317::-;;;:::i;1036:31::-;;;;;;1074:44;;;;;;1831:101:0;;;:::i;648:26:9:-;;;;;-1:-1:-1;;;;;648:26:9;;;15379:151;;;;;;:::i;:::-;;:::i;1201:85:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;5608:1256:9;;;;;;:::i;:::-;;:::i;3657:353::-;;;;;;:::i;:::-;;:::i;985:44::-;;;;;;880;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1361:25:10;;;1417:2;1402:18;;1395:34;;;;1445:18;;;1438:34;;;;1503:2;1488:18;;1481:34;1546:3;1531:19;;1524:35;1348:3;1333:19;880:44:9;1102:463:10;2081:198:0;;;;;;:::i;:::-;;:::i;16048:347:9:-;1094:13:0;:11;:13::i;:::-;16170:4:9::1;16145:21;:29;;16122:218;;;;-1:-1:-1::0;;;16122:218:9::1;;;;;;;:::i;:::-;;;;;;;;;16351:36;::::0;719:10:7;;16351:36:9;::::1;;;::::0;16382:4;;16351:36:::1;::::0;;;16382:4;719:10:7;16351:36:9;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;16048:347:::0;:::o;9142:2033::-;2261:21:2;:19;:21::i;:::-;719:10:7;9213:24:9::1;9240::::0;;;:10:::1;:24;::::0;;;;;;;;9213:51;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;9298:34;::::1;;9275:121;;;::::0;-1:-1:-1;;;9275:121:9;;2399:2:10;9275:121:9::1;::::0;::::1;2381:21:10::0;2438:2;2418:18;;;2411:30;2477:34;2457:18;;;2450:62;-1:-1:-1;;;2528:18:10;;;2521:33;2571:19;;9275:121:9::1;2197:399:10::0;9275:121:9::1;9407:16;9598:7;;9591:3;;9545:10;:25;;;9527:15;:43;;;;:::i;:::-;9487:10;:19;;;:84;;;;:::i;:::-;:107;;;;:::i;:::-;9486:119;;;;:::i;:::-;9427:10;:42;;;:179;;;;:::i;:::-;9407:200;;9618:24;9686:10;:19;;;9658:11;9647:8;:22;;;;:::i;:::-;9646:59;;;;:::i;:::-;9618:88;;9765:16;9740:21;:41;;9717:230;;;;-1:-1:-1::0;;;9717:230:9::1;;;;;;;:::i;:::-;9958:48;::::0;719:10:7;;9958:48:9;::::1;;;::::0;9989:16;;9958:48:::1;::::0;;;9989:16;719:10:7;9958:48:9;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;10040:12:9::1;::::0;:37:::1;::::0;-1:-1:-1;;;10040:37:9;;10071:4:::1;10040:37;::::0;::::1;527:51:10::0;10081:11:9;;-1:-1:-1;;;;;10040:12:9::1;::::0;:22:::1;::::0;500:18:10;;10040:37:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;10017:225;;;::::0;-1:-1:-1;;;10017:225:9;;3782:2:10;10017:225:9::1;::::0;::::1;3764:21:10::0;3821:3;3801:18;;;3794:31;3861:34;3841:18;;;3834:62;3932:34;3912:18;;;3905:62;4004:34;3983:19;;;3976:63;4076:27;4055:19;;;4048:56;4121:19;;10017:225:9::1;3580:566:10::0;10017:225:9::1;10253:12;::::0;-1:-1:-1;;;;;10253:12:9::1;:21;719:10:7::0;10253:48:9::1;::::0;-1:-1:-1;;;;;;10253:48:9::1;::::0;;;;;;-1:-1:-1;;;;;4343:32:10;;;10253:48:9::1;::::0;::::1;4325:51:10::0;4392:18;;;4385:34;;;4298:18;;10253:48:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10351:16;10332;;:35;;;;:::i;:::-;10312:16;:56:::0;10399:19:::1;::::0;::::1;::::0;10384:34;;10379:468:::1;;10441:9;10436:400;10460:16;;10456:1;:20;10436:400;;;10507:15;::::0;;;:12:::1;:15;::::0;;;;;719:10:7;-1:-1:-1;;;;;10507:15:9;;::::1;:31:::0;10502:319:::1;;10582:12;:93;10649:1;10622:16;;:29;;;;:::i;:::-;10582:93:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;10582:93:9;;;;10564:15;;;:12:::1;:15:::0;;;;:111;;-1:-1:-1;;;;;;10564:111:9::1;-1:-1:-1::0;;;;;10582:93:9;;::::1;10564:111:::0;;;::::1;::::0;;10718:16:::1;::::0;:54:::1;::::0;10582:93;;10718:54:::1;:::i;:::-;10698:16;:75:::0;10796:5:::1;;10502:319;10478:3:::0;::::1;::::0;::::1;:::i;:::-;;;;10436:400;;;;10379:468;10884:245;;;;;;;;10905:10;:20;;;10884:245;;;;10963:11;10941:10;:19;;;:33;;;;:::i;:::-;10884:245:::0;;10990:25:::1;::::0;;::::1;::::0;10884:245:::1;::::0;::::1;::::0;;11031:27:::1;11042:16:::0;11031:8;:27:::1;:::i;:::-;10884:245;;;;11101:16;11075:10;:23;;;:42;;;;:::i;:::-;10884:245:::0;;719:10:7;10857:24:9::1;::::0;;;:10:::1;:24;::::0;;;;;;;:272;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;11145:22;;719:10:7;;11145:22:9::1;::::0;::::1;9202:1973;;;2303:20:2::0;1716:1;2809:7;:22;2629:209;2303:20;9142:2033:9;:::o;2804:324::-;2861:7;;;2918:180;2942:16;;2938:1;:20;2918:180;;;3051:15;;;;:12;:15;;;;;;3014:71;;-1:-1:-1;;;;;3051:15:9;3014:14;:71::i;:::-;2989:96;;:5;:96;:::i;:::-;2980:106;-1:-1:-1;2960:3:9;;;;:::i;:::-;;;;2918:180;;;-1:-1:-1;3115:5:9;2804:324;-1:-1:-1;2804:324:9:o;12379:1064::-;2261:21:2;:19;:21::i;:::-;12483:34:9::1;12520:60;719:10:7::0;3657:353:9;:::i;12520:60::-:1;12483:97;;12632:26;12614:14;:44;;12591:150;;;::::0;-1:-1:-1;;;12591:150:9;;5054:2:10;12591:150:9::1;::::0;::::1;5036:21:10::0;5093:2;5073:18;;;5066:30;5132:34;5112:18;;;5105:62;-1:-1:-1;;;5183:18:10;;;5176:52;5245:19;;12591:150:9::1;4852:418:10::0;12591:150:9::1;719:10:7::0;12752:24:9::1;12779::::0;;;:10:::1;:24;::::0;;;;;;;;12752:51;;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;12841:233;;;;::::1;::::0;;12862:20;;12841:233;;12897:19;;12841:233;;::::1;::::0;;;;12931:15:::1;12841:233:::0;;;;;;;12752:51;12841:233;;12962:43:::1;12991:14:::0;12962:26;:43:::1;:::i;:::-;12841:233;;;;13048:14;13022:10;:23;;;:40;;;;:::i;:::-;12841:233:::0;;719:10:7;12814:24:9::1;::::0;;;:10:::1;:24;::::0;;;;;;;;:260;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;13108:21:::1;-1:-1:-1::0;;13108:39:9::1;13085:228;;;;-1:-1:-1::0;;;13085:228:9::1;;;;;;;:::i;:::-;13324:46;::::0;719:10:7;;13324:46:9;::::1;;;::::0;13355:14;;13324:46:::1;::::0;;;13355:14;719:10:7;13324:46:9;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;13420:14;13401:16;;:33;;;;:::i;:::-;13381:16;:54:::0;-1:-1:-1;;1716:1:2;2809:7;:22;9142:2033:9;:::o;2008:317::-;2058:7;;;2115:180;2139:16;;2135:1;:20;2115:180;;;2177:24;2215:15;;;:12;:15;;;;;;;;;-1:-1:-1;;;;;2215:15:9;2204:27;;:10;:27;;;;;;;2177:54;;;;;;;;;;;2215:15;2177:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2255:27;;:5;:27;:::i;:::-;2246:37;;2162:133;2157:3;;;;;:::i;:::-;;;;2115:180;;1831:101:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;15379:151:9:-;1094:13:0;:11;:13::i;:::-;15463:38:9::1;:36;:38::i;:::-;15512:3;:10:::0;15379:151::o;5608:1256::-;2261:21:2;:19;:21::i;:::-;5718:1:9::1;5698:9;:22;5675:114;;;::::0;-1:-1:-1;;;5675:114:9;;5477:2:10;5675:114:9::1;::::0;::::1;5459:21:10::0;5516:2;5496:18;;;5489:30;5555:34;5535:18;;;5528:62;-1:-1:-1;;;5606:18:10;;;5599:38;5654:19;;5675:114:9::1;5275:404:10::0;5675:114:9::1;719:10:7::0;5800:24:9::1;5827::::0;;;:10:::1;:24;::::0;;;;;;;;5800:51;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;5862:879:::1;;5945:175;;;;;;;;5970:15;5945:175;;;;6004:9;5945:175;;;;6032:15;5945:175;;;;6074:1;5945:175;;;;6103:1;5945:175;;::::0;5918:10:::1;:24;5929:12;719:10:7::0;;640:96;5929:12:9::1;-1:-1:-1::0;;;;;5918:24:9::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;5918:24:9;;;:202;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;6148:16:::1;::::0;;6135:30;;;;;:45;;-1:-1:-1;;;;;;6135:45:9::1;719:10:7::0;6135:45:9::1;::::0;;6215:16;:46:::1;::::0;5918:202;6215:46:::1;:::i;:::-;6195:16;:67:::0;5862:879:::1;;;6322:407;;;;;;;;6347:15;6322:407;;;;6404:9;6382:10;:19;;;:31;;;;:::i;:::-;6322:407;;;;6433:15;6322:407;;;;6663:7;;6656:3;;6602:10;:25;;;6584:15;:43;;;;:::i;:::-;6536:10;:19;;;:92;;;;:::i;:::-;:123;;;;:::i;:::-;6535:135;;;;:::i;:::-;6468:10;:42;;;:203;;;;:::i;:::-;6322:407:::0;;6691:23:::1;::::0;;::::1;::::0;6322:407:::1;::::0;;::::1;::::0;719:10:7;-1:-1:-1;6295:24:9;;;:10:::1;:24:::0;;;;;;;;:434;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;-1:-1:-1;6295:434:9;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;5862:879:::1;6751:69;719:10:7::0;6751:12:9::1;::::0;-1:-1:-1;;;;;6751:12:9::1;::::0;6803:4:::1;6810:9:::0;6751:29:::1;:69::i;:::-;6836:20;::::0;719:10:7;;6836:20:9::1;::::0;;;::::1;5664:1200;2303:20:2::0;1716:1;2809:7;:22;2629:209;3657:353:9;-1:-1:-1;;;;;3783:20:9;;3736:7;3783:20;;;:10;:20;;;;;;;;3756:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3993:7;;3986:3;;3756:47;;3993:7;;3986:3;3922:43;;:15;:43;:::i;:::-;3882:10;:19;;;:84;;;;:::i;:::-;:107;;;;:::i;:::-;3881:119;;;;:::i;:::-;3822:10;:42;;;:179;;;;:::i;:::-;3814:188;3657:353;-1:-1:-1;;;3657:353:9:o;2081:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:0;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:0;;5886:2:10;2161:73:0::1;::::0;::::1;5868:21:10::0;5925:2;5905:18;;;5898:30;5964:34;5944:18;;;5937:62;-1:-1:-1;;;6015:18:10;;;6008:36;6061:19;;2161:73:0::1;5684:402:10::0;2161:73:0::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1273:6;;-1:-1:-1;;;;;1273:6:0;719:10:7;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6293:2:10;1414:68:0;;;6275:21:10;;;6312:18;;;6305:30;6371:34;6351:18;;;6344:62;6423:18;;1414:68:0;6091:356:10;2336:287:2;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:2;;6654:2:10;2460:63:2;;;6636:21:10;6693:2;6673:18;;;6666:30;6732:33;6712:18;;;6705:61;6783:18;;2460:63:2;6452:355:10;2460:63:2;1759:1;2598:7;:18;2336:287::o;2433:187:0:-;2525:6;;;-1:-1:-1;;;;;2541:17:0;;;-1:-1:-1;;;;;;2541:17:0;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14253:645:9:-;14326:9;14321:570;14345:16;;14341:1;:20;14321:570;;;14383:24;14421:15;;;:12;:15;;;;;;;;;-1:-1:-1;;;;;14421:15:9;14410:27;;:10;:27;;;;;;;14383:54;;;;;;;;;;;;14421:15;14383:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14482:397;;;;;;;14507:20;;14482:397;;14546:19;;14482:397;;;;;;;14584:15;14482:397;;;;;;14813:7;;14807:3;;14753:25;;14383:54;;14482:397;;;;14813:7;;14735:43;;14753:25;14735:43;:::i;:::-;14687:10;:19;;;:92;;;;:::i;:::-;:123;;;;:::i;:::-;14686:134;;;;:::i;:::-;14619:10;:42;;;:202;;;;:::i;:::-;14482:397;;14841:23;;;;;14482:397;;;;;-1:-1:-1;14463:15:9;;;:12;:15;;;;;;;;-1:-1:-1;;;;;14463:15:9;14452:27;;:10;:27;;;;;;;:427;;;;;;;;14463:15;14452:427;;;;;;;;;;-1:-1:-1;14452:427:9;;;;;;;;;;;;;;;;;;14476:1;14363:3;14476:1;14363:3;:::i;:::-;;;;14321:570;;974:241:5;1139:68;;;-1:-1:-1;;;;;7070:15:10;;;1139:68:5;;;7052:34:10;7122:15;;7102:18;;;7095:43;7154:18;;;;7147:34;;;1139:68:5;;;;;;;;;;6987:18:10;;;;1139:68:5;;;;;;;;-1:-1:-1;;;;;1139:68:5;-1:-1:-1;;;1139:68:5;;;1112:96;;1132:5;;1112:19;:96::i;:::-;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:5;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:5;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:5;;7394:2:10;4351:85:5;;;7376:21:10;7433:2;7413:18;;;7406:30;7472:34;7452:18;;;7445:62;-1:-1:-1;;;7523:18:10;;;7516:40;7573:19;;4351:85:5;7192:406:10;4351:85:5;3817:636;3747:706;;:::o;3873:223:6:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;3873:223;-1:-1:-1;;;;3873:223:6:o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;-1:-1:-1;;;5149:81:6;;7805:2:10;5149:81:6;;;7787:21:10;7844:2;7824:18;;;7817:30;7883:34;7863:18;;;7856:62;-1:-1:-1;;;7934:18:10;;;7927:36;7980:19;;5149:81:6;7603:402:10;5149:81:6;5241:12;5255:23;5282:6;-1:-1:-1;;;;;5282:11:6;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:6:o;7466:628::-;7646:12;7674:7;7670:418;;;7701:10;:17;7722:1;7701:22;7697:286;;-1:-1:-1;;;;;1465:19:6;;;7908:60;;;;-1:-1:-1;;;7908:60:6;;8759:2:10;7908:60:6;;;8741:21:10;8798:2;8778:18;;;8771:30;8837:31;8817:18;;;8810:59;8886:18;;7908:60:6;8557:353:10;7908:60:6;-1:-1:-1;8003:10:6;7996:17;;7670:418;8044:33;8052:10;8064:12;8775:17;;:21;8771:379;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;-1:-1:-1;;;9119:20:6;;;;;;;;:::i;14:180:10:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:10;;14:180;-1:-1:-1;14:180:10:o;811:286::-;870:6;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;965:23;;-1:-1:-1;;;;;1017:31:10;;1007:42;;997:70;;1063:1;1060;1053:12;1570:622;1772:2;1754:21;;;1811:3;1791:18;;;1784:31;1851:34;1846:2;1831:18;;1824:62;1922:34;1917:2;1902:18;;1895:62;1994:34;1988:3;1973:19;;1966:63;2066:34;2060:3;2045:19;;2038:63;-1:-1:-1;;;2132:3:10;2117:19;;2110:40;2182:3;2167:19;;1570:622::o;2601:127::-;2662:10;2657:3;2653:20;2650:1;2643:31;2693:4;2690:1;2683:15;2717:4;2714:1;2707:15;2733:128;2800:9;;;2821:11;;;2818:37;;;2835:18;;:::i;:::-;2733:128;;;;:::o;2866:168::-;2939:9;;;2970;;2987:15;;;2981:22;;2967:37;2957:71;;3008:18;;:::i;3039:217::-;3079:1;3105;3095:132;;3149:10;3144:3;3140:20;3137:1;3130:31;3184:4;3181:1;3174:15;3212:4;3209:1;3202:15;3095:132;-1:-1:-1;3241:9:10;;3039:217::o;3261:125::-;3326:9;;;3347:10;;;3344:36;;;3360:18;;:::i;3391:184::-;3461:6;3514:2;3502:9;3493:7;3489:23;3485:32;3482:52;;;3530:1;3527;3520:12;3482:52;-1:-1:-1;3553:16:10;;3391:184;-1:-1:-1;3391:184:10:o;4430:277::-;4497:6;4550:2;4538:9;4529:7;4525:23;4521:32;4518:52;;;4566:1;4563;4556:12;4518:52;4598:9;4592:16;4651:5;4644:13;4637:21;4630:5;4627:32;4617:60;;4673:1;4670;4663:12;4712:135;4751:3;4772:17;;;4769:43;;4792:18;;:::i;:::-;-1:-1:-1;4839:1:10;4828:13;;4712:135::o;8010:250::-;8095:1;8105:113;8119:6;8116:1;8113:13;8105:113;;;8195:11;;;8189:18;8176:11;;;8169:39;8141:2;8134:10;8105:113;;;-1:-1:-1;;8252:1:10;8234:16;;8227:27;8010:250::o;8265:287::-;8394:3;8432:6;8426:13;8448:66;8507:6;8502:3;8495:4;8487:6;8483:17;8448:66;:::i;:::-;8530:16;;;;;8265:287;-1:-1:-1;;8265:287:10:o;8915:396::-;9064:2;9053:9;9046:21;9027:4;9096:6;9090:13;9139:6;9134:2;9123:9;9119:18;9112:34;9155:79;9227:6;9222:2;9211:9;9207:18;9202:2;9194:6;9190:15;9155:79;:::i;:::-;9295:2;9274:15;-1:-1:-1;;9270:29:10;9255:45;;;;9302:2;9251:54;;8915:396;-1:-1:-1;;8915:396:10:o"},"methodIdentifiers":{"addressMap(address)":"da5633ef","addressStore(uint256)":"4f0fd4ca","apr()":"57ded9c9","modifyapr(uint256)":"7f787414","owner()":"8da5cb5b","presentEarning(address)":"b583ea51","renounceOwnership()":"715018a6","stake(uint256)":"a694fc3a","stakingAddresses()":"d3cec8ba","stakingToken()":"72f702f3","totalAccumulatedInterest()":"2e82c983","totalStakedAmount()":"567e98f9","totalWithdrawals()":"60464627","transferOwnership(address)":"f2fde38b","unstake(uint256)":"2e17de78","withdrawNativeCurrency(uint256)":"15f5254e","withdrawReward(uint256)":"523a3f08"}},"metadata":"{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumulatedInterestToUpdateTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amtWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"addressStore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_apr\",\"type\":\"uint256\"}],\"name\":\"modifyapr\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"presentEarning\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_stakeAmt\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAccumulatedInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unstakeAmt\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amt\",\"type\":\"uint256\"}],\"name\":\"withdrawNativeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalAmt\",\"type\":\"uint256\"}],\"name\":\"withdrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"modifyapr(uint256)\":{\"notice\":\"Function modifyapr Notes for _apr : 10000 is one percent The function takes in 1 variable, (zero or a positive integer) _apr. It can be called by functions both inside and outside of this contract. It does the following : checks that the function is called by the owner of the contract calls updateRecordsWithLatestInterestRates updates apr as _apr\"},\"presentEarning(address)\":{\"notice\":\"Function presentEarning The function takes in 1 variable, (an address) _address. It can be called by functions both inside and outside of this contract. It does the following : creates an internal variable thisRecord with initial value addressMap with element _address returns (thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864)) as output\"},\"stake(uint256)\":{\"notice\":\"Function stake Daily Interest Rate : Variable apr Address Map : addressMap ERC20 Transfer : 0x33D512a749f6feFaDB832c91c0F23Bc27bE2E3d4, _stakeAmt The function takes in 1 variable, (zero or a positive integer) _stakeAmt. It can be called by functions both inside and outside of this contract. It does the following : checks that _stakeAmt is strictly greater than 0 creates an internal variable thisRecord with initial value addressMap with element the address that called this function if (thisRecord with element stakeAmt) is equals to 0 then (updates addressMap (Element the address that called this function) as Struct comprising current time, _stakeAmt, current time, 0, 0; then updates addressStore (Element stakingAddresses) as the address that called this function; and then updates stakingAddresses as (stakingAddresses) + (1)) otherwise (updates addressMap (Element the address that called this function) as Struct comprising current time, ((thisRecord with element stakeAmt) + (_stakeAmt)), current time, ((thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864))), (thisRecord with element amtWithdrawn)) calls ERC20's transferFrom function  with variable sender as the address that called this function, variable recipient as the address of this contract, variable amount as _stakeAmt emits event Staked with inputs the address that called this function\"},\"totalAccumulatedInterest()\":{\"notice\":\"Function totalAccumulatedInterest The function takes in 0 variables. It can be called by functions both inside and outside of this contract. It does the following : creates an internal variable total with initial value 0 repeat stakingAddresses times with loop variable i :  (updates total as (total) + (presentEarning with variable _address as addressStore with element Loop Variable i)) returns total as output\"},\"totalStakedAmount()\":{\"notice\":\"Function totalStakedAmount The function takes in 0 variables. It can be called by functions both inside and outside of this contract. It does the following : creates an internal variable total with initial value 0 repeat stakingAddresses times with loop variable i :  (creates an internal variable thisRecord with initial value addressMap with element addressStore with element Loop Variable i; and then updates total as (total) + (thisRecord with element stakeAmt)) returns total as output\"},\"unstake(uint256)\":{\"notice\":\"Function unstake The function takes in 1 variable, (zero or a positive integer) _unstakeAmt. It can be called by functions both inside and outside of this contract. It does the following : creates an internal variable thisRecord with initial value addressMap with element the address that called this function checks that _unstakeAmt is less than or equals to (thisRecord with element stakeAmt) creates an internal variable newAccum with initial value (thisRecord with element accumulatedInterestToUpdateTime) + (((thisRecord with element stakeAmt) * ((current time) - (thisRecord with element lastUpdateTime)) * (apr) * (10)) / (864)) creates an internal variable interestToRemove with initial value ((newAccum) * (_unstakeAmt)) / (thisRecord with element stakeAmt) checks that (amount of native currency owned by the address of this contract) is greater than or equals to interestToRemove transfers interestToRemove of the native currency to the address that called this function checks that (ERC20's balanceOf function  with variable recipient as the address of this contract) is greater than or equals to _unstakeAmt calls ERC20's transfer function  with variable recipient as the address that called this function, variable amount as _unstakeAmt updates totalWithdrawals as (totalWithdrawals) + (interestToRemove) if _unstakeAmt is equals to (thisRecord with element stakeAmt) then (repeat stakingAddresses times with loop variable i :  (if (addressStore with element Loop Variable i) is equals to (the address that called this function) then (updates addressStore (Element Loop Variable i) as addressStore with element (stakingAddresses) - (1); then updates stakingAddresses as (stakingAddresses) - (1); and then terminates the for-next loop))) updates addressMap (Element the address that called this function) as Struct comprising (thisRecord with element stakeTime), ((thisRecord with element stakeAmt) - (_unstakeAmt)), (thisRecord with element lastUpdateTime), ((newAccum) - (interestToRemove)), ((thisRecord with element amtWithdrawn) + (interestToRemove)) emits event Unstaked with inputs the address that called this function\"},\"withdrawNativeCurrency(uint256)\":{\"notice\":\"Function withdrawNativeCurrency The function takes in 1 variable, (zero or a positive integer) _amt. It can be called by functions both inside and outside of this contract. It does the following : checks that the function is called by the owner of the contract checks that (amount of native currency owned by the address of this contract) is greater than or equals to _amt transfers _amt of the native currency to the address that called this function\"},\"withdrawReward(uint256)\":{\"notice\":\"Function withdrawReward The function takes in 1 variable, (zero or a positive integer) _withdrawalAmt. It can only be called by functions outside of this contract. It does the following : creates an internal variable totalInterestEarnedTillNow with initial value presentEarning with variable _address as the address that called this function checks that _withdrawalAmt is less than or equals to totalInterestEarnedTillNow creates an internal variable thisRecord with initial value addressMap with element the address that called this function updates addressMap (Element the address that called this function) as Struct comprising (thisRecord with element stakeTime), (thisRecord with element stakeAmt), current time, ((totalInterestEarnedTillNow) - (_withdrawalAmt)), ((thisRecord with element amtWithdrawn) + (_withdrawalAmt)) checks that (amount of native currency owned by the address of this contract) is greater than or equals to _withdrawalAmt transfers _withdrawalAmt of the native currency to the address that called this function updates totalWithdrawals as (totalWithdrawals) + (_withdrawalAmt)\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SHRFStaking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"contracts/SHRFStaking.sol\":{\"keccak256\":\"0x38f3e203c32bae52ca6d929a96ca0b1b4f8b9b44c02e0fc94bffa6ff7b5c8751\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://63777ec83fb3be5c8dd49e6c6b06a8973eca4720071dd90f37310f826dec8ec6\",\"dweb:/ipfs/QmZCcAHvLFG5mdFqj6g5nKiCfVUKTqwJUmKEmNxmGjZ8fe\"]}},\"version\":1}"}}}}}